<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZeroDY&#39;s Blogs</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-06-04T15:23:44.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ZeroDY</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ShougongkeDemo(仿“手工客”iOS App)说明</title>
    <link href="http://yoursite.com/2016/06/02/ShougongkeDemo(%E4%BB%BF%E2%80%9C%E6%89%8B%E5%B7%A5%E5%AE%A2%E2%80%9DiOS%20App)/"/>
    <id>http://yoursite.com/2016/06/02/ShougongkeDemo(仿“手工客”iOS App)/</id>
    <published>2016-06-02T13:07:10.000Z</published>
    <updated>2016-06-04T15:23:44.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://o76hg1e0m.bkt.clouddn.com/sgk_logo.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h1 id=&quot;郑重声明&quot;&gt;&lt;a href=&quot;#郑重声明&quot; class=&quot;headerlink&quot; title=&quot;郑重声明&quot;&gt;&lt;/a&gt;郑重声明&lt;/h1&gt;&lt;p&gt;本项目用于自身学习，以及为找工作做准备。&lt;br&gt;如无意间对您有所冒犯，请联系 deyi233@gmail.com&lt;/p&gt;
&lt;p&gt;我将尽快删除，谢谢。&lt;/p&gt;
&lt;p&gt;代码地址 &lt;a href=&quot;https://github.com/ZeroDY/ShougongkeDemo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/ZeroDY/ShougongkeDemo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;一、为什么要做一个仿制App&quot;&gt;&lt;a href=&quot;#一、为什么要做一个仿制App&quot; class=&quot;headerlink&quot; title=&quot;一、为什么要做一个仿制App&quot;&gt;&lt;/a&gt;一、为什么要做一个仿制App&lt;/h1&gt;&lt;p&gt;从上家公司离职以来，由于个人原因一直耽误找工作。5月份上旬开始准备找工作时，&lt;br&gt;打算把自己工作这一段时间以来掌握的东西做一下整理，最好通过完整的项目做一下展示，既展示了自己，又方便用人单位。&lt;br&gt;但不能拿原公司商业化的东西展示；自己做一个新的 APP，后台编写又会耽误太多时间；所以就萌生仿制一款现有成熟App的想法。&lt;/p&gt;
&lt;h2 id=&quot;为什么是“手工客”&quot;&gt;&lt;a href=&quot;#为什么是“手工客”&quot; class=&quot;headerlink&quot; title=&quot;为什么是“手工客”&quot;&gt;&lt;/a&gt;为什么是“手工客”&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;首先，“手工客”相较于微博等客户端，功能专一，界面简洁，复杂程度低，但细节处理又不错，难度适中&lt;/li&gt;
&lt;li&gt;其次，个人比较倾向于寻找文化传播、社交分享一类的工作&lt;/li&gt;
&lt;li&gt;最后，本人是一个手工爱好者（虽然手艺差点），更符合兴趣爱好，有动力&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;二、项目说明&quot;&gt;&lt;a href=&quot;#二、项目说明&quot; class=&quot;headerlink&quot; title=&quot;二、项目说明&quot;&gt;&lt;/a&gt;二、项目说明&lt;/h1&gt;&lt;h2 id=&quot;仿制版本&quot;&gt;&lt;a href=&quot;#仿制版本&quot; class=&quot;headerlink&quot; title=&quot;仿制版本&quot;&gt;&lt;/a&gt;仿制版本&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;截止5月18号最新版本 手工客 V5.7.3&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;开发环境&quot;&gt;&lt;a href=&quot;#开发环境&quot; class=&quot;headerlink&quot; title=&quot;开发环境&quot;&gt;&lt;/a&gt;开发环境&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Xcode 7.2.1&lt;br&gt;由于自己比较依赖代码提示，最新的 Xcode 7.3系列 ,大家都知道的代码提示问题，果断装回7.2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;语言&quot;&gt;&lt;a href=&quot;#语言&quot; class=&quot;headerlink&quot; title=&quot;语言&quot;&gt;&lt;/a&gt;语言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Objective-C&lt;br&gt;Swift 虽然有用过，但还是Objective-C比较熟练&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;运行环境&quot;&gt;&lt;a href=&quot;#运行环境&quot; class=&quot;headerlink&quot; title=&quot;运行环境&quot;&gt;&lt;/a&gt;运行环境&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;iOS8+&lt;br&gt;时间原因，未做 iOS8以下版本的适配，真机测试5s，其他为模拟器测试&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;完成度&quot;&gt;&lt;a href=&quot;#完成度&quot; class=&quot;headerlink&quot; title=&quot;完成度&quot;&gt;&lt;/a&gt;完成度&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;项目初始目标为未登录状态下所有功能界面&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现未开发的功能有：跳转购买，用户主页两大模块，后期将逐步完成&lt;/p&gt;
&lt;p&gt;其他页面中存在少数页面细节遗漏，后期逐步优化&lt;/p&gt;
&lt;h1 id=&quot;三、开发说明&quot;&gt;&lt;a href=&quot;#三、开发说明&quot; class=&quot;headerlink&quot; title=&quot;三、开发说明&quot;&gt;&lt;/a&gt;三、开发说明&lt;/h1&gt;&lt;h2 id=&quot;1-架构&quot;&gt;&lt;a href=&quot;#1-架构&quot; class=&quot;headerlink&quot; title=&quot;1.架构&quot;&gt;&lt;/a&gt;1.架构&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;采用传统的MVC架构。&lt;br&gt;项目前期曾考虑ReactiveCocoa的使用，但虽然MVVM模式及ReactiveCocoa也曾有所涉猎，但毕竟不够熟练，所以未予采用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;在单一样式cell的界面中，使用自定义的dataSource及delegate对 UITableView 及 UICollectionView从 controller 中剥离，进行瘦身。个别 cell 多样结构略复杂的界面，随未做瘦身，但尽量简化 controller 的处理，例如“首页”和“市集”界面&lt;/li&gt;
&lt;li&gt;数据处理基本放在 model 层完成，个别数据简单的放在 getter 中完成 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;2-开发方式&quot;&gt;&lt;a href=&quot;#2-开发方式&quot; class=&quot;headerlink&quot; title=&quot;2.开发方式&quot;&gt;&lt;/a&gt;2.开发方式&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;纯代码开发。&lt;br&gt;在查看“手工客”的安装包时，发现使用的是storyboard及xib文件开发。&lt;br&gt;考虑到在公司开发中的版本整合中避免不必要的麻烦，个人更倾向于纯代码开发。&lt;br&gt;当然storyboard及xib个人也是比较熟练的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;3-资源&quot;&gt;&lt;a href=&quot;#3-资源&quot; class=&quot;headerlink&quot; title=&quot;3.资源&quot;&gt;&lt;/a&gt;3.资源&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;项目中绝大部分图片资源来自手工客Android端。&lt;br&gt;在项目初期，从手工客iOS端获取图片资源后，发现大部分图片是没有得到的，所以转而考虑从 Android 端获取，最后实在找不到的，再自己从运行截图上抠(比如下拉刷新的小剪刀)。&lt;br&gt;所以，在图片的使用上可能跟原版存在细微差别。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;4-接口&quot;&gt;&lt;a href=&quot;#4-接口&quot; class=&quot;headerlink&quot; title=&quot;4.接口&quot;&gt;&lt;/a&gt;4.接口&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;使用Charles抓取接口。&lt;br&gt;考虑到安全问题，捕获接口全部为未登录状态下的接口&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;5-第三方类库&quot;&gt;&lt;a href=&quot;#5-第三方类库&quot; class=&quot;headerlink&quot; title=&quot;5.第三方类库&quot;&gt;&lt;/a&gt;5.第三方类库&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;AFNetworking  -  结合&lt;a href=&quot;https://github.com/CoderJackyHuang/HYBNetworking&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HYBNetworking&lt;/a&gt;以及自身开发需求经验，对AFNetworking进行简单二次封装&lt;/li&gt;
&lt;li&gt;Masonry   -  从去年学习了Masonry之后就开始放弃了拖拽开发……&lt;/li&gt;
&lt;li&gt;MJExtension - 结合 ESJsonFormat 插件使用， model 的创建效率提升很高。但未对接口数据进行过滤，所以项目中存在部分无用的属性&lt;/li&gt;
&lt;li&gt;MJRefresh - 使用MJRefresh自定义了下拉刷新&lt;/li&gt;
&lt;li&gt;UITableView+FDTemplateLayoutCell - 不得不说这个计算行高，真的超好用&lt;/li&gt;
&lt;li&gt;自己写的常用的几个：DYBannerView - 滚动条 、 DYMenu - 单级菜单  、DYSegment - 分段选择 略作修改整合到项目中&lt;/li&gt;
&lt;li&gt;其他的如SDWebImage、MWPhotoBrowser、IQKeyboardManager不做多解释&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;四、问题说明&quot;&gt;&lt;a href=&quot;#四、问题说明&quot; class=&quot;headerlink&quot; title=&quot;四、问题说明&quot;&gt;&lt;/a&gt;四、问题说明&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;由于接口自己抓取、缺少设计文档、自己的不注意等种种原因，接口中数据的使用可能会不准确，页面布局在其他机型可能不合理，造成项目中经常会出现诸如无法跳转、图片过大、文字越界等问题，后期将逐步优化。&lt;/li&gt;
&lt;li&gt;另外为了展示首次安装的引导页面，关闭了二次开启跳过此页面的代码。&lt;/li&gt;
&lt;li&gt;相关命名从为了便于开发，与接口一致，可能有待斟酌&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;五、部分效果展示&quot;&gt;&lt;a href=&quot;#五、部分效果展示&quot; class=&quot;headerlink&quot; title=&quot;五、部分效果展示&quot;&gt;&lt;/a&gt;五、部分效果展示&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;首页 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://o76hg1e0m.bkt.clouddn.com/sgk-show01.gif&quot; alt=&quot;首页.gif&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;教程 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://o76hg1e0m.bkt.clouddn.com/sgk-show02.gif&quot; alt=&quot;教程.gif&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;市集 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://o76hg1e0m.bkt.clouddn.com/sgk-show04.gif&quot; alt=&quot;市集.gif&quot;&gt;&lt;/p&gt;
&lt;iframe height=&quot;568&quot; width=&quot;320&quot; src=&quot;http://player.youku.com/embed/XMTU5NjEzMjE3Mg==&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h1&gt;&lt;p&gt;水平不高，能力有限，望多指正。&lt;br&gt;开发中遇到的问题，代码整理，经验总结等，请移步 &lt;a href=&quot;http://www.zerody.me&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我的博客&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;这才是真的最后&quot;&gt;&lt;a href=&quot;#这才是真的最后&quot; class=&quot;headerlink&quot; title=&quot;这才是真的最后&quot;&gt;&lt;/a&gt;这才是真的最后&lt;/h1&gt;&lt;p&gt;放个我的手工作品镇楼&lt;br&gt;&lt;img src=&quot;http://o76hg1e0m.bkt.clouddn.com/IMG_20140123_113242.jpg&quot; alt=&quot;&quot;&gt;  &lt;img src=&quot;http://o76hg1e0m.bkt.clouddn.com/IMG_20140123_112739.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o76hg1e0m.bkt.clouddn.com/sgk_logo.JPG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h1 id=&quot;郑重声明&quot;&gt;&lt;a href=&quot;#郑重声明&quot; class=&quot;headerlink&quot; title=&quot;郑重声明&quot;&gt;&lt;/a&gt;郑重声明&lt;/h1&gt;&lt;p&gt;本项目用于自身学习，以及为找工作做准备。&lt;br&gt;如无意间对您有所冒犯，请联系 deyi233@gmail.com&lt;/p&gt;
&lt;p&gt;我将尽快删除，谢谢。&lt;/p&gt;
&lt;p&gt;代码地址 &lt;a href=&quot;https://github.com/ZeroDY/ShougongkeDemo&quot;&gt;https://github.com/ZeroDY/ShougongkeDemo&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="开发" scheme="http://yoursite.com/categories/%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="手工客" scheme="http://yoursite.com/tags/%E6%89%8B%E5%B7%A5%E5%AE%A2/"/>
    
      <category term="仿" scheme="http://yoursite.com/tags/%E4%BB%BF/"/>
    
  </entry>
  
  <entry>
    <title>深入理解Objective-C:Category</title>
    <link href="http://yoursite.com/2016/05/12/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Objective-C-Category/"/>
    <id>http://yoursite.com/2016/05/12/深入理解Objective-C-Category/</id>
    <published>2016-05-12T07:03:59.000Z</published>
    <updated>2016-06-15T04:16:13.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;无论一个类设计的多么完美，在未来的需求演进中，都有可能会碰到一些无法预测的情况。那怎么扩展已有的类呢？一般而言，继承和组合是不错的选择。但是在Objective-C 2.0中，又提供了category这个语言特性，可以动态地为已有类添加新行为。如今category已经遍布于Objective-C代码的各个角落，从Apple官方的framework到各个开源框架，从功能繁复的大型APP到简单的应用，catagory无处不在。本文对category做了比较全面的整理，希望对读者有所裨益。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;本文作者来自美团酒店旅游事业群iOS研发组。我们致力于创造价值、提升效率、追求卓越。欢迎大家加入我们（简历请发送到邮箱majia03@meituan.com）。&lt;br&gt;本文系学习Objective-C的runtime源码时整理所成，主要剖析了category在runtime层的实现原理以及和category相关的方方面面，内容包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;初入宝地-category简介&lt;/li&gt;
&lt;li&gt;连类比事-category和extension&lt;/li&gt;
&lt;li&gt;挑灯细览-category真面目&lt;/li&gt;
&lt;li&gt;追本溯源-category如何加载&lt;/li&gt;
&lt;li&gt;旁枝末叶-category和+load方法&lt;/li&gt;
&lt;li&gt;触类旁通-category和方法覆盖&lt;/li&gt;
&lt;li&gt;更上一层-category和关联对象&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;1、初入宝地-category简介&quot;&gt;&lt;a href=&quot;#1、初入宝地-category简介&quot; class=&quot;headerlink&quot; title=&quot;1、初入宝地-category简介&quot;&gt;&lt;/a&gt;1、初入宝地-category简介&lt;/h1&gt;&lt;p&gt;category是Objective-C 2.0之后添加的语言特性，category的主要作用是为已经存在的类添加方法。除此之外，apple还推荐了category的另外两个使用场景&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/General/Conceptual/DevPedia-CocoaCore/Category.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;1&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以把类的实现分开在几个不同的文件里面。这样做有几个显而易见的好处，a)可以减少单个文件的体积 b)可以把不同的功能组织到不同的category里 c)可以由多个开发者共同完成一个类 d)可以按需加载想要的category 等等。&lt;/li&gt;
&lt;li&gt;声明私有方法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不过除了apple推荐的使用场景，广大开发者脑洞大开，还衍生出了category的其他几个使用场景：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;模拟多继承&lt;/li&gt;
&lt;li&gt;把framework的私有方法公开&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Objective-C的这个语言特性对于纯动态语言来说可能不算什么，比如javascript，你可以随时为一个“类”或者对象添加任意方法和实例变量。但是对于不是那么“动态”的语言而言，这确实是一个了不起的特性。&lt;/p&gt;
&lt;h1 id=&quot;2、连类比事-category和extension&quot;&gt;&lt;a href=&quot;#2、连类比事-category和extension&quot; class=&quot;headerlink&quot; title=&quot;2、连类比事-category和extension&quot;&gt;&lt;/a&gt;2、连类比事-category和extension&lt;/h1&gt;&lt;p&gt;extension看起来很像一个匿名的category，但是extension和有名字的category几乎完全是两个东西。 extension在编译期决议，它就是类的一部分，在编译期和头文件里的@interface以及实现文件里的@implement一起形成一个完整的类，它伴随类的产生而产生，亦随之一起消亡。extension一般用来隐藏类的私有信息，你必须有一个类的源码才能为一个类添加extension，所以你无法为系统的类比如NSString添加extension。（详见&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/CustomizingExistingClasses/CustomizingExistingClasses.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;2&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;但是category则完全不一样，它是在运行期决议的。&lt;br&gt;就category和extension的区别来看，我们可以推导出一个明显的事实，extension可以添加实例变量，而category是无法添加实例变量的（因为在运行期，对象的内存布局已经确定，如果添加实例变量就会破坏类的内部布局，这对编译型语言来说是灾难性的）。&lt;/p&gt;
&lt;h1 id=&quot;3、挑灯细览-category真面目&quot;&gt;&lt;a href=&quot;#3、挑灯细览-category真面目&quot; class=&quot;headerlink&quot; title=&quot;3、挑灯细览-category真面目&quot;&gt;&lt;/a&gt;3、挑灯细览-category真面目&lt;/h1&gt;&lt;p&gt;我们知道，所有的OC类和对象，在runtime层都是用struct表示的，category也不例外，在runtime层，category用结构体category_t（在objc-runtime-new.h中可以找到此定义），它包含了&lt;br&gt;1)、类的名字（name）&lt;br&gt;2)、类（cls）&lt;br&gt;3)、category中所有给类添加的实例方法的列表（instanceMethods）&lt;br&gt;4)、category中所有添加的类方法的列表（classMethods）&lt;br&gt;5)、category实现的所有协议的列表（protocols）&lt;br&gt;6)、category中添加的所有属性（instanceProperties）&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;category_t&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;classref_t&lt;/span&gt; cls;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;method_list_t&lt;/span&gt; *instanceMethods;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;method_list_t&lt;/span&gt; *classMethods;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;protocol_list_t&lt;/span&gt; *protocols;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;property_list_t&lt;/span&gt; *instanceProperties;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;category_t&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从category的定义也可以看出category的可为（可以添加实例方法，类方法，甚至可以实现协议，添加属性）和不可为（无法添加实例变量）。&lt;br&gt;ok，我们先去写一个category看一下category到底为何物：&lt;/p&gt;
&lt;p&gt;MyClass.h：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyClass&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)printName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyClass&lt;/span&gt;(&lt;span class=&quot;title&quot;&gt;MyAddition&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)printName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;MyClass.m：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;MyClass.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyClass&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)printName&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;@&quot;MyClass&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyClass&lt;/span&gt;(&lt;span class=&quot;title&quot;&gt;MyAddition&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)printName&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;@&quot;MyAddition&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们使用clang的命令去看看category到底会变成什么：&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;clang&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;-rewrite-objc&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;MyClass&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;好吧，我们得到了一个3M大小，10w多行的.cpp文件（这绝对是Apple值得吐槽的一点），我们忽略掉所有和我们无关的东西，在文件的最后，我们找到了如下代码片段：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/*_method_list_t*/&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; entsize;  &lt;span class=&quot;comment&quot;&gt;// sizeof(struct _objc_method)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; method_count;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; _objc_method method_list[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; _OBJC_$_&lt;span class=&quot;built_in&quot;&gt;CATEGORY_INSTANCE_METHODS_MyClass_&lt;/span&gt;$_MyAddition __attribute__ ((used, section (&lt;span class=&quot;string&quot;&gt;&quot;__DATA,__objc_const&quot;&lt;/span&gt;))) = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(_objc_method),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#123;(&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; objc_selector *)&lt;span class=&quot;string&quot;&gt;&quot;printName&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;v16@0:8&quot;&lt;/span&gt;, (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)_I_MyClass_MyAddition_printName&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;/*_prop_list_t*/&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; entsize;  &lt;span class=&quot;comment&quot;&gt;// sizeof(struct _prop_t)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count_of_properties;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; _prop_t prop_list[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; _OBJC_$_PROP_LIST_MyClass_$_MyAddition __attribute__ ((used, section (&lt;span class=&quot;string&quot;&gt;&quot;__DATA,__objc_const&quot;&lt;/span&gt;))) = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(_prop_t),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;T@\&quot;NSString\&quot;,C,N&quot;&lt;/span&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt; __declspec(dllexport) &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; _class_t OBJC_CLASS_$_MyClass;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; _category_t _OBJC_$_&lt;span class=&quot;built_in&quot;&gt;CATEGORY_MyClass_&lt;/span&gt;$_MyAddition __attribute__ ((used, section (&lt;span class=&quot;string&quot;&gt;&quot;__DATA,__objc_const&quot;&lt;/span&gt;))) =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&quot;MyClass&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// &amp;amp;OBJC_CLASS_$_MyClass,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; _method_list_t *)&amp;amp;_OBJC_$_&lt;span class=&quot;built_in&quot;&gt;CATEGORY_INSTANCE_METHODS_MyClass_&lt;/span&gt;$_MyAddition,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; _prop_list_t *)&amp;amp;_OBJC_$_PROP_LIST_MyClass_$_MyAddition,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; OBJC_&lt;span class=&quot;built_in&quot;&gt;CATEGORY_SETUP_&lt;/span&gt;$_MyClass_$_MyAddition(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_OBJC_$_&lt;span class=&quot;built_in&quot;&gt;CATEGORY_MyClass_&lt;/span&gt;$_MyAddition.cls = &amp;amp;OBJC_CLASS_$_MyClass;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#pragma section(&lt;span class=&quot;meta-string&quot;&gt;&quot;.objc_inithooks$B&quot;&lt;/span&gt;, long, read, write)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__declspec(allocate(&lt;span class=&quot;string&quot;&gt;&quot;.objc_inithooks$B&quot;&lt;/span&gt;)) &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *OBJC_&lt;span class=&quot;built_in&quot;&gt;CATEGORY_SETUP&lt;/span&gt;[] = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *)&amp;amp;OBJC_&lt;span class=&quot;built_in&quot;&gt;CATEGORY_SETUP_&lt;/span&gt;$_MyClass_$_MyAddition,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; _class_t *L_OBJC_LABEL_CLASS_$ [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] __attribute__((used, section (&lt;span class=&quot;string&quot;&gt;&quot;__DATA, __objc_classlist,regular,no_dead_strip&quot;&lt;/span&gt;)))= &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;OBJC_CLASS_$_MyClass,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; _class_t *_OBJC_LABEL_NONLAZY_CLASS_$[] = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;OBJC_CLASS_$_MyClass,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; _category_t *L_OBJC_LABEL_&lt;span class=&quot;built_in&quot;&gt;CATEGORY_&lt;/span&gt;$ [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] __attribute__((used, section (&lt;span class=&quot;string&quot;&gt;&quot;__DATA, __objc_catlist,regular,no_dead_strip&quot;&lt;/span&gt;)))= &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;_OBJC_$_&lt;span class=&quot;built_in&quot;&gt;CATEGORY_MyClass_&lt;/span&gt;$_MyAddition,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以看到，&lt;br&gt;1)、首先编译器生成了实例方法列表&lt;em&gt;OBJC&lt;/em&gt;$_CATEGORY_INSTANCE_METHODS&lt;em&gt;MyClass&lt;/em&gt;$_MyAddition和属性列表&lt;em&gt;OBJC&lt;/em&gt;$_PROP_LIST&lt;em&gt;MyClass&lt;/em&gt;$_MyAddition，两者的命名都遵循了公共前缀+类名+category名字的命名方式，而且实例方法列表里面填充的正是我们在MyAddition这个category里面写的方法printName，而属性列表里面填充的也正是我们在MyAddition里添加的name属性。还有一个需要注意到的事实就是category的名字用来给各种列表以及后面的category结构体本身命名，而且有static来修饰，所以在同一个编译单元里我们的category名不能重复，否则会出现编译错误。&lt;br&gt;2)、其次，编译器生成了category本身&lt;em&gt;OBJC&lt;/em&gt;$_CATEGORY&lt;em&gt;MyClass&lt;/em&gt;$_MyAddition，并用前面生成的列表来初始化category本身。&lt;br&gt;3)、最后，编译器在&lt;strong&gt;DATA段下的&lt;/strong&gt;objc_catlist section里保存了一个大小为1的category_t的数组L_OBJC_LABEL&lt;em&gt;CATEGORY&lt;/em&gt;$（当然，如果有多个category，会生成对应长度的数组^_^），用于运行期category的加载。&lt;br&gt;到这里，编译器的工作就接近尾声了，对于category在运行期怎么加载，我们下节揭晓。&lt;/p&gt;
&lt;h1 id=&quot;4、追本溯源-category如何加载&quot;&gt;&lt;a href=&quot;#4、追本溯源-category如何加载&quot; class=&quot;headerlink&quot; title=&quot;4、追本溯源-category如何加载&quot;&gt;&lt;/a&gt;4、追本溯源-category如何加载&lt;/h1&gt;&lt;p&gt;我们知道，Objective-C的运行是依赖OC的runtime的，而OC的runtime和其他系统库一样，是OS X和iOS通过dyld动态加载的。&lt;br&gt;想了解更多dyld地同学可以移步这里（&lt;a href=&quot;https://www.mikeash.com/pyblog/friday-qa-2012-11-09-dyld-dynamic-linking-on-os-x.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;3&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;对于OC运行时，入口方法如下（在objc-os.mm文件中）：&lt;/p&gt;
&lt;figure class=&quot;highlight nimrod&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;void&lt;/span&gt; _objc_init(&lt;span class=&quot;built_in&quot;&gt;void&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;bool&lt;/span&gt; initialized = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (initialized) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    initialized = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // fixme defer initialization until an objc-&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; image &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; found?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    environ_init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tls_init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    lock_init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    exception_init();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // &lt;span class=&quot;type&quot;&gt;Register&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; unmap first, &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; some +load unmaps something&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _dyld_register_func_for_remove_image(&amp;amp;unmap_image);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dyld_register_image_state_change_handler(dyld_image_state_bound,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                             &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;/*batch*/, &amp;amp;map_images);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dyld_register_image_state_change_handler(dyld_image_state_dependents_initialized, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;/*&lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; batch*/, &amp;amp;load_images);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;category被附加到类上面是在map_images的时候发生的，在new-ABI的标准下，_objc_init里面的调用的map_images最终会调用objc-runtime-new.mm里面的_read_images方法，而在_read_images方法的结尾，有以下的代码片段：&lt;/p&gt;
&lt;figure class=&quot;highlight xl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Discover categories. &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (EACH_HEADER) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        category_t **catlist =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            _getObjc2CategoryList(hi, &amp;amp;count);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; count; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            category_t *cat = catlist[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;class_t&lt;/span&gt; *cls = remapClass(cat-&amp;gt;&lt;/span&gt;cls);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!cls) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// Category&#39;s target class is missing (probably weak-linked).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// Disavow any knowledge of this category.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                catlist[i] = NULL;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (PrintConnecting) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    _objc_inform(&lt;span class=&quot;string&quot;&gt;&quot;CLASS: IGNORING category \?\?\?(%s) %p with &quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 &lt;span class=&quot;string&quot;&gt;&quot;missing weak-linked target class&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;cat&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;, cat);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                continue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Process this category. &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// First, register the category with its target class. &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// Then, rebuild the class&#39;s method lists (etc) if &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// the class is realized. &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            BOOL classExists = NO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;if&lt;/span&gt; (cat-&amp;gt;&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;instanceMethods&lt;/span&gt; ||  cat-&amp;gt;&lt;/span&gt;protocols &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ||  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;cat&lt;/span&gt;-&amp;gt;&lt;/span&gt;instanceProperties)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                addUnattachedCategoryForClass(cat, cls, hi);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (isRealized(cls)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    remethodizeClass(cls);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    classExists = YES;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (PrintConnecting) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    _objc_inform(&lt;span class=&quot;string&quot;&gt;&quot;CLASS: found category -%s(%s) %s&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;(cls), cat-&amp;gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 classExists ? &lt;span class=&quot;string&quot;&gt;&quot;on existing class&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;if&lt;/span&gt; (cat-&amp;gt;&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;classMethods&lt;/span&gt;  ||  cat-&amp;gt;&lt;/span&gt;protocols &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;/* ||  cat-&amp;gt;classProperties */&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;addUnattachedCategoryForClass&lt;/span&gt;(cat, cls-&amp;gt;&lt;/span&gt;isa, hi);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;if&lt;/span&gt; (isRealized(cls-&amp;gt;&lt;/span&gt;isa)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;remethodizeClass&lt;/span&gt;(cls-&amp;gt;&lt;/span&gt;isa);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (PrintConnecting) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    _objc_inform(&lt;span class=&quot;string&quot;&gt;&quot;CLASS: found category +%s(%s)&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                 &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;(cls), cat-&amp;gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;首先，我们拿到的catlist就是上节中讲到的编译器为我们准备的category_t数组，关于是如何加载catlist本身的，我们暂且不表，这和category本身的关系也不大，有兴趣的同学可以去研究以下Apple的二进制格式和load机制。&lt;br&gt;略去PrintConnecting这个用于log的东西，这段代码很容易理解：&lt;br&gt;1)、把category的实例方法、协议以及属性添加到类上&lt;br&gt;2)、把category的类方法和协议添加到类的metaclass上&lt;/p&gt;
&lt;p&gt;值得注意的是，在代码中有一小段注释 / &lt;em&gt;|| cat-&amp;gt;classProperties&lt;/em&gt; /，看来苹果有过给类添加属性的计划啊。&lt;br&gt;ok，我们接着往里看，category的各种列表是怎么最终添加到类上的，就拿实例方法列表来说吧：&lt;br&gt;在上述的代码片段里，addUnattachedCategoryForClass只是把类和category做一个关联映射，而remethodizeClass才是真正去处理添加事宜的功臣。&lt;/p&gt;
&lt;figure class=&quot;highlight xl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static void remethodizeClass(class_t *cls)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    category_list *cats;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    BOOL isMeta;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rwlock_assert_writing(&amp;amp;runtimeLock);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    isMeta = isMetaClass(cls);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Re-methodizing: check for more categories&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((cats = unattachedCategoriesForClass(cls))) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        chained_property_list *newproperties;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        const protocol_list_t **newprotos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (PrintConnecting) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            _objc_inform(&lt;span class=&quot;string&quot;&gt;&quot;CLASS: attaching categories to class &#39;%s&#39; %s&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         getName(cls), isMeta ? &lt;span class=&quot;string&quot;&gt;&quot;(meta)&quot;&lt;/span&gt; : &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Update methods, properties, protocols&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BOOL vtableAffected = NO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        attachCategoryMethods(cls, cats, &amp;amp;vtableAffected);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        newproperties = buildPropertyList(NULL, cats, isMeta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (newproperties) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;newproperties&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;next&lt;/span&gt; = cls-&amp;gt;&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;data&lt;/span&gt;()-&amp;gt;&lt;/span&gt;properties;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;cls&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;data&lt;/span&gt;()-&amp;gt;&lt;/span&gt;properties = newproperties;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;newprotos&lt;/span&gt; = buildProtocolList(cats, NULL, cls-&amp;gt;&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;data&lt;/span&gt;()-&amp;gt;&lt;/span&gt;protocols);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;if&lt;/span&gt; (cls-&amp;gt;&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;data&lt;/span&gt;()-&amp;gt;&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;protocols&lt;/span&gt;  &amp;amp;&amp;amp;  cls-&amp;gt;&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;data&lt;/span&gt;()-&amp;gt;&lt;/span&gt;protocols != newprotos) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            _&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;free_internal&lt;/span&gt;(cls-&amp;gt;&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;data&lt;/span&gt;()-&amp;gt;&lt;/span&gt;protocols);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;cls&lt;/span&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;data&lt;/span&gt;()-&amp;gt;&lt;/span&gt;protocols = newprotos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _free_internal(cats);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Update method caches and vtables&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        flushCaches(cls);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (vtableAffected) flushVtables(cls);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而对于添加类的实例方法而言，又会去调用attachCategoryMethods这个方法，我们去看下attachCategoryMethods：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;attachCategoryMethods(class_t *cls, category_list *cats,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; *inoutVtablesAffected)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!cats) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (PrintReplacedMethods) printReplacements(cls, cats);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; isMeta = isMetaClass(cls);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    method_list_t **mlists = (method_list_t **)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        _malloc_internal(cats-&amp;gt;count * &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(*mlists));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Count backwards through cats to get newest categories first&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; mcount = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = cats-&amp;gt;count;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; fromBundle = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        method_list_t *mlist = cat_method_list(cats-&amp;gt;list[i].cat, isMeta);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mlist) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            mlists[mcount++] = mlist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fromBundle |= cats-&amp;gt;list[i].fromBundle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    attachMethodLists(cls, mlists, mcount, &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;, fromBundle, inoutVtablesAffected);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _free_internal(mlists);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;attachCategoryMethods做的工作相对比较简单，它只是把所有category的实例方法列表拼成了一个大的实例方法列表，然后转交给了attachMethodLists方法（我发誓，这是本节我们看的最后一段代码了^_^），这个方法有点长，我们只看一小段：&lt;/p&gt;
&lt;figure class=&quot;highlight smali&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for (uint32_t m = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             (scanForCustomRR || scanForCustomAWZ)  &amp;amp;&amp;amp;  m &amp;lt; mlist-&amp;gt;count;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             m++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            SEL sel = method_list_nth(mlist, m)-&amp;gt;name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt; if &lt;/span&gt;(scanForCustomRR  &amp;amp;&amp;amp;  isRRSelector(sel)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                cls-&amp;gt;setHasCustomRR();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                scanForCustomRR = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; else&lt;span class=&quot;built_in&quot;&gt; if &lt;/span&gt;(scanForCustomAWZ  &amp;amp;&amp;amp;  isAWZSelector(sel)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                cls-&amp;gt;setHasCustomAWZ();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                scanForCustomAWZ = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // Fill method list&lt;span class=&quot;built_in&quot;&gt; array&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        new&lt;span class=&quot;class&quot;&gt;Lists[newCount++] = mlist;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;    .&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;    .&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;    .&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // Copy old methods to the method list&lt;span class=&quot;built_in&quot;&gt; array&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    for (i = 0; i &amp;lt; oldCount; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        new&lt;span class=&quot;class&quot;&gt;Lists[newCount++] = oldLists[i];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;需要注意的有两点：&lt;br&gt;1)、category的方法没有“完全替换掉”原来类已经有的方法，也就是说如果category和原来类都有methodA，那么category附加完成之后，类的方法列表里会有两个methodA&lt;br&gt;2)、category的方法被放到了新方法列表的前面，而原来类的方法被放到了新方法列表的后面，这也就是我们平常所说的category的方法会“覆盖”掉原来类的同名方法，这是因为运行时在查找方法的时候是顺着方法列表的顺序查找的，它只要一找到对应名字的方法，就会罢休^_^，殊不知后面可能还有一样名字的方法。&lt;/p&gt;
&lt;h1 id=&quot;5、旁枝末叶-category和-load方法&quot;&gt;&lt;a href=&quot;#5、旁枝末叶-category和-load方法&quot; class=&quot;headerlink&quot; title=&quot;5、旁枝末叶-category和+load方法&quot;&gt;&lt;/a&gt;5、旁枝末叶-category和+load方法&lt;/h1&gt;&lt;p&gt;我们知道，在类和category中都可以有+load方法，那么有两个问题：&lt;br&gt;1)、在类的+load方法调用的时候，我们可以调用category中声明的方法么？&lt;br&gt;2)、这么些个+load方法，调用顺序是咋样的呢？&lt;br&gt;鉴于上述几节我们看的代码太多了，对于这两个问题我们先来看一点直观的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://tech.meituan.com/img/diveintocategory/project.png&quot; alt=&quot;项目结构&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们的代码里有MyClass和MyClass的两个category （Category1和Category2），MyClass和两个category都添加了+load方法，并且Category1和Category2都写了MyClass的printName方法。&lt;br&gt;在Xcode中点击Edit Scheme，添加如下两个环境变量（可以在执行load方法以及加载category的时候打印log信息，更多的环境变量选项可参见objc-private.h）:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://tech.meituan.com/img/diveintocategory/environment_vars.png&quot; alt=&quot;环境变量&quot;&gt;&lt;/p&gt;
&lt;p&gt;运行项目，我们会看到控制台打印很多东西出来，我们只找到我们想要的信息，顺序如下：&lt;br&gt;&lt;figure class=&quot;highlight prolog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;objc[&lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;]: &lt;span class=&quot;symbol&quot;&gt;REPLACED&lt;/span&gt;: -[&lt;span class=&quot;symbol&quot;&gt;MyClass&lt;/span&gt; printName] by category &lt;span class=&quot;symbol&quot;&gt;Category1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc[&lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;]: &lt;span class=&quot;symbol&quot;&gt;REPLACED&lt;/span&gt;: -[&lt;span class=&quot;symbol&quot;&gt;MyClass&lt;/span&gt; printName] by category &lt;span class=&quot;symbol&quot;&gt;Category2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc[&lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;]: &lt;span class=&quot;symbol&quot;&gt;LOAD&lt;/span&gt;: class &lt;span class=&quot;string&quot;&gt;&#39;MyClass&#39;&lt;/span&gt; scheduled for +load&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc[&lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;]: &lt;span class=&quot;symbol&quot;&gt;LOAD&lt;/span&gt;: category &lt;span class=&quot;string&quot;&gt;&#39;MyClass(Category1)&#39;&lt;/span&gt; scheduled for +load&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc[&lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;]: &lt;span class=&quot;symbol&quot;&gt;LOAD&lt;/span&gt;: category &lt;span class=&quot;string&quot;&gt;&#39;MyClass(Category2)&#39;&lt;/span&gt; scheduled for +load&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc[&lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;]: &lt;span class=&quot;symbol&quot;&gt;LOAD&lt;/span&gt;: +[&lt;span class=&quot;symbol&quot;&gt;MyClass&lt;/span&gt; load]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc[&lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;]: &lt;span class=&quot;symbol&quot;&gt;LOAD&lt;/span&gt;: +[&lt;span class=&quot;symbol&quot;&gt;MyClass&lt;/span&gt;(&lt;span class=&quot;symbol&quot;&gt;Category1&lt;/span&gt;) load]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc[&lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;]: &lt;span class=&quot;symbol&quot;&gt;LOAD&lt;/span&gt;: +[&lt;span class=&quot;symbol&quot;&gt;MyClass&lt;/span&gt;(&lt;span class=&quot;symbol&quot;&gt;Category2&lt;/span&gt;) load]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;所以，对于上面两个问题，答案是很明显的：&lt;br&gt;1)、可以调用，因为附加category到类的工作会先于+load方法的执行&lt;br&gt;2)、+load的执行顺序是先类，后category，而category的+load执行顺序是根据编译顺序决定的。&lt;br&gt;目前的编译顺序是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://tech.meituan.com/img/diveintocategory/compile1.png&quot; alt=&quot;编译顺序1&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们调整一个Category1和Category2的编译顺序，run。ok，我们可以看到控制台的输出顺序变了：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://tech.meituan.com/img/diveintocategory/compile2.png&quot; alt=&quot;编译顺序2&quot;&gt;&lt;br&gt;&lt;figure class=&quot;highlight prolog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc[&lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;]: &lt;span class=&quot;symbol&quot;&gt;REPLACED&lt;/span&gt;: -[&lt;span class=&quot;symbol&quot;&gt;MyClass&lt;/span&gt; printName] by category &lt;span class=&quot;symbol&quot;&gt;Category2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc[&lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;]: &lt;span class=&quot;symbol&quot;&gt;REPLACED&lt;/span&gt;: -[&lt;span class=&quot;symbol&quot;&gt;MyClass&lt;/span&gt; printName] by category &lt;span class=&quot;symbol&quot;&gt;Category1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc[&lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;]: &lt;span class=&quot;symbol&quot;&gt;LOAD&lt;/span&gt;: class &lt;span class=&quot;string&quot;&gt;&#39;MyClass&#39;&lt;/span&gt; scheduled for +load&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc[&lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;]: &lt;span class=&quot;symbol&quot;&gt;LOAD&lt;/span&gt;: category &lt;span class=&quot;string&quot;&gt;&#39;MyClass(Category2)&#39;&lt;/span&gt; scheduled for +load&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc[&lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;]: &lt;span class=&quot;symbol&quot;&gt;LOAD&lt;/span&gt;: category &lt;span class=&quot;string&quot;&gt;&#39;MyClass(Category1)&#39;&lt;/span&gt; scheduled for +load&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc[&lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;]: &lt;span class=&quot;symbol&quot;&gt;LOAD&lt;/span&gt;: +[&lt;span class=&quot;symbol&quot;&gt;MyClass&lt;/span&gt; load]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc[&lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;]: &lt;span class=&quot;symbol&quot;&gt;LOAD&lt;/span&gt;: +[&lt;span class=&quot;symbol&quot;&gt;MyClass&lt;/span&gt;(&lt;span class=&quot;symbol&quot;&gt;Category2&lt;/span&gt;) load]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;objc[&lt;span class=&quot;number&quot;&gt;1187&lt;/span&gt;]: &lt;span class=&quot;symbol&quot;&gt;LOAD&lt;/span&gt;: +[&lt;span class=&quot;symbol&quot;&gt;MyClass&lt;/span&gt;(&lt;span class=&quot;symbol&quot;&gt;Category1&lt;/span&gt;) load]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;虽然对于+load的执行顺序是这样，但是对于“覆盖”掉的方法，则会先找到最后一个编译的category里的对应方法。&lt;br&gt;这一节我们只是用很直观的方式得到了问题的答案，有兴趣的同学可以继续去研究一下OC的运行时代码。&lt;/p&gt;
&lt;h1 id=&quot;6、触类旁通-category和方法覆盖&quot;&gt;&lt;a href=&quot;#6、触类旁通-category和方法覆盖&quot; class=&quot;headerlink&quot; title=&quot;6、触类旁通-category和方法覆盖&quot;&gt;&lt;/a&gt;6、触类旁通-category和方法覆盖&lt;/h1&gt;&lt;p&gt;鉴于上面几节我们已经把原理都讲了，这一节只有一个问题:&lt;br&gt;怎么调用到原来类中被category覆盖掉的方法？&lt;br&gt;对于这个问题，我们已经知道category其实并不是完全替换掉原来类的同名方法，只是category在方法列表的前面而已，所以我们只要顺着方法列表找到最后一个对应名字的方法，就可以调用原来类的方法：&lt;/p&gt;
&lt;figure class=&quot;highlight monkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;currentClass&lt;/span&gt; = [&lt;span class=&quot;title&quot;&gt;MyClass&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;class&lt;/span&gt;];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;MyClass *my = [[MyClass alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (currentClass) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    unsigned int methodCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Method&lt;/span&gt; *&lt;span class=&quot;title&quot;&gt;methodList&lt;/span&gt; =&lt;/span&gt; class_copyMethodList(currentClass, &amp;amp;methodCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IMP lastImp = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    SEL lastSel = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (NSInteger i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; methodCount; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;method&lt;/span&gt; =&lt;/span&gt; methodList[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSString *methodName = [NSString stringWithCString:sel_getName(method_getName(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt;)) &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                        encoding:NSUTF8StringEncoding];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([@&lt;span class=&quot;string&quot;&gt;&quot;printName&quot;&lt;/span&gt; isEqualToString:methodName]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            lastImp = method_getImplementation(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            lastSel = method_getName(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;method&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    typedef void (*fn)(id,SEL);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (lastImp != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fn f = (fn)lastImp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        f(my,lastSel);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    free(methodList);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;7、更上一层-category和关联对象&quot;&gt;&lt;a href=&quot;#7、更上一层-category和关联对象&quot; class=&quot;headerlink&quot; title=&quot;7、更上一层-category和关联对象&quot;&gt;&lt;/a&gt;7、更上一层-category和关联对象&lt;/h1&gt;&lt;p&gt;如上所见，我们知道在category里面是无法为category添加实例变量的。但是我们很多时候需要在category中添加和对象关联的值，这个时候可以求助关联对象来实现。&lt;/p&gt;
&lt;p&gt;MyClass+Category1.h:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;MyClass.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyClass&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;Category1&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;MyClass+Category1.m:&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;MyClass+Category1.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;objc/runtime.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyClass&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;Category1&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)load&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;@&quot;load in Category1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setName:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    objc_setAssociatedObject(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             name,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                             OBJC_ASSO&lt;span class=&quot;built_in&quot;&gt;CIATION_COPY&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt;*)name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *nameObject = objc_getAssociatedObject(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; nameObject;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;但是关联对象又是存在什么地方呢？ 如何存储？ 对象销毁时候如何处理关联对象呢？&lt;br&gt;我们去翻一下runtime的源码，在objc-references.mm文件中有个方法_object_set_associative_reference：&lt;/p&gt;
&lt;figure class=&quot;highlight ceylon&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;set&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;associative&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;reference(id &lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *key, id &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;, uintptr&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;t policy) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// retain the new value (if any) outside the lock.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ObjcAssociation old&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;association(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, nil);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    id &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt; ? acquireValue(&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;, policy) : nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AssociationsManager manager;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        AssociationsHashMap &amp;amp;associations(manager.associations());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        disguised&lt;span class=&quot;number&quot;&gt;_p&lt;/span&gt;tr&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;t disguised&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; = DISGUISE(&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// break any existing association.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            AssociationsHashMap::iterator i = associations.find(disguised&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i != associations.end()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// secondary table exists&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ObjectAssociationMap *refs = i-&amp;gt;second;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ObjectAssociationMap::iterator j = refs-&amp;gt;find(key);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (j != refs-&amp;gt;end()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    old&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;association = j-&amp;gt;second;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    j-&amp;gt;second = ObjcAssociation(policy, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    (*refs)[key] = ObjcAssociation(policy, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;// create the new association (first time).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ObjectAssociationMap *refs = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ObjectAssociationMap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                associations[disguised&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt;] = refs;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (*refs)[key] = ObjcAssociation(policy, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;setInstancesHaveAssociatedObjects(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;getClass(&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// setting the association to nil breaks the association.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            AssociationsHashMap::iterator i = associations.find(disguised&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i !=  associations.end()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ObjectAssociationMap *refs = i-&amp;gt;second;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ObjectAssociationMap::iterator j = refs-&amp;gt;find(key);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (j != refs-&amp;gt;end()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    old&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;association = j-&amp;gt;second;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    refs-&amp;gt;erase(j);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// release the old value (outside of the lock).&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (old&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;association.hasValue()) ReleaseValue()(old&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;association);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以看到所有的关联对象都由AssociationsManager管理，而AssociationsManager定义如下：&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AssociationsManager&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; OSSpinLock _lock;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; AssociationsHashMap *_map;               &lt;span class=&quot;comment&quot;&gt;// associative references:  object pointer -&amp;gt; PtrPtrHashMap.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AssociationsManager()   &amp;#123; OSSpinLockLock(&amp;amp;_lock); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ~AssociationsManager()  &amp;#123; OSSpinLockUnlock(&amp;amp;_lock); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AssociationsHashMap &amp;amp;associations() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (_map == &lt;span class=&quot;keyword&quot;&gt;NULL&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            _map = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; AssociationsHashMap();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; *_map;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;AssociationsManager里面是由一个静态AssociationsHashMap来存储所有的关联对象的。这相当于把所有对象的关联对象都存在一个全局map里面。而map的的key是这个对象的指针地址（任意两个不同对象的指针地址一定是不同的），而这个map的value又是另外一个AssociationsHashMap，里面保存了关联对象的kv对。&lt;br&gt;而在对象的销毁逻辑里面，见objc-runtime-new.mm:&lt;/p&gt;
&lt;figure class=&quot;highlight ceylon&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; *objc&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;destructInstance(id obj) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (obj) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Class isa&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;gen = &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;getClass(obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;t *isa = newcls(isa&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;gen);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// Read all of the flags at once for performance.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bool cxx = hasCxxStructors(isa);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bool assoc = !UseGC &amp;amp;&amp;amp; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;instancesHaveAssociatedObjects(isa&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;gen);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// This order is important.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cxx) &lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;cxxDestruct(obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (assoc) &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;remove&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;assocations(obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!UseGC) objc&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;clear&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt;deallocating(obj);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; obj;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;嗯，runtime的销毁对象函数objc_destructInstance里面会判断这个对象有没有关联对象，如果有，会调用_object_remove_assocations做关联对象的清理工作。&lt;/p&gt;
&lt;h1 id=&quot;后记&quot;&gt;&lt;a href=&quot;#后记&quot; class=&quot;headerlink&quot; title=&quot;后记&quot;&gt;&lt;/a&gt;后记&lt;/h1&gt;&lt;p&gt;正如侯捷先生所讲-“源码面前，了无秘密”，Apple的Cocoa Touch框架虽然并不开源，但是Objective-C的runtime和Core Foundation却是完全开放源码的(在&lt;a href=&quot;http://www.opensource.apple.com/tarballs/可以下载到全部的开源代码&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.opensource.apple.com/tarballs/可以下载到全部的开源代码)。&lt;/a&gt;。)&lt;br&gt;本系列runtime源码学习将会持续更新，意犹未尽的同学可以自行到上述网站下载源码学习。行笔简陋，如有错误，望指正。&lt;/p&gt;
&lt;h2 id=&quot;原文地址：http-tech-meituan-com-DiveIntoCategory-html&quot;&gt;&lt;a href=&quot;#原文地址：http-tech-meituan-com-DiveIntoCategory-html&quot; class=&quot;headerlink&quot; title=&quot;原文地址：http://tech.meituan.com/DiveIntoCategory.html&quot;&gt;&lt;/a&gt;原文地址：&lt;a href=&quot;http://tech.meituan.com/DiveIntoCategory.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://tech.meituan.com/DiveIntoCategory.html&lt;/a&gt;&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;无论一个类设计的多么完美，在未来的需求演进中，都有可能会碰到一些无法预测的情况。那怎么扩展已有的类呢？一般而言，继承和组合是不错的选择。但是在Objective-C 2.0中，又提供了category这个语言特性，可以动态地为已有类添加新行为。如今category已经遍布于Objective-C代码的各个角落，从Apple官方的framework到各个开源框架，从功能繁复的大型APP到简单的应用，catagory无处不在。本文对category做了比较全面的整理，希望对读者有所裨益。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS学习" scheme="http://yoursite.com/categories/iOS%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Category" scheme="http://yoursite.com/tags/Category/"/>
    
  </entry>
  
  <entry>
    <title>iOS多线程之GCD</title>
    <link href="http://yoursite.com/2016/04/05/iOS%E5%A4%9A%E7%BA%BF%E7%A8%8BGCD/"/>
    <id>http://yoursite.com/2016/04/05/iOS多线程GCD/</id>
    <published>2016-04-05T12:03:59.000Z</published>
    <updated>2016-06-15T04:12:54.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;1-什么是GCD？&quot;&gt;&lt;a href=&quot;#1-什么是GCD？&quot; class=&quot;headerlink&quot; title=&quot;1.什么是GCD？&quot;&gt;&lt;/a&gt;1.什么是GCD？&lt;/h1&gt;&lt;p&gt;Grand Central Dispatch (GCD) 是 Apple 开发的一个多核编程的解决方法。该方法在 Mac OS X 10.6 雪豹中首次推出，并随后被引入到了 iOS4.0 中。GCD 是一个替代诸如 NSThread, NSOperationQueue, NSInvocationOperation 等技术的很高效和强大的技术。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;2-我们用GCD干什么？&quot;&gt;&lt;a href=&quot;#2-我们用GCD干什么？&quot; class=&quot;headerlink&quot; title=&quot;2.我们用GCD干什么？&quot;&gt;&lt;/a&gt;2.我们用GCD干什么？&lt;/h1&gt;&lt;p&gt;通过 GCD，开发者不用再直接跟线程打交道了，只需要向队列中添加代码块即可，GCD 在后端管理着一个线程池。GCD 不仅决定着你的代码块将在哪个线程被执行，它还根据可用的系统资源对这些线程进行管理。这样可以将开发者从线程管理的工作中解放出来，通过集中的管理线程，来缓解大量线程被创建的问题。&lt;/p&gt;
&lt;p&gt;GCD 带来的另一个重要改变是，作为开发者可以将工作考虑为一个队列，而不是一堆线程，这种并行的抽象模型更容易掌握和使用。&lt;/p&gt;
&lt;p&gt;首先，系统提供给你一个叫做 主队列（main queue） 的特殊队列。和其它串行队列一样，这个队列中的任务一次只能执行一个。然而，它能保证所有的任务都在主线程执行，而主线程是唯一可用于更新 UI 的线程。这个队列就是用于发生消息给 UIView 或发送通知的。&lt;/p&gt;
&lt;p&gt;系统同时提供给你好几个并发队列。它们叫做 全局调度队列（Global Dispatch Queues） 。目前的四个全局队列有着不同的优先级：background、low、default 以及 high。要知道，Apple 的 API 也会使用这些队列，所以你添加的任何任务都不会是这些队列中唯一的任务。&lt;/p&gt;
&lt;p&gt;最后，你也可以创建自己的串行队列或并发队列。这就是说，至少有五个队列任你处置：主队列、四个全局调度队列，再加上任何你自己创建的队列。&lt;/p&gt;
&lt;h1 id=&quot;3-GCD相比其他多线程有哪些优点？&quot;&gt;&lt;a href=&quot;#3-GCD相比其他多线程有哪些优点？&quot; class=&quot;headerlink&quot; title=&quot;3.GCD相比其他多线程有哪些优点？&quot;&gt;&lt;/a&gt;3.GCD相比其他多线程有哪些优点？&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;GCD 能通过推迟昂贵计算任务并在后台运行它们来改善你的应用的响应性能。&lt;/li&gt;
&lt;li&gt;GCD 提供一个易于使用的并发模型而不仅仅只是锁和线程，以帮助我们避开并发陷阱。&lt;/li&gt;
&lt;li&gt;GCD 具有在常见模式（例如单例）上用更高性能的原语优化你的代码的潜在能力。&lt;/li&gt;
&lt;li&gt;GCD 会自动利用更多的CPU内核（比如双核、四核）&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;4-GCD术语&quot;&gt;&lt;a href=&quot;#4-GCD术语&quot; class=&quot;headerlink&quot; title=&quot;4.GCD术语&quot;&gt;&lt;/a&gt;4.GCD术语&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;串行（Serial）：让任务一个接着一个地执行（一个任务执行完毕后，再执行下一个任务）&lt;/li&gt;
&lt;li&gt;并发（Concurrent）：可以让多个任务并发（同时）执行（自动开启多个线程同时执行任务）并发功能只有在异步（dispatch_async）函数下才有效。&lt;/li&gt;
&lt;li&gt;同步（Synchronous）：在当前线程中执行任务，不具备开启新线程的能力&lt;/li&gt;
&lt;li&gt;异步（Asynchronous）：在新的线程中执行任务，具备开启新线程的能力&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;5-使用GCD&quot;&gt;&lt;a href=&quot;#5-使用GCD&quot; class=&quot;headerlink&quot; title=&quot;5.使用GCD&quot;&gt;&lt;/a&gt;5.使用GCD&lt;/h1&gt;&lt;h2 id=&quot;1-主队列&quot;&gt;&lt;a href=&quot;#1-主队列&quot; class=&quot;headerlink&quot; title=&quot;1.主队列&quot;&gt;&lt;/a&gt;1.主队列&lt;/h2&gt;&lt;p&gt;串行队列的运行,运行结果打印的是 1，2，3，4，顺序执行。&lt;br&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_queue_t &lt;/span&gt;mainQueue = &lt;span class=&quot;keyword&quot;&gt;dispatch_get_main_queue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_async(mainQueue, &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_async(mainQueue, &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_async(mainQueue, &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;3&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_async(mainQueue, &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;4&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-全局队列&quot;&gt;&lt;a href=&quot;#2-全局队列&quot; class=&quot;headerlink&quot; title=&quot;2.全局队列&quot;&gt;&lt;/a&gt;2.全局队列&lt;/h2&gt;&lt;p&gt;并发队列的运行，运行结果随机打印：2，3，1，4，随机执行。&lt;br&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_queue_t &lt;/span&gt;defaultQueue = &lt;span class=&quot;keyword&quot;&gt;dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, &lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_async(defaultQueue, &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_async(defaultQueue, &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_async(defaultQueue, &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;3&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_async(defaultQueue, &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;4&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;3-创建自定义队列&quot;&gt;&lt;a href=&quot;#3-创建自定义队列&quot; class=&quot;headerlink&quot; title=&quot;3.创建自定义队列&quot;&gt;&lt;/a&gt;3.创建自定义队列&lt;/h2&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_queue_t &lt;/span&gt;concurrentQueue = &lt;span class=&quot;keyword&quot;&gt;dispatch_queue_create(&quot;com.bjsxt.concurrentQueue&quot;, &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;DISPATCH_QUEUE_CONCURRENT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_async(concurrentQueue, &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;4&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;dispatch_sync(concurrentQueue, &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [NSThread sleepForTimeInterval:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;5&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;6&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;4-GCD在单例中的运用dispatch-once&quot;&gt;&lt;a href=&quot;#4-GCD在单例中的运用dispatch-once&quot; class=&quot;headerlink&quot; title=&quot;4.GCD在单例中的运用dispatch_once&quot;&gt;&lt;/a&gt;4.GCD在单例中的运用dispatch_once&lt;/h2&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static &lt;span class=&quot;keyword&quot;&gt;dispatch_once_t &lt;/span&gt;onceToken&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_once(&amp;amp;onceToken, &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;onceToken&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;5-延迟加载dispatch-after&quot;&gt;&lt;a href=&quot;#5-延迟加载dispatch-after&quot; class=&quot;headerlink&quot; title=&quot;5.延迟加载dispatch_after&quot;&gt;&lt;/a&gt;5.延迟加载dispatch_after&lt;/h2&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;double delayInSeconds = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_queue_t &lt;/span&gt;mainQueue = &lt;span class=&quot;keyword&quot;&gt;dispatch_get_main_queue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_time_t &lt;/span&gt;popTime = &lt;span class=&quot;keyword&quot;&gt;dispatch_time(DISPATCH_TIME_NOW,delayInSeconds &lt;/span&gt;* NSEC_PER_SEC)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_after(popTime, &lt;/span&gt;mainQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;延时执行的2秒&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;6-调度组dispatch-group-t&quot;&gt;&lt;a href=&quot;#6-调度组dispatch-group-t&quot; class=&quot;headerlink&quot; title=&quot;6.调度组dispatch_group_t&quot;&gt;&lt;/a&gt;6.调度组dispatch_group_t&lt;/h2&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_t group = dispatch_group_create();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;dispatch_queue_t&lt;/span&gt; defaultQueue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_async(group, defaultQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;built_in&quot;&gt;NSThread&lt;/span&gt; sleepForTimeInterval:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;1&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_async(group, defaultQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;built_in&quot;&gt;NSThread&lt;/span&gt; sleepForTimeInterval:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;2&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dispatch_group_notify(group, defaultQueue, ^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;3&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//等价于&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    dispatch_group_enter(group);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    dispatch_async(defaultQueue, ^&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//        NSLog(@&quot;1&quot;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//        dispatch_group_leave(group);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    &amp;#125;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;7-dispatch-barrier-async&quot;&gt;&lt;a href=&quot;#7-dispatch-barrier-async&quot; class=&quot;headerlink&quot; title=&quot;7.dispatch_barrier_async&quot;&gt;&lt;/a&gt;7.dispatch_barrier_async&lt;/h2&gt;&lt;p&gt;在前面的任务执行结束后它才执行，而且它后面的任务等它执行完成之后才会执行.&lt;br&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_queue_t &lt;/span&gt;queue = &lt;span class=&quot;keyword&quot;&gt;dispatch_queue_create(&quot;com.bjsxt.barrierExecute&quot;, &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;DISPATCH_QUEUE_CONCURRENT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_async(queue, &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [NSThread sleepForTimeInterval:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_async(queue, &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [NSThread sleepForTimeInterval:&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_barrier_async(queue, &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;3&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [NSThread sleepForTimeInterval:&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dispatch_async(queue, &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [NSThread sleepForTimeInterval:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;4&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;8-执行某个代码dispatch-apply&quot;&gt;&lt;a href=&quot;#8-执行某个代码dispatch-apply&quot; class=&quot;headerlink&quot; title=&quot;8.执行某个代码dispatch_apply&quot;&gt;&lt;/a&gt;8.执行某个代码dispatch_apply&lt;/h2&gt;&lt;figure class=&quot;highlight lisp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;dispatch_queue_t defaultQueue = dispatch_get_global_queue(&lt;span class=&quot;name&quot;&gt;DISPATCH_QUEUE_PRIORITY_DEFAULT&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dispatch_apply(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, defaultQueue, ^(&lt;span class=&quot;name&quot;&gt;size_t&lt;/span&gt; i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        NSLog(@&lt;span class=&quot;string&quot;&gt;&quot;%lu&quot;&lt;/span&gt;,i)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://lyjh.net/2015/09/27/iOS%E5%A4%9A%E7%BA%BF%E7%A8%8BGCD%E8%AF%A6%E8%A7%A3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://lyjh.net/2015/09/27/iOS%E5%A4%9A%E7%BA%BF%E7%A8%8BGCD%E8%AF%A6%E8%A7%A3/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/nixzhu/dev-blog&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/nixzhu/dev-blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://objccn.io/issue-2-1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://objccn.io/issue-2-1/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-什么是GCD？&quot;&gt;&lt;a href=&quot;#1-什么是GCD？&quot; class=&quot;headerlink&quot; title=&quot;1.什么是GCD？&quot;&gt;&lt;/a&gt;1.什么是GCD？&lt;/h1&gt;&lt;p&gt;Grand Central Dispatch (GCD) 是 Apple 开发的一个多核编程的解决方法。该方法在 Mac OS X 10.6 雪豹中首次推出，并随后被引入到了 iOS4.0 中。GCD 是一个替代诸如 NSThread, NSOperationQueue, NSInvocationOperation 等技术的很高效和强大的技术。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS学习" scheme="http://yoursite.com/categories/iOS%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="GCD" scheme="http://yoursite.com/tags/GCD/"/>
    
      <category term="多线程" scheme="http://yoursite.com/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>离屏渲染</title>
    <link href="http://yoursite.com/2016/03/08/%E7%A6%BB%E5%B1%8F%E6%B8%B2%E6%9F%93/"/>
    <id>http://yoursite.com/2016/03/08/离屏渲染/</id>
    <published>2016-03-08T07:12:53.000Z</published>
    <updated>2016-06-04T15:45:47.000Z</updated>
    
    <content type="html">&lt;hr&gt;
&lt;h1 id=&quot;一、概念理解&quot;&gt;&lt;a href=&quot;#一、概念理解&quot; class=&quot;headerlink&quot; title=&quot;一、概念理解&quot;&gt;&lt;/a&gt;一、概念理解&lt;/h1&gt;&lt;p&gt;OpenGL中，GPU屏幕渲染有以下两种方式：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On-Screen Rendering&lt;/strong&gt;&lt;br&gt;意为当前屏幕渲染，指的是GPU的渲染操作是在当前用于显示的屏幕缓冲区中进行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Off-Screen Rendering&lt;/strong&gt;&lt;br&gt;意为离屏渲染，指的是GPU在当前屏幕缓冲区以外新开辟一个缓冲区进行渲染操作。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;二、离屏渲染的是是非非&quot;&gt;&lt;a href=&quot;#二、离屏渲染的是是非非&quot; class=&quot;headerlink&quot; title=&quot;二、离屏渲染的是是非非&quot;&gt;&lt;/a&gt;二、离屏渲染的是是非非&lt;/h1&gt;&lt;p&gt;相比于当前屏幕渲染，离屏渲染的代价是很高的，主要体现在两个方面：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建新缓冲区&lt;/strong&gt;&lt;br&gt;要想进行离屏渲染，首先要创建一个新的缓冲区。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;上下文切换&lt;/strong&gt;&lt;br&gt;离屏渲染的整个过程，需要多次切换上下文环境：先是从当前屏幕（On-Screen）切换到离屏（Off-Screen）；等到离屏渲染结束以后，将离屏缓冲区的渲染结果显示到屏幕上有需要将上下文环境从离屏切换到当前屏幕。而上下文环境的切换是要付出很大代价的。&lt;/p&gt;
&lt;h1 id=&quot;三、离屏渲染触发方式&quot;&gt;&lt;a href=&quot;#三、离屏渲染触发方式&quot; class=&quot;headerlink&quot; title=&quot;三、离屏渲染触发方式&quot;&gt;&lt;/a&gt;三、离屏渲染触发方式&lt;/h1&gt;&lt;p&gt;设置了以下属性时，都会触发离屏绘制：&lt;br&gt;    shouldRasterize（光栅化）&lt;br&gt;    masks（遮罩）&lt;br&gt;    shadows（阴影）&lt;br&gt;    edge antialiasing（抗锯齿）&lt;br&gt;    group opacity（不透明）&lt;br&gt;需要注意的是，如果shouldRasterize被设置成YES，在触发离屏绘制的同时，会将光栅化后的内容缓存起来，如果对应的layer及其sublayers没有发生改变，在下一帧的时候可以直接复用。这将在很大程度上提升渲染性能。&lt;/p&gt;
&lt;p&gt;而其它属性如果是开启的，就不会有缓存，离屏绘制会在每一帧都发生。&lt;/p&gt;
&lt;h1 id=&quot;四、另一种特殊的“离屏渲染”&quot;&gt;&lt;a href=&quot;#四、另一种特殊的“离屏渲染”&quot; class=&quot;headerlink&quot; title=&quot;四、另一种特殊的“离屏渲染”&quot;&gt;&lt;/a&gt;四、另一种特殊的“离屏渲染”&lt;/h1&gt;&lt;p&gt;按照之前的说法，如果将不在GPU的当前屏幕缓冲区中进行的渲染都称为离屏渲染，那么就还有另一种特殊的“离屏渲染”方式：CPU渲染。&lt;/p&gt;
&lt;p&gt;如果我们重写了drawRect方法，并且使用任何Core Graphics的技术进行了绘制操作，就涉及到了CPU渲染。整个渲染过程由CPU在App内同步地完成，渲染得到的bitmap最后再交由GPU用于显示。&lt;/p&gt;
&lt;h1 id=&quot;五、Instruments&quot;&gt;&lt;a href=&quot;#五、Instruments&quot; class=&quot;headerlink&quot; title=&quot;五、Instruments&quot;&gt;&lt;/a&gt;五、Instruments&lt;/h1&gt;&lt;p&gt;Instruments的Core Animation工具中有几个和离屏渲染相关的检查选项：&lt;/p&gt;
&lt;p&gt;Color Offscreen-Rendered Yellow&lt;br&gt;开启后会把那些需要离屏渲染的图层高亮成黄色，这就意味着黄色图层可能存在性能问题。&lt;/p&gt;
&lt;p&gt;Color Hits Green and Misses Red&lt;br&gt;如果shouldRasterize被设置成YES，对应的渲染结果会被缓存，如果图层是绿色，就表示这些缓存被复用；如果是红色就表示缓存会被重复创建，这就表示该处存在性能问题了。&lt;/p&gt;
&lt;h1 id=&quot;六、如何抉择&quot;&gt;&lt;a href=&quot;#六、如何抉择&quot; class=&quot;headerlink&quot; title=&quot;六、如何抉择&quot;&gt;&lt;/a&gt;六、如何抉择&lt;/h1&gt;&lt;p&gt;现在摆在我们面前得有三个选择：当前屏幕渲染、离屏渲染、CPU渲染，该用哪个呢？这需要根据具体的使用场景来决定。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 尽量使用当前屏幕渲染&lt;/strong&gt;&lt;br&gt;鉴于离屏渲染、CPU渲染可能带来的性能问题，一般情况下，我们要尽量使用当前屏幕渲染。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 离屏渲染 VS CPU渲染&lt;/strong&gt;&lt;br&gt;由于GPU的浮点运算能力比CPU强，CPU渲染的效率可能不如离屏渲染；但如果仅仅是实现一个简单的效果，直接使用CPU渲染的效率又可能比离屏渲染好，毕竟离屏渲染要涉及到缓冲区创建和上下文切换等耗时操作。&lt;/p&gt;
&lt;p&gt;总之，具体的选择应该由性能测试结果来决定。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;h1 id=&quot;一、概念理解&quot;&gt;&lt;a href=&quot;#一、概念理解&quot; class=&quot;headerlink&quot; title=&quot;一、概念理解&quot;&gt;&lt;/a&gt;一、概念理解&lt;/h1&gt;&lt;p&gt;OpenGL中，GPU屏幕渲染有以下两种方式：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On-Screen Rendering&lt;/strong&gt;&lt;br&gt;意为当前屏幕渲染，指的是GPU的渲染操作是在当前用于显示的屏幕缓冲区中进行。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Off-Screen Rendering&lt;/strong&gt;&lt;br&gt;意为离屏渲染，指的是GPU在当前屏幕缓冲区以外新开辟一个缓冲区进行渲染操作。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS学习" scheme="http://yoursite.com/categories/iOS%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="iOS学习" scheme="http://yoursite.com/tags/iOS%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="离屏渲染" scheme="http://yoursite.com/tags/%E7%A6%BB%E5%B1%8F%E6%B8%B2%E6%9F%93/"/>
    
  </entry>
  
  <entry>
    <title>UIApplication学习笔记</title>
    <link href="http://yoursite.com/2016/03/02/UIApplication%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2016/03/02/UIApplication学习笔记/</id>
    <published>2016-03-02T15:51:06.000Z</published>
    <updated>2016-06-04T16:56:51.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;什么是UIApplication&quot;&gt;&lt;a href=&quot;#什么是UIApplication&quot; class=&quot;headerlink&quot; title=&quot;什么是UIApplication&quot;&gt;&lt;/a&gt;什么是UIApplication&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;UIApplication对象是应⽤程序的象征.&lt;br&gt;每一个应用都有⾃己的UIApplication对象,这个对象是系统自动帮我们创建的, 它是一个单例对象.&lt;br&gt;一个iOS程序启动后创建的第一个对象就是UIApplication对象&lt;br&gt;我们只能通过[UIApplication sharedApplication]获得这个单例对象,不能够手动去创建它.&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;UIApplication作用&quot;&gt;&lt;a href=&quot;#UIApplication作用&quot; class=&quot;headerlink&quot; title=&quot;UIApplication作用?&quot;&gt;&lt;/a&gt;UIApplication作用?&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;利⽤用UIApplication对象,能进⾏一些应用级别的操作.&lt;br&gt;可以设置应用程序图标右上角的红色提醒数字&lt;br&gt;设置联⽹指示器的可见性&lt;br&gt;可以设置应用程序的状态栏，进行应用之间的跳转.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;UIApplication功能&quot;&gt;&lt;a href=&quot;#UIApplication功能&quot; class=&quot;headerlink&quot; title=&quot;UIApplication功能&quot;&gt;&lt;/a&gt;UIApplication功能&lt;/h1&gt;&lt;h2 id=&quot;1-设置应用提醒数字&quot;&gt;&lt;a href=&quot;#1-设置应用提醒数字&quot; class=&quot;headerlink&quot; title=&quot;1.设置应用提醒数字&quot;&gt;&lt;/a&gt;1.设置应用提醒数字&lt;/h2&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;获取&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt;对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; *ap = [&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; sharedApplication];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;在设置之前, 要注册一个通知,从ios8之后,都要先注册一个通知对象.才能够接收到提醒. &lt;span class=&quot;built_in&quot;&gt;UIUserNotificationSettings&lt;/span&gt; *notice =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;built_in&quot;&gt;UIUserNotificationSettings&lt;/span&gt; settingsForTypes:&lt;span class=&quot;built_in&quot;&gt;UIUserNotificationTypeBadge&lt;/span&gt; categories:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注册通知对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[ap registerUserNotificationSettings:notice];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;设置提醒数字&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ap.applicationIconBadgeNumber = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;2-设置连网状态&quot;&gt;&lt;a href=&quot;#2-设置连网状态&quot; class=&quot;headerlink&quot; title=&quot;2.设置连网状态&quot;&gt;&lt;/a&gt;2.设置连网状态&lt;/h2&gt;&lt;p&gt;&lt;code&gt;ap.networkActivityIndicatorVisible = YES;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;3-设置状态栏&quot;&gt;&lt;a href=&quot;#3-设置状态栏&quot; class=&quot;headerlink&quot; title=&quot;3.设置状态栏&quot;&gt;&lt;/a&gt;3.设置状态栏&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;样式&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIStatusBarStyle&lt;/span&gt;)preferredStatusBarStyle &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIStatusBarStyleLightContent&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;隐藏状态栏,通过控制器的方式.同样实现方法:&lt;br&gt;返回NO时为不隐藏&lt;br&gt;返回YES时为隐藏&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)prefersStatusBarHidden &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通常在开发当中都是应用程序来管理状态栏的.来做统一管理,不然的话, 会有很多个控制器. 会非常的麻烦.&lt;br&gt;想要让应用程序管理状态栏,要在info.plist当中进行配置,&lt;br&gt;在最后一个添加一个key值:View controller-based status bar appearance&lt;br&gt;设置为NO.就是应用程序来管理了. 并且控制器管理会无效&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通过UIApplication来管理状态&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;获取UIApplication&lt;br&gt;&lt;code&gt;UIApplication *ap = [UIApplication sharedApplication];&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置状态栏样式.&lt;br&gt;&lt;code&gt;ap.statusBarStyle = UIStatusBarStyleLightContent;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置状态的隐藏&lt;br&gt;&lt;code&gt;ap.statusBarHidden = YES;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;跳转网页&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;UIApplication *ap = [UIApplication sharedApplication]; &lt;span class=&quot;string&quot;&gt;URL:&lt;/span&gt;协议头:&lt;span class=&quot;comment&quot;&gt;//域名 应用程序通过协议头的类型,去打开相应的软件.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NSURL *url =[NSURL &lt;span class=&quot;string&quot;&gt;URLWithString:&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&quot;http://www.baidu.com&quot;&lt;/span&gt;]; [ap &lt;span class=&quot;string&quot;&gt;openURL:&lt;/span&gt;url];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;打电话&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[application &lt;span class=&quot;string&quot;&gt;openURL:&lt;/span&gt;[NSURL &lt;span class=&quot;string&quot;&gt;URLWithString:&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&quot;tel://10086&quot;&lt;/span&gt;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;发短信&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[app &lt;span class=&quot;string&quot;&gt;openURL:&lt;/span&gt;[NSURL &lt;span class=&quot;string&quot;&gt;URLWithString:&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&quot;sms://10086&quot;&lt;/span&gt;]];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;UIApplication代理&quot;&gt;&lt;a href=&quot;#UIApplication代理&quot; class=&quot;headerlink&quot; title=&quot;UIApplication代理&quot;&gt;&lt;/a&gt;UIApplication代理&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;所有的移动操作系统都有个致命的缺点:app很容易受到打扰。&lt;br&gt;比如一个来电或者锁屏会导致app进入后台甚至被终止,还有很多其它类似的情况会导致app受到干扰,在app受到干扰时,会产生一些系统事件, 这时UIApplication会通知它的delegate对象,让delegate代理来处理这些系统事件&lt;br&gt;delegate可处理的事件包括:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;应用程序的生命周期事件(如程序启动和关闭)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统事件(如来电)&lt;/li&gt;
&lt;li&gt;内存警告&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;UIApplication会在程序一启动时候创建一个遵守UIApplicationDelegate的代理.&lt;br&gt;这个就是我们程序一创建时的AppDelegate类。AppDelegate就是遵守了UIApplicationDelegate协议。 在这个类中定义很多监听系统事件的方法.同时也定义了一些应用程序的生命周期方法.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;应用程序的生命周期&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;应用程序启动完成的时候调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)application:(&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; *)application didFinishLaunchingWithOptions: (&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *)launchOptions &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当我们应用程序即将失去焦点的时候调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)applicationWillResignActive:(&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; *)application &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%s&quot;&lt;/span&gt;,__func__);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当我们应用程序完全进⼊后台的时候调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)applicationDidEnterBackground:(&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; *)application&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%s&quot;&lt;/span&gt;,__func__);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当我们应用程序即将进⼊前台的时候调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)applicationWillEnterForeground:(&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; *)application &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%s&quot;&lt;/span&gt;,__func__);&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当我们应用程序完全获取焦点的时候调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;只有当一个应用程序完全获取到焦点,才能与用户交互.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)applicationDidBecomeActive:(&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; *)application &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%s&quot;&lt;/span&gt;,__func__);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;当我们应用程序即将关闭的时候调用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)applicationWillTerminate:(&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; *)application &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%s&quot;&lt;/span&gt;,__func__);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;应⽤程序的启动原理-重要&quot;&gt;&lt;a href=&quot;#应⽤程序的启动原理-重要&quot; class=&quot;headerlink&quot; title=&quot;应⽤程序的启动原理(重要)&quot;&gt;&lt;/a&gt;应⽤程序的启动原理(重要)&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;程序启动时执行main函数,在main函数当中有以下操作.&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; main(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * argv[]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;@autoreleasepool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIApplicationMain&lt;/span&gt;(argc, argv, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;NSStringFromClass&lt;/span&gt;([AppDelegate class])); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       第三个参数:&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt;类名或者子类的名称 &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;@&quot;UIApplication&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSStringFromClass&lt;/span&gt;好处:&lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;有提示功能 &lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;避免输入错误&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;程序完整启动流程&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;执行Main&lt;/li&gt;
&lt;li&gt;执行UIApplicationMain函数.&lt;/li&gt;
&lt;li&gt;创建UIApplication对象,并设置UIApplicationMain对象的代理.&lt;br&gt;UIApplication的第三个参数就是UIApplication的名称,如果指定为nil,它会默认 为UIApplication.&lt;br&gt;UIApplication的第四个参数为UIApplication的代理.&lt;/li&gt;
&lt;li&gt;开启一个主运行循环.保证应用程序不退出.&lt;/li&gt;
&lt;li&gt;加载info.plist.加载配置⽂文件.判断一下info.plist文件当中有没有Main storyboard file base name&lt;br&gt;⾥面有没有指定storyboard文件,如果有就去加载info.plist文件,如果没有,那么应用程序加载完毕.&lt;/li&gt;
&lt;li&gt;通知应用程序，调用代理方法&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原文链接：&lt;a href=&quot;http://www.jianshu.com/p/a72bcb948371&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/a72bcb948371&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是UIApplication&quot;&gt;&lt;a href=&quot;#什么是UIApplication&quot; class=&quot;headerlink&quot; title=&quot;什么是UIApplication&quot;&gt;&lt;/a&gt;什么是UIApplication&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;UIApplication对象是应⽤程序的象征.&lt;br&gt;每一个应用都有⾃己的UIApplication对象,这个对象是系统自动帮我们创建的, 它是一个单例对象.&lt;br&gt;一个iOS程序启动后创建的第一个对象就是UIApplication对象&lt;br&gt;我们只能通过[UIApplication sharedApplication]获得这个单例对象,不能够手动去创建它.&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="iOS学习" scheme="http://yoursite.com/categories/iOS%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="备忘" scheme="http://yoursite.com/tags/%E5%A4%87%E5%BF%98/"/>
    
      <category term="笔记" scheme="http://yoursite.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="UIApplication" scheme="http://yoursite.com/tags/UIApplication/"/>
    
  </entry>
  
  <entry>
    <title>iOS学习网站、博客</title>
    <link href="http://yoursite.com/2016/02/27/iOS%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99%E3%80%81%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2016/02/27/iOS学习网站、博客/</id>
    <published>2016-02-27T07:24:07.000Z</published>
    <updated>2016-06-04T16:58:04.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://o76hg1e0m.bkt.clouddn.com/37699326ddce0e28faccf077be3a38c0.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;学习网站&quot;&gt;&lt;a href=&quot;#学习网站&quot; class=&quot;headerlink&quot; title=&quot;学习网站&quot;&gt;&lt;/a&gt;学习网站&lt;/h1&gt;&lt;p&gt;妈妈再也不用担心我的自学了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://objccn.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;objc中国&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://nshipster.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NSHipster中文站&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.cocoachina.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cocoachina&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;常去博客&quot;&gt;&lt;a href=&quot;#常去博客&quot; class=&quot;headerlink&quot; title=&quot;常去博客&quot;&gt;&lt;/a&gt;常去博客&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://devtang.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;唐巧的技术博客&lt;/a&gt; ：并不多说，业界大牛&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://onevcat.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;王巍 (@onevcat)&lt;/a&gt;  ：喵神 &lt;a href=&quot;http://swifter.tips/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;喵神-Swifter.tips&lt;/a&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://casatwy.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;田伟宇&lt;/a&gt; ： 架构&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://blog.cnbluebox.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;刘坤的技术博客&lt;/a&gt; ： 干货&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://beyondvincent.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;破船之家&lt;/a&gt; ： &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://kittenyang.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;杨骑滔(KittenYang)&lt;/a&gt; ： 动画&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://allluckly.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bison的技术博客&lt;/a&gt; ： &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://yulingtianxia.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;杨萧玉&lt;/a&gt; ： runtime&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/users/b82d2721ba07/latest_articles&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;叶孤城___&lt;/a&gt; ： 技巧&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://southpeak.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;南峰子的技术博客&lt;/a&gt; ： &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://tech.glowing.com/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Glow 技术团队博客&lt;/a&gt; ： 团队博客&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/kenshincui/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;崔江涛 Kenshin Cui’s Blog&lt;/a&gt; ： 基础干货&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://adad184.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;里脊串的开发随笔&lt;/a&gt; ： &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://tutuge.me/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;土土哥的技术Blog&lt;/a&gt; ： &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://msching.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;码农人生&lt;/a&gt; ： 音频学习&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blog.lessfun.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;浮生猎趣&lt;/a&gt; ： &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.iosxxx.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;向晨宇的技术博客&lt;/a&gt; ： &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o76hg1e0m.bkt.clouddn.com/37699326ddce0e28faccf077be3a38c0.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="iOS学习" scheme="http://yoursite.com/categories/iOS%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="iOS学习" scheme="http://yoursite.com/tags/iOS%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Blogs" scheme="http://yoursite.com/tags/Blogs/"/>
    
  </entry>
  
  <entry>
    <title>ReactiveCocoa学习笔记</title>
    <link href="http://yoursite.com/2016/02/23/ReactiveCocoa%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2016/02/23/ReactiveCocoa学习笔记/</id>
    <published>2016-02-23T10:09:44.000Z</published>
    <updated>2016-06-04T15:45:02.000Z</updated>
    
    <content type="html">&lt;p&gt;RAC是Github 开源的一个应用于 iOS 和 OS X 开发的框架，兼具函数式编程和响应式编程的特性&lt;br&gt;解决问题：&lt;br&gt;    传统iOS开发，消息传递、回调机制复杂等问题，使之清晰化，条理化&lt;br&gt;  实现 MVVM 将更简单&lt;/p&gt;
&lt;p&gt;Github主页：&lt;br&gt;  &lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/ReactiveCocoa/ReactiveCocoa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;体积庞大：&lt;br&gt;    &lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa/tree/master/ReactiveCocoa/Objective-C&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/ReactiveCocoa/ReactiveCocoa/tree/master/ReactiveCocoa/Objective-C&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;用法：&lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa/tree/master/Documentation/Legacy&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/ReactiveCocoa/ReactiveCocoa/tree/master/Documentation/Legacy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最经典的示例：&lt;br&gt;        登录/注销需求： * 用户名、密码的长度均大于0，且当前尚未登录，登录按钮才可以点击（需要实时性地控制登录按钮是否可用的状态！）    &lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt; &lt;!-- (插播：&lt;https://github.com/DeveloperLx/LxDBAnything&gt;) --&gt;
&lt;h1 id=&quot;最常用的几招：&quot;&gt;&lt;a href=&quot;#最常用的几招：&quot; class=&quot;headerlink&quot; title=&quot;最常用的几招：&quot;&gt;&lt;/a&gt;最常用的几招：&lt;/h1&gt;&lt;p&gt;其中LxDBAnyVar为&lt;a href=&quot;https://github.com/DeveloperLx/LxDBAnything&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/DeveloperLx/LxDBAnything&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;target-action：&quot;&gt;&lt;a href=&quot;#target-action：&quot; class=&quot;headerlink&quot; title=&quot;target-action：&quot;&gt;&lt;/a&gt;target-action：&lt;/h2&gt;&lt;h3 id=&quot;文本框事件&quot;&gt;&lt;a href=&quot;#文本框事件&quot; class=&quot;headerlink&quot; title=&quot;* 文本框事件:&quot;&gt;&lt;/a&gt;* 文本框事件:&lt;/h3&gt;&lt;figure class=&quot;highlight scheme&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;name&quot;&gt;textField&lt;/span&gt; rac_signalForControlEvents:UIControlEventEditingChanged]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; subscribeNext:^(&lt;span class=&quot;name&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     LxDBAnyVar(&lt;span class=&quot;name&quot;&gt;x&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;name&quot;&gt;textField.rac_textSignal&lt;/span&gt; subscribeNext:^(&lt;span class=&quot;name&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LxDBAnyVar(&lt;span class=&quot;name&quot;&gt;x&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Tip: id x --&amp;gt; NSString * text&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h3 id=&quot;手势：&quot;&gt;&lt;a href=&quot;#手势：&quot; class=&quot;headerlink&quot; title=&quot;* 手势：&quot;&gt;&lt;/a&gt;* 手势：&lt;/h3&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view.userInteractionEnabled = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UITapGestureRecognizer&lt;/span&gt; * tap = [[&lt;span class=&quot;built_in&quot;&gt;UITapGestureRecognizer&lt;/span&gt; alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[tap rac_gestureSignal] subscribeNext:^(&lt;span class=&quot;built_in&quot;&gt;UITapGestureRecognizer&lt;/span&gt; * tap) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   LxDBAnyVar(tap);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view addGestureRecognizer:tap];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h3 id=&quot;通知：-最简单&quot;&gt;&lt;a href=&quot;#通知：-最简单&quot; class=&quot;headerlink&quot; title=&quot;* 通知：(最简单)&quot;&gt;&lt;/a&gt;* 通知：(最简单)&lt;/h3&gt;&lt;figure class=&quot;highlight scheme&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[[&lt;span class=&quot;name&quot;&gt;NSNotificationCenter&lt;/span&gt; defaultCenter]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rac_addObserverForName:UIApplicationDidEnterBackgroundNotification object:nil]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            subscribeNext:^(&lt;span class=&quot;name&quot;&gt;NSNotification&lt;/span&gt; * notification) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                LxDBAnyVar(&lt;span class=&quot;name&quot;&gt;notification&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;不需要removeObserver&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h3 id=&quot;定时器：&quot;&gt;&lt;a href=&quot;#定时器：&quot; class=&quot;headerlink&quot; title=&quot;* 定时器：&quot;&gt;&lt;/a&gt;* 定时器：&lt;/h3&gt;&lt;p&gt;延迟某个时间后再做某件事&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[RACScheduler mainThreadScheduler] afterDelay:2 schedule:^ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LxPrintAnything(&lt;span class=&quot;name&quot;&gt;rac&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;—————————————间隔一定时间做一件事&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[RACSignal interval:1 onScheduler:[RACScheduler mainThreadScheduler]]subscribeNext:^(&lt;span class=&quot;name&quot;&gt;NSDate&lt;/span&gt; * date) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LxDBAnyVar(&lt;span class=&quot;name&quot;&gt;date&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h3 id=&quot;代理：&quot;&gt;&lt;a href=&quot;#代理：&quot; class=&quot;headerlink&quot; title=&quot;* 代理：&quot;&gt;&lt;/a&gt;* 代理：&lt;/h3&gt;&lt;p&gt;(有局限，只能取代没有返回值的代理方法)&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;UIAlertView * alertView = [[UIAlertView alloc]&lt;span class=&quot;string&quot;&gt;initWithTitle:&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&quot;RAC&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;message:&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&quot;ReactiveCocoa&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;delegate:&lt;/span&gt;self &lt;span class=&quot;string&quot;&gt;cancelButtonTitle:&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&quot;Cancel&quot;&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;otherButtonTitles:&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&quot;Ensure&quot;&lt;/span&gt;, nil];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[self &lt;span class=&quot;string&quot;&gt;rac_signalForSelector:&lt;/span&gt;&lt;span class=&quot;meta&quot;&gt;@selector&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;alertView:&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;clickedButtonAtIndex:&lt;/span&gt;) &lt;span class=&quot;string&quot;&gt;fromProtocol:&lt;/span&gt;&lt;span class=&quot;meta&quot;&gt;@protocol&lt;/span&gt;(UIAlertViewDelegate)] &lt;span class=&quot;string&quot;&gt;subscribeNext:&lt;/span&gt;^(RACTuple * tuple) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LxDBAnyVar(tuple);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LxDBAnyVar(tuple.first);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LxDBAnyVar(tuple.second);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LxDBAnyVar(tuple.third);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[alertView show];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//  更简单的方式：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[alertView rac_buttonClickedSignal]&lt;span class=&quot;string&quot;&gt;subscribeNext:&lt;/span&gt;^(id x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    LxDBAnyVar(x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;KVO&quot;&gt;&lt;a href=&quot;#KVO&quot; class=&quot;headerlink&quot; title=&quot;KVO:&quot;&gt;&lt;/a&gt;KVO:&lt;/h2&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;UIScrollView * &lt;span class=&quot;keyword&quot;&gt;scrollView &lt;/span&gt;= [[UIScrollView alloc]init]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;scrollView.delegate &lt;/span&gt;= (id&amp;lt;UIScrollViewDelegate&amp;gt;)self&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[self.view &lt;span class=&quot;keyword&quot;&gt;addSubview:scrollView];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UIView * &lt;span class=&quot;keyword&quot;&gt;scrollViewContentView &lt;/span&gt;= [[UIView alloc]init]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;scrollViewContentView.backgroundColor &lt;/span&gt;= [UIColor yellowColor]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;scrollView &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;addSubview:scrollViewContentView];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@weakify(self)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;scrollView &lt;/span&gt;mas_makeConstraints:^(MASConstraintMaker *make) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   @strongify(self)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    make.edges.equalTo(self.view).&lt;span class=&quot;keyword&quot;&gt;insets(UIEdgeInsetsMake(80, &lt;/span&gt;&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;scrollViewContentView &lt;/span&gt;mas_makeConstraints:^(MASConstraintMaker *make) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   @strongify(self)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   make.edges.equalTo(&lt;span class=&quot;keyword&quot;&gt;scrollView);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;   make.size.mas_equalTo(CGSizeMake(CGRectGetWidth(self.view.frame), CGRectGetHeight(self.view.frame)))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[RACObserve(&lt;span class=&quot;keyword&quot;&gt;scrollView, &lt;/span&gt;contentOffset) &lt;span class=&quot;keyword&quot;&gt;subscribeNext:^(id &lt;/span&gt;x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      LxDBAnyVar(x)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;（好处：写法简单，keypath有代码提示）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h2 id=&quot;进阶：&quot;&gt;&lt;a href=&quot;#进阶：&quot; class=&quot;headerlink&quot; title=&quot;进阶：&quot;&gt;&lt;/a&gt;进阶：&lt;/h2&gt;&lt;h3 id=&quot;1-创建信号-amp-激活信号-amp-废弃信号-：&quot;&gt;&lt;a href=&quot;#1-创建信号-amp-激活信号-amp-废弃信号-：&quot; class=&quot;headerlink&quot; title=&quot;1.  创建信号 &amp;amp; 激活信号 &amp;amp; 废弃信号 ：&quot;&gt;&lt;/a&gt;1.  创建信号 &amp;amp; 激活信号 &amp;amp; 废弃信号 ：&lt;/h3&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (RACSignal *)loginSignal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return [RACSignal createSignal:^RACDisposable *(id&amp;lt;RACSubscriber&amp;gt; &lt;span class=&quot;keyword&quot;&gt;subscriber) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                RACDisposable * &lt;span class=&quot;keyword&quot;&gt;schedulerDisposable &lt;/span&gt;= [[RACScheduler mainThreadScheduler]afterDelay:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;schedule:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;                if (arc4random()%&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    [&lt;span class=&quot;keyword&quot;&gt;subscriber &lt;/span&gt;sendNext:@&lt;span class=&quot;string&quot;&gt;&quot;Login response&quot;&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    [&lt;span class=&quot;keyword&quot;&gt;subscriber &lt;/span&gt;sendCompleted]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    [&lt;span class=&quot;keyword&quot;&gt;subscriber &lt;/span&gt;sendError:[NSError errorWithDomain:@&lt;span class=&quot;string&quot;&gt;&quot;LOGIN_ERROR_DOMAIN&quot;&lt;/span&gt; code:&lt;span class=&quot;number&quot;&gt;444&lt;/span&gt; userInfo:@&amp;#123;&amp;#125;]]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            return [RACDisposable &lt;span class=&quot;keyword&quot;&gt;disposableWithBlock:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                [&lt;span class=&quot;keyword&quot;&gt;schedulerDisposable &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;dispose];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;            &amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;经典示例：&lt;br&gt;&lt;figure class=&quot;highlight scala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;type&quot;&gt;RACSignal&lt;/span&gt; *)rac_addObserverForName:(&lt;span class=&quot;type&quot;&gt;NSString&lt;/span&gt; *)notificationName &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt;&lt;/span&gt;:(id)&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@unsafeify&lt;/span&gt;(&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[&lt;span class=&quot;type&quot;&gt;RACSignal&lt;/span&gt; createSignal:^(id&amp;lt;&lt;span class=&quot;type&quot;&gt;RACSubscriber&lt;/span&gt;&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;@strongify&lt;/span&gt;(&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt;)&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        id observer = [self addObserverForName:notificationName &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt;&lt;/span&gt;:&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;queue&lt;/span&gt;&lt;/span&gt;:nil usingBlock:^(&lt;span class=&quot;type&quot;&gt;NSNotification&lt;/span&gt; *note) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [subscriber sendNext:note];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [&lt;span class=&quot;type&quot;&gt;RACDisposable&lt;/span&gt; disposableWithBlock:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [self removeObserver:observer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;] setNameWithFormat:@&lt;span class=&quot;string&quot;&gt;&quot;-rac_addObserverForName: %@ object: &amp;lt;%@: %p&amp;gt;&quot;&lt;/span&gt;, notificationName, [&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;class&lt;/span&gt;], &lt;span class=&quot;title&quot;&gt;object&lt;/span&gt;]&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;2-信号的处理：&quot;&gt;&lt;a href=&quot;#2-信号的处理：&quot; class=&quot;headerlink&quot; title=&quot;2.  信号的处理：&quot;&gt;&lt;/a&gt;2.  信号的处理：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;map：&lt;/li&gt;
&lt;li&gt;filter:&lt;/li&gt;
&lt;li&gt;delay:&lt;/li&gt;
&lt;li&gt;startWith:&lt;/li&gt;
&lt;li&gt;&lt;p&gt;timeout:&lt;/p&gt;
&lt;figure class=&quot;highlight clojure&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[[RACSignal createSignal:&lt;span class=&quot;comment&quot;&gt;^RACDisposable&lt;/span&gt; *(&lt;span class=&quot;name&quot;&gt;id&amp;lt;RACSubscriber&amp;gt;&lt;/span&gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [[RACScheduler mainThreadScheduler]afterDelay:3 schedule:&lt;span class=&quot;comment&quot;&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [subscriber sendNext:@&quot;rac&quot;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [subscriber sendCompleted];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   return &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;] timeout:2 onScheduler:[RACScheduler mainThreadScheduler]]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subscribeNext:^(&lt;span class=&quot;name&quot;&gt;id&lt;/span&gt; x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   LxDBAnyVar(&lt;span class=&quot;name&quot;&gt;x&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; error:^(&lt;span class=&quot;name&quot;&gt;NSError&lt;/span&gt; *error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   LxDBAnyVar(&lt;span class=&quot;name&quot;&gt;error&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; completed:&lt;span class=&quot;comment&quot;&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   LxPrintAnything(completed);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;take:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;skip:&lt;/li&gt;
&lt;li&gt;takeLast:&lt;/li&gt;
&lt;li&gt;takeUntil:&lt;/li&gt;
&lt;li&gt;takeWhileBlock:&lt;/li&gt;
&lt;li&gt;skipWhileBlock:&lt;/li&gt;
&lt;li&gt;skipUntilBlock:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; (即时搜索优化) &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;throttle:   &lt;/li&gt;
&lt;li&gt;distinctUntilChanged:&lt;/li&gt;
&lt;li&gt;ignore:&lt;/li&gt;
&lt;li&gt;&lt;p&gt;switchToLatest:&lt;/p&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;UITextField * textField = [[UITextField alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textField.backgroundColor = [UIColor cyanColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[self.view &lt;span class=&quot;string&quot;&gt;addSubview:&lt;/span&gt;textField];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@weakify&lt;/span&gt;(self); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[textField &lt;span class=&quot;string&quot;&gt;mas_makeConstraints:&lt;/span&gt;^(MASConstraintMaker *make) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;meta&quot;&gt;@strongify&lt;/span&gt;(self);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   make.size.mas_equalTo(CGSizeMake(&lt;span class=&quot;number&quot;&gt;180&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   make.center.equalTo(self.view);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[[[[[textField.rac_textSignal &lt;span class=&quot;string&quot;&gt;throttle:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;0.3&lt;/span&gt;]distinctUntilChanged]&lt;span class=&quot;string&quot;&gt;ignore:&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;] &lt;span class=&quot;string&quot;&gt;map:&lt;/span&gt;^id(id value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACSignal &lt;span class=&quot;string&quot;&gt;createSignal:&lt;/span&gt;^RACDisposable *(id&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;comment&quot;&gt;//  network request&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [subscriber &lt;span class=&quot;string&quot;&gt;sendNext:&lt;/span&gt;value];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [subscriber sendCompleted];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACDisposable &lt;span class=&quot;string&quot;&gt;disposableWithBlock:&lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;comment&quot;&gt;//  cancel request&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]switchToLatest] &lt;span class=&quot;string&quot;&gt;subscribeNext:&lt;/span&gt;^(id x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   LxDBAnyVar(x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;repeat:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [[[[[RACSignal &lt;span class=&quot;string&quot;&gt;createSignal:&lt;/span&gt;^RACDisposable *(id&amp;lt;RACSubscriber&amp;gt; subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [subscriber &lt;span class=&quot;string&quot;&gt;sendNext:&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&quot;rac&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [subscriber sendCompleted];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; nil;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;]&lt;span class=&quot;string&quot;&gt;delay:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]repeat]&lt;span class=&quot;string&quot;&gt;take:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] &lt;span class=&quot;string&quot;&gt;subscribeNext:&lt;/span&gt;^(id x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LxDBAnyVar(x);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;string&quot;&gt;completed:&lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        LxPrintAnything(completed);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;replay  信号缓存。防止因为信号多次订阅引起的数据不统一&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;merge:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RACSignal * signalA = [RACSignal createSignal:^RACDisposable *(id&amp;lt;RACSubscriber&amp;gt; &lt;span class=&quot;keyword&quot;&gt;subscriber) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;dispatch_after(dispatch_time(DISPATCH_TIME_NOW, &lt;/span&gt;(int64_t)(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * NSEC_PER_SEC)), &lt;span class=&quot;keyword&quot;&gt;dispatch_get_main_queue(), &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       LxPrintAnything(a)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;keyword&quot;&gt;subscriber &lt;/span&gt;sendNext:@&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;keyword&quot;&gt;subscriber &lt;/span&gt;sendCompleted]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   return nil&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RACSignal * signalB = [RACSignal createSignal:^RACDisposable *(id&amp;lt;RACSubscriber&amp;gt; &lt;span class=&quot;keyword&quot;&gt;subscriber) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;dispatch_after(dispatch_time(DISPATCH_TIME_NOW, &lt;/span&gt;(int64_t)(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * NSEC_PER_SEC)), &lt;span class=&quot;keyword&quot;&gt;dispatch_get_main_queue(), &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       LxPrintAnything(&lt;span class=&quot;keyword&quot;&gt;b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;       [&lt;span class=&quot;keyword&quot;&gt;subscriber &lt;/span&gt;sendNext:@&lt;span class=&quot;string&quot;&gt;&quot;b&quot;&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;keyword&quot;&gt;subscriber &lt;/span&gt;sendCompleted]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   return nil&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[RACSignal merge:@[signalA, signalB]]&lt;span class=&quot;keyword&quot;&gt;subscribeNext:^(id &lt;/span&gt;x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   LxDBAnyVar(x)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;combineLatest:reduce:&lt;/li&gt;
&lt;li&gt;concat:    （一个异步请求完成后，再启动另一个）&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RACSignal * signalA = [RACSignal createSignal:^RACDisposable *(id&amp;lt;RACSubscriber&amp;gt; &lt;span class=&quot;keyword&quot;&gt;subscriber) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;dispatch_after(dispatch_time(DISPATCH_TIME_NOW, &lt;/span&gt;(int64_t)(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; * NSEC_PER_SEC)), &lt;span class=&quot;keyword&quot;&gt;dispatch_get_main_queue(), &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       LxPrintAnything(a)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;keyword&quot;&gt;subscriber &lt;/span&gt;sendNext:@&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;keyword&quot;&gt;subscriber &lt;/span&gt;sendCompleted]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   return nil&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RACSignal * signalB = [RACSignal createSignal:^RACDisposable *(id&amp;lt;RACSubscriber&amp;gt; &lt;span class=&quot;keyword&quot;&gt;subscriber) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;dispatch_after(dispatch_time(DISPATCH_TIME_NOW, &lt;/span&gt;(int64_t)(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * NSEC_PER_SEC)), &lt;span class=&quot;keyword&quot;&gt;dispatch_get_main_queue(), &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       LxPrintAnything(&lt;span class=&quot;keyword&quot;&gt;b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;       [&lt;span class=&quot;keyword&quot;&gt;subscriber &lt;/span&gt;sendNext:@&lt;span class=&quot;string&quot;&gt;&quot;b&quot;&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;keyword&quot;&gt;subscriber &lt;/span&gt;sendCompleted]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   return nil&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[signalA concat:signalB]&lt;span class=&quot;keyword&quot;&gt;subscribeNext:^(id &lt;/span&gt;x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   LxDBAnyVar(x)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;zipWith:/combineLatest:   （多个异步请求都完成后，再做某件事）&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RACSignal * signalA = [RACSignal createSignal:^RACDisposable *(id&amp;lt;RACSubscriber&amp;gt; &lt;span class=&quot;keyword&quot;&gt;subscriber) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;dispatch_after(dispatch_time(DISPATCH_TIME_NOW, &lt;/span&gt;(int64_t)(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; * NSEC_PER_SEC)), &lt;span class=&quot;keyword&quot;&gt;dispatch_get_main_queue(), &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       LxPrintAnything(a)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;keyword&quot;&gt;subscriber &lt;/span&gt;sendNext:@&lt;span class=&quot;string&quot;&gt;&quot;a&quot;&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;keyword&quot;&gt;subscriber &lt;/span&gt;sendCompleted]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   return nil&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RACSignal * signalB = [RACSignal createSignal:^RACDisposable *(id&amp;lt;RACSubscriber&amp;gt; &lt;span class=&quot;keyword&quot;&gt;subscriber) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;dispatch_after(dispatch_time(DISPATCH_TIME_NOW, &lt;/span&gt;(int64_t)(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * NSEC_PER_SEC)), &lt;span class=&quot;keyword&quot;&gt;dispatch_get_main_queue(), &lt;/span&gt;^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       LxPrintAnything(&lt;span class=&quot;keyword&quot;&gt;b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;       [&lt;span class=&quot;keyword&quot;&gt;subscriber &lt;/span&gt;sendNext:@&lt;span class=&quot;string&quot;&gt;&quot;b&quot;&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;keyword&quot;&gt;subscriber &lt;/span&gt;sendCompleted]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   return nil&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[signalA zipWith:signalB]&lt;span class=&quot;keyword&quot;&gt;subscribeNext:^(id &lt;/span&gt;x) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   LxDBAnyVar(x)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;h3 id=&quot;RAC-lt-TARGET-…-gt-宏&quot;&gt;&lt;a href=&quot;#RAC-lt-TARGET-…-gt-宏&quot; class=&quot;headerlink&quot; title=&quot;RAC(&amp;lt;#TARGET, …#&amp;gt;) 宏:&quot;&gt;&lt;/a&gt;RAC(&amp;lt;#TARGET, …#&amp;gt;) 宏:&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;button setBackgroundColor:forState:&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;UIButton * &lt;span class=&quot;keyword&quot;&gt;button &lt;/span&gt;= [UIButton &lt;span class=&quot;keyword&quot;&gt;buttonWithType:UIButtonTypeCustom];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;[self.view &lt;span class=&quot;keyword&quot;&gt;addSubview:button];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@weakify(self)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;button &lt;/span&gt;mas_makeConstraints:^(MASConstraintMaker *make) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   @strongify(self)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   make.size.mas_equalTo(CGSizeMake(&lt;span class=&quot;number&quot;&gt;180&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   make.center.equalTo(self.view)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;RAC(&lt;span class=&quot;keyword&quot;&gt;button, &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;backgroundColor) &lt;/span&gt;= [RACObserve(&lt;span class=&quot;keyword&quot;&gt;button, &lt;/span&gt;selected) map:^UIColor *(NSNumber * selected) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   return [selected &lt;span class=&quot;keyword&quot;&gt;boolValue] &lt;/span&gt;? [UIColor redColor] : [UIColor greenColor]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;keyword&quot;&gt;button &lt;/span&gt;rac_signalForControlEvents:UIControlEventTouchUpInside]&lt;span class=&quot;keyword&quot;&gt;subscribeNext:^(UIButton &lt;/span&gt;* &lt;span class=&quot;keyword&quot;&gt;btn) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;btn.selected &lt;/span&gt;= !&lt;span class=&quot;keyword&quot;&gt;btn.selected;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;用最少的代码写一个秒表：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight lua&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RAC(label, text) = &lt;span class=&quot;string&quot;&gt;[[RACSignal interval:1 onScheduler:[RACScheduler mainThreadScheduler]]&lt;/span&gt; map:^NSString *(NSDate * date) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; date.description;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;RAC是Github 开源的一个应用于 iOS 和 OS X 开发的框架，兼具函数式编程和响应式编程的特性&lt;br&gt;解决问题：&lt;br&gt;    传统iOS开发，消息传递、回调机制复杂等问题，使之清晰化，条理化&lt;br&gt;  实现 MVVM 将更简单&lt;/p&gt;
&lt;p&gt;Github主页：&lt;br&gt;  &lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa&quot;&gt;https://github.com/ReactiveCocoa/ReactiveCocoa&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;体积庞大：&lt;br&gt;    &lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa/tree/master/ReactiveCocoa/Objective-C&quot;&gt;https://github.com/ReactiveCocoa/ReactiveCocoa/tree/master/ReactiveCocoa/Objective-C&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;用法：&lt;a href=&quot;https://github.com/ReactiveCocoa/ReactiveCocoa/tree/master/Documentation/Legacy&quot;&gt;https://github.com/ReactiveCocoa/ReactiveCocoa/tree/master/Documentation/Legacy&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最经典的示例：&lt;br&gt;        登录/注销需求： * 用户名、密码的长度均大于0，且当前尚未登录，登录按钮才可以点击（需要实时性地控制登录按钮是否可用的状态！）    &lt;/p&gt;
    
    </summary>
    
      <category term="iOS学习" scheme="http://yoursite.com/categories/iOS%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="ReactiveCocoa" scheme="http://yoursite.com/tags/ReactiveCocoa/"/>
    
      <category term="MVVM" scheme="http://yoursite.com/tags/MVVM/"/>
    
  </entry>
  
  <entry>
    <title>富文本NSAttributedString</title>
    <link href="http://yoursite.com/2016/02/13/%E5%AF%8C%E6%96%87%E6%9C%ACNSAttributedString/"/>
    <id>http://yoursite.com/2016/02/13/富文本NSAttributedString/</id>
    <published>2016-02-13T10:57:12.000Z</published>
    <updated>2016-06-14T10:51:22.000Z</updated>
    
    <content type="html">&lt;p&gt;iOS 富文本可以分为&lt;code&gt;NSAttributedString&lt;/code&gt;和&lt;code&gt;NSMutableAttributedString&lt;/code&gt;两种。在使用中通过将AttributedString赋值给控件的 &lt;code&gt;attributedText&lt;/code&gt; 属性来添加文字样式。有属性的控件有&lt;code&gt;UILabel、UITextField和UITextView&lt;/code&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;http://o76hg1e0m.bkt.clouddn.com/NSAttributedString.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;常用属性备忘&quot;&gt;&lt;a href=&quot;#常用属性备忘&quot; class=&quot;headerlink&quot; title=&quot;常用属性备忘&quot;&gt;&lt;/a&gt;常用属性备忘&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//初始化NSMutableAttributedString&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableAttributedString&lt;/span&gt; *attributedString = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableAttributedString&lt;/span&gt; alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置字体格式和大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str0 = &lt;span class=&quot;string&quot;&gt;@&quot;设置字体格式和大小&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr0 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSFontAttributeName&lt;/span&gt;:[&lt;span class=&quot;built_in&quot;&gt;UIFont&lt;/span&gt; systemFontOfSize:&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;]&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr0 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str0 attributes:dictAttr0];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr0];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置字体颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str1 = &lt;span class=&quot;string&quot;&gt;@&quot;\n设置字体颜色\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr1 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSForegroundColorAttributeName&lt;/span&gt;:[&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; purpleColor]&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr1 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str1 attributes:dictAttr1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置字体背景颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str2 = &lt;span class=&quot;string&quot;&gt;@&quot;设置字体背景颜色\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr2 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSBackgroundColorAttributeName&lt;/span&gt;:[&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; cyanColor]&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr2 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str2 attributes:dictAttr2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr2];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 注：NSLigatureAttributeName设置连体属性，取值为NSNumber对象（整数），1表示使用默认的连体字符，0表示不使用，2表示使用所有连体符号（iOS不支持2）。而且并非所有的字符之间都有组合符合。如 fly ，f和l会连起来。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置连体属性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str3 = &lt;span class=&quot;string&quot;&gt;@&quot;fly&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr3 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSFontAttributeName&lt;/span&gt;:[&lt;span class=&quot;built_in&quot;&gt;UIFont&lt;/span&gt; fontWithName:&lt;span class=&quot;string&quot;&gt;@&quot;futura&quot;&lt;/span&gt; size:&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;],&lt;span class=&quot;built_in&quot;&gt;NSLigatureAttributeName&lt;/span&gt;:[&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithInteger:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr3 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str3 attributes:dictAttr3];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr3];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 注：NSKernAttributeName用来设置字符之间的间距，取值为NSNumber对象（整数），负值间距变窄，正值间距变宽&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str4 = &lt;span class=&quot;string&quot;&gt;@&quot;\n设置字符间距&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr4 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSKernAttributeName&lt;/span&gt;:@(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr4 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str4 attributes:dictAttr4];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr4];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 注：NSStrikethroughStyleAttributeName设置删除线，取值为NSNumber对象，枚举NSUnderlineStyle中的值。NSStrikethroughColorAttributeName设置删除线的颜色。并可以将Style和Pattern相互 取与 获取不同的效果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str51 = &lt;span class=&quot;string&quot;&gt;@&quot;\n设置删除线为细单实线,颜色为红色&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr51 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSStrikethroughStyleAttributeName&lt;/span&gt;:@(&lt;span class=&quot;built_in&quot;&gt;NSUnderlineStyleSingle&lt;/span&gt;),&lt;span class=&quot;built_in&quot;&gt;NSStrikethroughColorAttributeName&lt;/span&gt;:[&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; redColor]&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr51 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str51 attributes:dictAttr51];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr51];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str52 = &lt;span class=&quot;string&quot;&gt;@&quot;\n设置删除线为粗单实线,颜色为红色&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr52 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSStrikethroughStyleAttributeName&lt;/span&gt;:@(&lt;span class=&quot;built_in&quot;&gt;NSUnderlineStyleThick&lt;/span&gt;),&lt;span class=&quot;built_in&quot;&gt;NSStrikethroughColorAttributeName&lt;/span&gt;:[&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; redColor]&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr52 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str52 attributes:dictAttr52];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr52];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str53 = &lt;span class=&quot;string&quot;&gt;@&quot;\n设置删除线为细双实线,颜色为红色&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr53 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSStrikethroughStyleAttributeName&lt;/span&gt;:@(&lt;span class=&quot;built_in&quot;&gt;NSUnderlineStyleDouble&lt;/span&gt;),&lt;span class=&quot;built_in&quot;&gt;NSStrikethroughColorAttributeName&lt;/span&gt;:[&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; redColor]&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr53 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str53 attributes:dictAttr53];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr53];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str54 = &lt;span class=&quot;string&quot;&gt;@&quot;\n设置删除线为细单虚线,颜色为红色&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr54 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSStrikethroughStyleAttributeName&lt;/span&gt;:@(&lt;span class=&quot;built_in&quot;&gt;NSUnderlineStyleSingle&lt;/span&gt;|&lt;span class=&quot;built_in&quot;&gt;NSUnderlinePatternDot&lt;/span&gt;),&lt;span class=&quot;built_in&quot;&gt;NSStrikethroughColorAttributeName&lt;/span&gt;:[&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; redColor]&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr54 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str54 attributes:dictAttr54];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr54];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; NSStrokeWidthAttributeName 设置笔画的宽度，取值为NSNumber对象（整数），负值填充效果，正值是中空效果。NSStrokeColorAttributeName  设置填充部分颜色，取值为UIColor对象。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 设置中间部分颜色可以使用 NSForegroundColorAttributeName 属性来进行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置笔画宽度和填充部分颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str6 = &lt;span class=&quot;string&quot;&gt;@&quot;\n设置笔画宽度和填充颜色\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr6 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSStrokeWidthAttributeName&lt;/span&gt;:@(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;),&lt;span class=&quot;built_in&quot;&gt;NSStrokeColorAttributeName&lt;/span&gt;:[&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; blueColor]&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr6 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str6 attributes:dictAttr6];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr6];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置阴影属性，取值为NSShadow对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str7 = &lt;span class=&quot;string&quot;&gt;@&quot;设置阴影属性\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSShadow&lt;/span&gt; *shadow = [[&lt;span class=&quot;built_in&quot;&gt;NSShadow&lt;/span&gt; alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shadow.shadowColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; redColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shadow.shadowBlurRadius = &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shadow.shadowOffset = &lt;span class=&quot;built_in&quot;&gt;CGSizeMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr7 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSShadowAttributeName&lt;/span&gt;:shadow&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr7 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str7 attributes:dictAttr7];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr7];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置文本特殊效果，取值为NSString类型，目前只有一个可用效果  NSTextEffectLetterpressStyle（凸版印刷效果）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str8 = &lt;span class=&quot;string&quot;&gt;@&quot;设置特殊效果\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr8 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSTextEffectAttributeName&lt;/span&gt;:&lt;span class=&quot;built_in&quot;&gt;NSTextEffectLetterpressStyle&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr8 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str8 attributes:dictAttr8];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr8];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置文本附件，取值为NSTextAttachment对象，常用于文字的图文混排&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str9 = &lt;span class=&quot;string&quot;&gt;@&quot;文字的图文混排\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSTextAttachment&lt;/span&gt; *textAttachment = [[&lt;span class=&quot;built_in&quot;&gt;NSTextAttachment&lt;/span&gt; alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textAttachment.image = [&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; imageNamed:&lt;span class=&quot;string&quot;&gt;@&quot;image&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textAttachment.bounds = &lt;span class=&quot;built_in&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableAttributedString&lt;/span&gt; *attr9 = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableAttributedString&lt;/span&gt; alloc]initWithString:str9];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attrStr1 = [&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; attributedStringWithAttachment:textAttachment];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attr9 appendAttributedString:attrStr1];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr9];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 添加下划线 NSUnderlineStyleAttributeName。设置下划线的颜色 NSUnderlineColorAttributeName，对象为 UIColor。使用方式同删除线一样。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//添加下划线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str10 = &lt;span class=&quot;string&quot;&gt;@&quot;添加下划线\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr10 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSUnderlineStyleAttributeName&lt;/span&gt;:@(&lt;span class=&quot;built_in&quot;&gt;NSUnderlineStyleSingle&lt;/span&gt;),&lt;span class=&quot;built_in&quot;&gt;NSUnderlineColorAttributeName&lt;/span&gt;:[&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; redColor]&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr10 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str10 attributes:dictAttr10];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr10];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; NSBaselineOffsetAttributeName 设置基线偏移值。取值为NSNumber （float），正值上偏，负值下偏&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置基线偏移值 NSBaselineOffsetAttributeName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str11 = &lt;span class=&quot;string&quot;&gt;@&quot;添加基线偏移值\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr11 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSBaselineOffsetAttributeName&lt;/span&gt;:@(&lt;span class=&quot;number&quot;&gt;-10&lt;/span&gt;)&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr11 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str11 attributes:dictAttr11];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr11];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; NSObliquenessAttributeName 设置字体倾斜度，取值为 NSNumber（float），正值右倾，负值左倾&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置字体倾斜度 NSObliquenessAttributeName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str12 = &lt;span class=&quot;string&quot;&gt;@&quot;设置字体倾斜度\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr12 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSObliquenessAttributeName&lt;/span&gt;:@(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;)&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr12 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str12 attributes:dictAttr12];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr12];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; NSExpansionAttributeName 设置字体的横向拉伸，取值为NSNumber （float），正值拉伸 ，负值压缩&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置字体的横向拉伸 NSExpansionAttributeName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str13 = &lt;span class=&quot;string&quot;&gt;@&quot;设置字体横向拉伸\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr13 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSExpansionAttributeName&lt;/span&gt;:@(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;)&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr13 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str13 attributes:dictAttr13];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr13];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; NSWritingDirectionAttributeName 设置文字的书写方向，取值为以下组合&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; @[@(NSWritingDirectionLeftToRight | NSWritingDirectionEmbedding)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; @[@(NSWritingDirectionLeftToRight | NSWritingDirectionOverride)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; @[@(NSWritingDirectionRightToLeft | NSWritingDirectionEmbedding)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; @[@(NSWritingDirectionRightToLeft | NSWritingDirectionOverride)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ???NSWritingDirectionEmbedding和NSWritingDirectionOverride有什么不同&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置文字的书写方向 NSWritingDirectionAttributeName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str14 = &lt;span class=&quot;string&quot;&gt;@&quot;设置文字书写方向\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr14 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSWritingDirectionAttributeName&lt;/span&gt;:@[@(&lt;span class=&quot;built_in&quot;&gt;NSWritingDirectionRightToLeft&lt;/span&gt; | &lt;span class=&quot;built_in&quot;&gt;NSWritingDirectionEmbedding&lt;/span&gt;)]&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr14 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str14 attributes:dictAttr14];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr14];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*!&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; NSVerticalGlyphFormAttributeName 设置文字排版方向，取值为NSNumber对象（整数），0表示横排文本，1表示竖排文本  在iOS中只支持0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置文字排版方向 NSVerticalGlyphFormAttributeName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str15 = &lt;span class=&quot;string&quot;&gt;@&quot;设置文字排版方向\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr15 = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSVerticalGlyphFormAttributeName&lt;/span&gt;:@(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attr15 = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:str15 attributes:dictAttr15];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString appendAttributedString:attr15];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//段落样式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableParagraphStyle&lt;/span&gt; *paragraph = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableParagraphStyle&lt;/span&gt; alloc]init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//行间距&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraph.lineSpacing = &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//段落间距&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraph.paragraphSpacing = &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//对齐方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraph.alignment = &lt;span class=&quot;built_in&quot;&gt;NSTextAlignmentLeft&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//指定段落开始的缩进像素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraph.firstLineHeadIndent = &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//调整全部文字的缩进像素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraph.headIndent = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//添加段落设置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attributedString addAttribute:&lt;span class=&quot;built_in&quot;&gt;NSParagraphStyleAttributeName&lt;/span&gt; value:paragraph range:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, attributedString.length)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UITextView&lt;/span&gt; *textView = [[&lt;span class=&quot;built_in&quot;&gt;UITextView&lt;/span&gt; alloc]initWithFrame:&lt;span class=&quot;built_in&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;70&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;,[&lt;span class=&quot;built_in&quot;&gt;UIScreen&lt;/span&gt; mainScreen].bounds.size.height&lt;span class=&quot;number&quot;&gt;-80&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textView.backgroundColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; groupTableViewBackgroundColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置textView的富文本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textView.attributedText = attributedString;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//textView高度自适应&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    [textView sizeToFit];&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view addSubview:textView];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;使用方法（上）&quot;&gt;&lt;a href=&quot;#使用方法（上）&quot; class=&quot;headerlink&quot; title=&quot;使用方法（上）&quot;&gt;&lt;/a&gt;使用方法（上）&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;创建属性字典，并将各种属性初始化。&lt;/li&gt;
&lt;li&gt;赋值，并利用方法appendAttributedString:添加入NSMutableAttributedString，&lt;/li&gt;
&lt;li&gt;将其赋给控件的attributedText属性。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;使用方法二&quot;&gt;&lt;a href=&quot;#使用方法二&quot; class=&quot;headerlink&quot; title=&quot;使用方法二&quot;&gt;&lt;/a&gt;使用方法二&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;初始化 &lt;code&gt;NSMutableAttributedString&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;然后向里面添加文字样式&lt;/li&gt;
&lt;li&gt;将其赋给控件的&lt;code&gt;attributedText&lt;/code&gt;属性。&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str = &lt;span class=&quot;string&quot;&gt;@&quot;在有生的瞬间能遇到你，竟花光所有运气&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//创建NSMutableAttributedString&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableAttributedString&lt;/span&gt; *attrStr = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableAttributedString&lt;/span&gt; alloc]initWithString:str];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置字体和设置字体的范围&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attrStr addAttribute:&lt;span class=&quot;built_in&quot;&gt;NSFontAttributeName&lt;/span&gt; value:[&lt;span class=&quot;built_in&quot;&gt;UIFont&lt;/span&gt; systemFontOfSize:&lt;span class=&quot;number&quot;&gt;30.0&lt;/span&gt;f] range:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//添加下划线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attrStr addAttribute:&lt;span class=&quot;built_in&quot;&gt;NSUnderlineStyleAttributeName&lt;/span&gt; value:[&lt;span class=&quot;built_in&quot;&gt;NSNumber&lt;/span&gt; numberWithInteger:&lt;span class=&quot;built_in&quot;&gt;NSUnderlineStyleSingle&lt;/span&gt;] range:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UILabel&lt;/span&gt; *label = [[&lt;span class=&quot;built_in&quot;&gt;UILabel&lt;/span&gt; alloc]initWithFrame:&lt;span class=&quot;built_in&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;label.backgroundColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; greenColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//自动换行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;label.numberOfLines = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//设置label的富文本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;label.attributedText = attrStr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//label高度自适应&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[label sizeToFit];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view addSubview:label];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;链接属性的设置&quot;&gt;&lt;a href=&quot;#链接属性的设置&quot; class=&quot;headerlink&quot; title=&quot;链接属性的设置&quot;&gt;&lt;/a&gt;链接属性的设置&lt;/h1&gt;&lt;p&gt;之所以把 &lt;code&gt;NSLinkAttributeName&lt;/code&gt; 属性单独列出来，是因为在 UILabel 和 UITextField 中是无法使用该属性的。更准确点说是在UILabel 和 UITextField 中无法实现点击链接启动浏览器打开一个URL地址，因为在此过程中用到了一个代理函数。只能用在 UITextView 中。&lt;/p&gt;
&lt;p&gt;NSLinkAttributeName 的对象是 NSURL 类型 或 NSString，但是优先使用 NSURL。&lt;/p&gt;
&lt;p&gt;需要实现UITextView的代理方法 - (BOOL)textView:(UITextView &lt;em&gt;)textView shouldInteractWithURL:(NSURL &lt;/em&gt;)URL inRange:(NSRange)characterRange，在该方法中，返回 YES，则会打开URL地址，返回 NO则不会。&lt;/p&gt;
&lt;h2 id=&quot;设置方式一&quot;&gt;&lt;a href=&quot;#设置方式一&quot; class=&quot;headerlink&quot; title=&quot;设置方式一&quot;&gt;&lt;/a&gt;设置方式一&lt;/h2&gt;&lt;p&gt;将全部文字设置为链接（可点击）&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *dictAttr = @&amp;#123;&lt;span class=&quot;built_in&quot;&gt;NSLinkAttributeName&lt;/span&gt;:[&lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; URLWithString:&lt;span class=&quot;string&quot;&gt;@&quot;https://github.com&quot;&lt;/span&gt;]&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attrStr = [[&lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; alloc]initWithString:&lt;span class=&quot;string&quot;&gt;@&quot;GitHub&quot;&lt;/span&gt; attributes:dictAttr];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textView.attributedText = attrStr;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;设置方式二&quot;&gt;&lt;a href=&quot;#设置方式二&quot; class=&quot;headerlink&quot; title=&quot;设置方式二&quot;&gt;&lt;/a&gt;设置方式二&lt;/h2&gt;&lt;p&gt;将部分文字设置为链接&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *str = &lt;span class=&quot;string&quot;&gt;@&quot;跳转到GitHub&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableAttributedString&lt;/span&gt; *attrStr = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableAttributedString&lt;/span&gt; alloc]initWithString:str];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[attrStr addAttribute:&lt;span class=&quot;built_in&quot;&gt;NSLinkAttributeName&lt;/span&gt; value:[&lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; URLWithString:&lt;span class=&quot;string&quot;&gt;@&quot;https://github.com&quot;&lt;/span&gt;] range:[str rangeOfString:&lt;span class=&quot;string&quot;&gt;@&quot;GitHub&quot;&lt;/span&gt;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textView.attributedText = attrStr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//代理回调方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)textView:(&lt;span class=&quot;built_in&quot;&gt;UITextView&lt;/span&gt; *)textView shouldInteractWithURL:(&lt;span class=&quot;built_in&quot;&gt;NSURL&lt;/span&gt; *)URL inRange:(&lt;span class=&quot;built_in&quot;&gt;NSRange&lt;/span&gt;)characterRange&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//在这里是可以做一些判定什么的，用来确定对应的操作。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;注意：&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;实现textView的代理，否则调不到回调方法。&lt;/li&gt;
&lt;li&gt;设置textView的 editable 属性为 NO，在可编辑的状态下是不可点击的。&lt;/li&gt;
&lt;li&gt;在模拟器环境下一直无法点击，在真机上是正常的，不知道是不是模拟器不支持。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;iOS 富文本可以分为&lt;code&gt;NSAttributedString&lt;/code&gt;和&lt;code&gt;NSMutableAttributedString&lt;/code&gt;两种。在使用中通过将AttributedString赋值给控件的 &lt;code&gt;attributedText&lt;/code&gt; 属性来添加文字样式。有属性的控件有&lt;code&gt;UILabel、UITextField和UITextView&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS学习" scheme="http://yoursite.com/categories/iOS%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="备忘" scheme="http://yoursite.com/tags/%E5%A4%87%E5%BF%98/"/>
    
      <category term="富文本" scheme="http://yoursite.com/tags/%E5%AF%8C%E6%96%87%E6%9C%AC/"/>
    
      <category term="NSAttributedString" scheme="http://yoursite.com/tags/NSAttributedString/"/>
    
  </entry>
  
  <entry>
    <title>(常用代码备忘)UIAppearance App全局设置</title>
    <link href="http://yoursite.com/2016/02/11/(%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E5%A4%87%E5%BF%98)UIAppearance%20App%E5%85%A8%E5%B1%80%E8%AE%BE%E7%BD%AE/"/>
    <id>http://yoursite.com/2016/02/11/(常用代码备忘)UIAppearance App全局设置/</id>
    <published>2016-02-11T11:01:34.000Z</published>
    <updated>2016-06-04T15:27:02.000Z</updated>
    
    <content type="html">&lt;p&gt;UIAppearance App全局设置&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在OC中, 很多UI提供了全局设置这一便捷的属性。但要注意, 有一些东西在iOS8中有, iOS7中没有,会导致iOS7.0程序奔溃。以下内容兼容iOS7, iOS8中的新特性没有列出来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;例如-全局的设置NavigaitonBar的tintColor的颜色。&quot;&gt;&lt;a href=&quot;#例如-全局的设置NavigaitonBar的tintColor的颜色。&quot; class=&quot;headerlink&quot; title=&quot;例如 全局的设置NavigaitonBar的tintColor的颜色。&quot;&gt;&lt;/a&gt;例如 全局的设置NavigaitonBar的tintColor的颜色。&lt;/h1&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-attr&quot;&gt;[[UINavigationBar appearance]&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;setTintColor&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:myColor&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UIActivityIndicatorView&quot;&gt;&lt;a href=&quot;#UIActivityIndicatorView&quot; class=&quot;headerlink&quot; title=&quot;UIActivityIndicatorView&quot;&gt;&lt;/a&gt;UIActivityIndicatorView&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;readwrite&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *color &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UIBarButtonItem&quot;&gt;&lt;a href=&quot;#UIBarButtonItem&quot; class=&quot;headerlink&quot; title=&quot;UIBarButtonItem&quot;&gt;&lt;/a&gt;UIBarButtonItem&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setBackgroundImage:(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImage forState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImageForState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setBackgroundImage:(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImage forState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state style:(&lt;span class=&quot;built_in&quot;&gt;UIBarButtonItemStyle&lt;/span&gt;)style barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImageForState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state style:(&lt;span class=&quot;built_in&quot;&gt;UIBarButtonItemStyle&lt;/span&gt;)style barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setBackgroundVerticalPositionAdjustment:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)adjustment forBarMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)backgroundVerticalPositionAdjustmentForBarMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setTitlePositionAdjustment:(&lt;span class=&quot;built_in&quot;&gt;UIOffset&lt;/span&gt;)adjustment forBarMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIOffset&lt;/span&gt;)titlePositionAdjustmentForBarMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setBackButtonBackgroundImage:(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImage forState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backButtonBackgroundImageForState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setBackButtonTitlePositionAdjustment:(&lt;span class=&quot;built_in&quot;&gt;UIOffset&lt;/span&gt;)adjustment forBarMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIOffset&lt;/span&gt;)backButtonTitlePositionAdjustmentForBarMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setBackButtonBackgroundVerticalPositionAdjustment:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)adjustment forBarMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UIBarItem&quot;&gt;&lt;a href=&quot;#UIBarItem&quot; class=&quot;headerlink&quot; title=&quot;UIBarItem&quot;&gt;&lt;/a&gt;UIBarItem&lt;/h1&gt;&lt;figure class=&quot;highlight pf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;TitleTextAttributes:(NSDictionary *)attributes &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;State:(UIControlState)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; NS_AVAILABLE_IOS(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) UI_APPEARANCE_SELECTOR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (NSDictionary *)titleTextAttributesForState:(UIControlState)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; NS_AVAILABLE_IOS(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) UI_APPEARANCE_SELECTOR;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UIButton&quot;&gt;&lt;a href=&quot;#UIButton&quot; class=&quot;headerlink&quot; title=&quot;UIButton&quot;&gt;&lt;/a&gt;UIButton&lt;/h1&gt;&lt;figure class=&quot;highlight pf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@property(nonatomic) UIEdgeInsets contentEdgeInsets UI_APPEARANCE_SELECTOR; // &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; is UIEdgeInsetsZero&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;TitleColor:(UIColor *)color &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;State:(UIControlState)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; UI_APPEARANCE_SELECTOR; // &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; if nil. use opaque white&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;TitleShadowColor:(UIColor *)color &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;State:(UIControlState)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; UI_APPEARANCE_SELECTOR; // &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; is nil. use &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;% black&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;BackgroundImage:(UIImage *)image &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;State:(UIControlState)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; UI_APPEARANCE_SELECTOR; // &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; is nil&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UINavigationBar&quot;&gt;&lt;a href=&quot;#UINavigationBar&quot; class=&quot;headerlink&quot; title=&quot;UINavigationBar&quot;&gt;&lt;/a&gt;UINavigationBar&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *barTintColor &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// default is nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setBackgroundImage:(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImage forBarPosition:(&lt;span class=&quot;built_in&quot;&gt;UIBarPosition&lt;/span&gt;)barPosition barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImageForBarPosition:(&lt;span class=&quot;built_in&quot;&gt;UIBarPosition&lt;/span&gt;)barPosition barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setBackgroundImage:(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImage forBarMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImageForBarMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *shadowImage &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *titleTextAttributes &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setTitleVerticalPositionAdjustment:(&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)adjustment forBarMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)titleVerticalPositionAdjustmentForBarMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *backIndicatorImage &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *backIndicatorTransitionMaskImage &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UIPageControl&quot;&gt;&lt;a href=&quot;#UIPageControl&quot; class=&quot;headerlink&quot; title=&quot;UIPageControl&quot;&gt;&lt;/a&gt;UIPageControl&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *pageIndicatorTintColor &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *currentPageIndicatorTintColor &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UIProgressView&quot;&gt;&lt;a href=&quot;#UIProgressView&quot; class=&quot;headerlink&quot; title=&quot;UIProgressView&quot;&gt;&lt;/a&gt;UIProgressView&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt;* progressTintColor &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt;* trackTintColor &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, retain) &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt;* progressImage &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, retain) &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt;* trackImage &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UIRefreshControl&quot;&gt;&lt;a href=&quot;#UIRefreshControl&quot; class=&quot;headerlink&quot; title=&quot;UIRefreshControl&quot;&gt;&lt;/a&gt;UIRefreshControl&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, retain) &lt;span class=&quot;built_in&quot;&gt;NSAttributedString&lt;/span&gt; *attributedTitle &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UISearchBar&quot;&gt;&lt;a href=&quot;#UISearchBar&quot; class=&quot;headerlink&quot; title=&quot;UISearchBar&quot;&gt;&lt;/a&gt;UISearchBar&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *barTintColor &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// default is nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *backgroundImage &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *scopeBarBackgroundImage &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setBackgroundImage:(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImage forBarPosition:(&lt;span class=&quot;built_in&quot;&gt;UIBarPosition&lt;/span&gt;)barPosition barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// Use UIBarMetricsDefaultPrompt to set a separate backgroundImage for a search bar with a prompt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImageForBarPosition:(&lt;span class=&quot;built_in&quot;&gt;UIBarPosition&lt;/span&gt;)barPosition barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setSearchFieldBackgroundImage:(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImage forState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)searchFieldBackgroundImageForState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setImage:(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)iconImage forSearchBarIcon:(&lt;span class=&quot;built_in&quot;&gt;UISearchBarIcon&lt;/span&gt;)icon state:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)imageForSearchBarIcon:(&lt;span class=&quot;built_in&quot;&gt;UISearchBarIcon&lt;/span&gt;)icon state:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setScopeBarButtonBackgroundImage:(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImage forState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)scopeBarButtonBackgroundImageForState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setScopeBarButtonDividerImage:(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)dividerImage forLeftSegmentState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)leftState rightSegmentState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)rightState &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)scopeBarButtonDividerImageForLeftSegmentState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)leftState rightSegmentState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)rightState &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setScopeBarButtonTitleTextAttributes:(&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *)attributes forState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *)scopeBarButtonTitleTextAttributesForState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UISearchBar-1&quot;&gt;&lt;a href=&quot;#UISearchBar-1&quot; class=&quot;headerlink&quot; title=&quot;UISearchBar&quot;&gt;&lt;/a&gt;UISearchBar&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;UIOffset&lt;/span&gt; searchFieldBackgroundPositionAdjustment &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;UIOffset&lt;/span&gt; searchTextPositionAdjustment &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setPositionAdjustment:(&lt;span class=&quot;built_in&quot;&gt;UIOffset&lt;/span&gt;)adjustment forSearchBarIcon:(&lt;span class=&quot;built_in&quot;&gt;UISearchBarIcon&lt;/span&gt;)icon &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIOffset&lt;/span&gt;)positionAdjustmentForSearchBarIcon:(&lt;span class=&quot;built_in&quot;&gt;UISearchBarIcon&lt;/span&gt;)icon &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UISegmentedControl&quot;&gt;&lt;a href=&quot;#UISegmentedControl&quot; class=&quot;headerlink&quot; title=&quot;UISegmentedControl&quot;&gt;&lt;/a&gt;UISegmentedControl&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setBackgroundImage:(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImage forState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImageForState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setDividerImage:(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)dividerImage forLeftSegmentState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)leftState rightSegmentState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)rightState barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)dividerImageForLeftSegmentState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)leftState rightSegmentState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)rightState barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setTitleTextAttributes:(&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *)attributes forState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *)titleTextAttributesForState:(&lt;span class=&quot;built_in&quot;&gt;UIControlState&lt;/span&gt;)state &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setContentPositionAdjustment:(&lt;span class=&quot;built_in&quot;&gt;UIOffset&lt;/span&gt;)adjustment forSegmentType:(&lt;span class=&quot;built_in&quot;&gt;UISegmentedControlSegment&lt;/span&gt;)leftCenterRightOrAlone barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIOffset&lt;/span&gt;)contentPositionAdjustmentForSegmentType:(&lt;span class=&quot;built_in&quot;&gt;UISegmentedControlSegment&lt;/span&gt;)leftCenterRightOrAlone barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UISlider&quot;&gt;&lt;a href=&quot;#UISlider&quot; class=&quot;headerlink&quot; title=&quot;UISlider&quot;&gt;&lt;/a&gt;UISlider&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *minimumTrackTintColor &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *maximumTrackTintColor &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *thumbTintColor &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UIStepper&quot;&gt;&lt;a href=&quot;#UIStepper&quot; class=&quot;headerlink&quot; title=&quot;UIStepper&quot;&gt;&lt;/a&gt;UIStepper&lt;/h1&gt;&lt;figure class=&quot;highlight pf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (void)&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;BackgroundImage:(UIImage*)image &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;State:(UIControlState)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; NS_AVAILABLE_IOS(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) UI_APPEARANCE_SELECTOR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (UIImage*)backgroundImageForState:(UIControlState)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; NS_AVAILABLE_IOS(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) UI_APPEARANCE_SELECTOR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;DividerImage:(UIImage*)image &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;LeftSegmentState:(UIControlState)leftState rightSegmentState:(UIControlState)rightState NS_AVAILABLE_IOS(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) UI_APPEARANCE_SELECTOR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (UIImage*)dividerImageForLeftSegmentState:(UIControlState)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; rightSegmentState:(UIControlState)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; NS_AVAILABLE_IOS(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) UI_APPEARANCE_SELECTOR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;IncrementImage:(UIImage *)image &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;State:(UIControlState)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; NS_AVAILABLE_IOS(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) UI_APPEARANCE_SELECTOR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (UIImage *)incrementImageForState:(UIControlState)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; NS_AVAILABLE_IOS(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) UI_APPEARANCE_SELECTOR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (void)&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt;DecrementImage:(UIImage *)image &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;State:(UIControlState)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; NS_AVAILABLE_IOS(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) UI_APPEARANCE_SELECTOR;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (UIImage *)decrementImageForState:(UIControlState)&lt;span class=&quot;keyword&quot;&gt;state&lt;/span&gt; NS_AVAILABLE_IOS(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) UI_APPEARANCE_SELECTOR;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UISwitch&quot;&gt;&lt;a href=&quot;#UISwitch&quot; class=&quot;headerlink&quot; title=&quot;UISwitch&quot;&gt;&lt;/a&gt;UISwitch&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *onTintColor &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *thumbTintColor &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, retain) &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *onImage &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, retain) &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *offImage &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UITabBar&quot;&gt;&lt;a href=&quot;#UITabBar&quot; class=&quot;headerlink&quot; title=&quot;UITabBar&quot;&gt;&lt;/a&gt;UITabBar&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *barTintColor &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// default is nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *selectedImageTintColor &lt;span class=&quot;built_in&quot;&gt;NS_DEPRECATED_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;_0,&lt;span class=&quot;string&quot;&gt;&quot;Use tintColor&quot;&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *backgroundImage &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *selectionIndicatorImage &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *shadowImage &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;UITabBarItemPositioning&lt;/span&gt; itemPositioning &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; itemWidth &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; itemSpacing &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;UIBarStyle&lt;/span&gt; barStyle &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UITabBarItem&quot;&gt;&lt;a href=&quot;#UITabBarItem&quot; class=&quot;headerlink&quot; title=&quot;UITabBarItem&quot;&gt;&lt;/a&gt;UITabBarItem&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setTitlePositionAdjustment:(&lt;span class=&quot;built_in&quot;&gt;UIOffset&lt;/span&gt;)adjustment &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIOffset&lt;/span&gt;)titlePositionAdjustment &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UITableView&quot;&gt;&lt;a href=&quot;#UITableView&quot; class=&quot;headerlink&quot; title=&quot;UITableView&quot;&gt;&lt;/a&gt;UITableView&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;UIEdgeInsets&lt;/span&gt; separatorInset &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// allows customization of the frame of cell separators&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *sectionIndexColor &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// color used for text of the section index&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *sectionIndexBackgroundColor &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// the background color of the section index while not being touched&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *sectionIndexTrackingBackgroundColor &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// the background color of the section index while it is being touched&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *separatorColor &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// default is the standard separator gray&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;UIVisualEffect&lt;/span&gt; *separatorEffect &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// effect to apply to table separators&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UITableViewCell&quot;&gt;&lt;a href=&quot;#UITableViewCell&quot; class=&quot;headerlink&quot; title=&quot;UITableViewCell&quot;&gt;&lt;/a&gt;UITableViewCell&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;UIEdgeInsets&lt;/span&gt; separatorInset &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// allows customization of the separator frame&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UIToolbar&quot;&gt;&lt;a href=&quot;#UIToolbar&quot; class=&quot;headerlink&quot; title=&quot;UIToolbar&quot;&gt;&lt;/a&gt;UIToolbar&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,retain) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *barTintColor &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// default is nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setBackgroundImage:(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImage forToolbarPosition:(&lt;span class=&quot;built_in&quot;&gt;UIBarPosition&lt;/span&gt;)topOrBottom barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)backgroundImageForToolbarPosition:(&lt;span class=&quot;built_in&quot;&gt;UIBarPosition&lt;/span&gt;)topOrBottom barMetrics:(&lt;span class=&quot;built_in&quot;&gt;UIBarMetrics&lt;/span&gt;)barMetrics &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setShadowImage:(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)shadowImage forToolbarPosition:(&lt;span class=&quot;built_in&quot;&gt;UIBarPosition&lt;/span&gt;)topOrBottom &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)shadowImageForToolbarPosition:(&lt;span class=&quot;built_in&quot;&gt;UIBarPosition&lt;/span&gt;)topOrBottom &lt;span class=&quot;built_in&quot;&gt;NS_AVAILABLE_IOS&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;_0) &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;UIView&quot;&gt;&lt;a href=&quot;#UIView&quot; class=&quot;headerlink&quot; title=&quot;UIView&quot;&gt;&lt;/a&gt;UIView&lt;/h1&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *backgroundColor &lt;span class=&quot;built_in&quot;&gt;UI_APPEARANCE_SELECTOR&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// default is nil. Can be useful with the appearance proxy on custom UIView subclasses.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;UIAppearance App全局设置&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在OC中, 很多UI提供了全局设置这一便捷的属性。但要注意, 有一些东西在iOS8中有, iOS7中没有,会导致iOS7.0程序奔溃。以下内容兼容iOS7, iOS8中的新特性没有列出来。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="备忘" scheme="http://yoursite.com/categories/%E5%A4%87%E5%BF%98/"/>
    
    
      <category term="UIAppearance" scheme="http://yoursite.com/tags/UIAppearance/"/>
    
      <category term="备忘" scheme="http://yoursite.com/tags/%E5%A4%87%E5%BF%98/"/>
    
  </entry>
  
  <entry>
    <title>TextKit学习笔记</title>
    <link href="http://yoursite.com/2016/02/05/TextKit%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2016/02/05/TextKit学习笔记/</id>
    <published>2016-02-05T05:03:59.000Z</published>
    <updated>2016-06-14T17:10:34.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;TextKit对象：&quot;&gt;&lt;a href=&quot;#TextKit对象：&quot; class=&quot;headerlink&quot; title=&quot;TextKit对象：&quot;&gt;&lt;/a&gt;TextKit对象：&lt;/h1&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;NSTextStorage，表示存储一段需要被处理的原始文本字符串和一些富文本属性设置项（NSAttributeString）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NSLayoutManager，文字排版布局管理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NSTextContainer，决定能够显示内容的区域&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;UITextView 中 NSAttributeString、NSMUtableAttrinuteString、NSParagraphStyle  ……等等一些富文本基本设置key&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSTextStorage&lt;/span&gt; *sharedStoage = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.originalTextView.textStorage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[sharedStoage replaceCharactersInRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) withString:[&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithContentsOfURL:[&lt;span class=&quot;built_in&quot;&gt;NSBundle&lt;/span&gt;.mainBundle URLForResource:&lt;span class=&quot;string&quot;&gt;@&quot;lorem&quot;&lt;/span&gt; withExtension:&lt;span class=&quot;string&quot;&gt;@&quot;txt&quot;&lt;/span&gt;]usedEncoding:&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt; error:&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSLayoutManager&lt;/span&gt; *otherLayoutManager = [&lt;span class=&quot;built_in&quot;&gt;NSLayoutManager&lt;/span&gt; new];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[sharedStoage addLayoutManager:otherLayoutManager];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSTextContainer&lt;/span&gt; *otherContainer = [&lt;span class=&quot;built_in&quot;&gt;NSTextContainer&lt;/span&gt; new];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[otherLayoutManager addTextContainer:otherContainer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UITextView&lt;/span&gt; *otherTextView = [[&lt;span class=&quot;built_in&quot;&gt;UITextView&lt;/span&gt; alloc] initWithFrame:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.otherContainerView.bounds textContainer:otherContainer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;otherTextView.backgroundColor = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.otherContainerView.backgroundColor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;otherTextView.translatesAutoresizingMaskIntoConstraints = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;otherTextView.scrollEnabled = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.otherContainerView addSubview:otherTextView];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.otherTextView = otherTextView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSTextContainer&lt;/span&gt; *thirdTextContainer = [&lt;span class=&quot;built_in&quot;&gt;NSTextContainer&lt;/span&gt; new];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[otherLayoutManager addTextContainer:thirdTextContainer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;UITextView&lt;/span&gt; *thirdTextView = [[&lt;span class=&quot;built_in&quot;&gt;UITextView&lt;/span&gt; alloc] initWithFrame:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.thirdContainerView.bounds textContainer:thirdTextContainer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;thirdTextView.backgroundColor = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.thirdContainerView.backgroundColor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;thirdTextView.translatesAutoresizingMaskIntoConstraints = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;thirdTextView.scrollEnabled = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.thirdContainerView addSubview:thirdTextView];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerlink&quot; title=&quot;实现&quot;&gt;&lt;/a&gt;实现&lt;/h1&gt;&lt;h2 id=&quot;第一步-创建textView&quot;&gt;&lt;a href=&quot;#第一步-创建textView&quot; class=&quot;headerlink&quot; title=&quot;第一步:创建textView&quot;&gt;&lt;/a&gt;第一步:创建textView&lt;/h2&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.title = &lt;span class=&quot;string&quot;&gt;@&quot;关于我们&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; createTextView];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;第二步-创建TextView时，创建NSTextContainer&quot;&gt;&lt;a href=&quot;#第二步-创建TextView时，创建NSTextContainer&quot; class=&quot;headerlink&quot; title=&quot;第二步:创建TextView时，创建NSTextContainer&quot;&gt;&lt;/a&gt;第二步:创建TextView时，创建NSTextContainer&lt;/h2&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)createTextView &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _textView = [[&lt;span class=&quot;built_in&quot;&gt;UITextView&lt;/span&gt; alloc] initWithFrame:&lt;span class=&quot;built_in&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;CGRectGetMaxY&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.lebel.frame) + &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, SCREEN_WIDTH&lt;span class=&quot;number&quot;&gt;-40&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;CGRectGetMaxY&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view.frame)-&lt;span class=&quot;built_in&quot;&gt;CGRectGetMaxY&lt;/span&gt;(_lebel.frame)) textContainer:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.textContainer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _textView.scrollEnabled                    = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _textView.editable                         = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _textView.selectable                       = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _textView.layer.masksToBounds              = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _textView.showsVerticalScrollIndicator     = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//    _textView.delegate                         = self;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view addSubview:_textView];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;第三步-创建NSTextContainer时，同时创建NSTextStorage、NSLayoutManager&quot;&gt;&lt;a href=&quot;#第三步-创建NSTextContainer时，同时创建NSTextStorage、NSLayoutManager&quot; class=&quot;headerlink&quot; title=&quot;第三步:创建NSTextContainer时，同时创建NSTextStorage、NSLayoutManager&quot;&gt;&lt;/a&gt;第三步:创建NSTextContainer时，同时创建NSTextStorage、NSLayoutManager&lt;/h2&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (NSTextContainer *)textContainer &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    NSString *text = @&quot;长亭外，古道边，芳草碧连天。晚风拂柳笛声残，夕阳山外山。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        天之涯，地之角，知交半零落。一斛浊酒尽余欢，今宵别梦寒。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        长亭外，古道边，芳草碧连天。问君此去几时来，来时莫徘徊。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        天之涯，地之角，知交半零落。人生难得是欢聚，惟有别离多。&quot;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _textStorage = [[NSTextStorage alloc] initWithString:text attributes:self.paragraphyDict]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _layoutManager = [[NSLayoutManager alloc] init]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [_textStorage addLayoutManager:_layoutManager]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _textContainer = [[NSTextContainer alloc] init]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGFloat width  = SCREEN_WIDTH - &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CGSize size = CGSizeMake(width, MAXFLOAT)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    _textContainer.size = size&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [_layoutManager addTextContainer:_textContainer]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return _textContainer&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;第四步，创建告诉TextKit如何排版TextView内容的富文本属性字典&quot;&gt;&lt;a href=&quot;#第四步，创建告诉TextKit如何排版TextView内容的富文本属性字典&quot; class=&quot;headerlink&quot; title=&quot;第四步，创建告诉TextKit如何排版TextView内容的富文本属性字典.&quot;&gt;&lt;/a&gt;第四步，创建告诉TextKit如何排版TextView内容的富文本属性字典.&lt;/h2&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSDictionary&lt;/span&gt; *)paragraphyDict &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSMutableDictionary&lt;/span&gt; *attributes = [&lt;span class=&quot;built_in&quot;&gt;NSMutableDictionary&lt;/span&gt; dictionary];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; *textColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; hexString:&lt;span class=&quot;string&quot;&gt;@&quot;#666666&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [attributes setValue:textColor forKey:&lt;span class=&quot;built_in&quot;&gt;NSForegroundColorAttributeName&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UIFont&lt;/span&gt; *textFont = [&lt;span class=&quot;built_in&quot;&gt;UIFont&lt;/span&gt; systemFontOfSize:&lt;span class=&quot;number&quot;&gt;13.&lt;/span&gt;f];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [attributes setValue:textFont forKey:&lt;span class=&quot;built_in&quot;&gt;NSFontAttributeName&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//创建段落样式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [attributes setValue:[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; style] forKey:&lt;span class=&quot;built_in&quot;&gt;NSParagraphStyleAttributeName&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; attributes;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;第五步、由上调用得到一个段落样式&quot;&gt;&lt;a href=&quot;#第五步、由上调用得到一个段落样式&quot; class=&quot;headerlink&quot; title=&quot;第五步、由上调用得到一个段落样式&quot;&gt;&lt;/a&gt;第五步、由上调用得到一个段落样式&lt;/h2&gt;&lt;figure class=&quot;highlight maxima&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (NSMutableParagraphStyle *)&lt;span class=&quot;built_in&quot;&gt;style&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  NSMutableParagraphStyle *&lt;span class=&quot;built_in&quot;&gt;style&lt;/span&gt; = [[NSMutableParagraphStyle alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;style&lt;/span&gt;.lineSpacing = &lt;span class=&quot;number&quot;&gt;8.&lt;/span&gt;5f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;style&lt;/span&gt;.paragraphSpacing = &lt;span class=&quot;number&quot;&gt;25.&lt;/span&gt;f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;style&lt;/span&gt;.firstLineHeadIndent = &lt;span class=&quot;number&quot;&gt;20.&lt;/span&gt;f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;style&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; NSMutableParagraphStyle段落样式的所有属性&lt;/strong&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 段落的风格（设置首行，行间距，对齐方式什么的）看自己需要什么属性，写什么  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;NSMutableParagraphStyle&lt;/span&gt; *paragraphStyle = [[&lt;span class=&quot;built_in&quot;&gt;NSMutableParagraphStyle&lt;/span&gt; alloc] init];  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 字体的行间距&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraphStyle.lineSpacing = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//首行缩进  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraphStyle.firstLineHeadIndent = &lt;span class=&quot;number&quot;&gt;20.0&lt;/span&gt;f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//段头缩进(首行除外) &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraphStyle.headIndent = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//段尾缩进&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraphStyle.tailIndent = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//（两端对齐的）文本对齐方式：（左，中，右，两端对齐，自然）  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraphStyle.alignment = &lt;span class=&quot;built_in&quot;&gt;NSTextAlignmentJustified&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//结尾（还有头部、中间）部分的内容以……方式省略 ( &quot;...wxyz&quot; ,&quot;abcd...&quot; ,&quot;ab...yz&quot;) &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraphStyle.lineBreakMode = &lt;span class=&quot;built_in&quot;&gt;NSLineBreakByTruncatingTail&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//最低行高&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraphStyle.minimumLineHeight = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//最大行高&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraphStyle.maximumLineHeight = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//段与段之间的间距  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraphStyle.paragraphSpacing = &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//段首行空白空间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraphStyle.paragraphSpacingBefore = &lt;span class=&quot;number&quot;&gt;22.0&lt;/span&gt;f;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//从左到右的书写方向（还有其他方向）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraphStyle.baseWritingDirection = &lt;span class=&quot;built_in&quot;&gt;NSWritingDirectionLeftToRight&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraphStyle.lineHeightMultiple = &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//连字属性 在iOS，唯一支持的值分别为0和1 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;paragraphStyle.hyphenationFactor = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;TextKit对象：&quot;&gt;&lt;a href=&quot;#TextKit对象：&quot; class=&quot;headerlink&quot; title=&quot;TextKit对象：&quot;&gt;&lt;/a&gt;TextKit对象：&lt;/h1&gt;
    
    </summary>
    
      <category term="iOS学习" scheme="http://yoursite.com/categories/iOS%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="富文本" scheme="http://yoursite.com/tags/%E5%AF%8C%E6%96%87%E6%9C%AC/"/>
    
      <category term="TextKit" scheme="http://yoursite.com/tags/TextKit/"/>
    
  </entry>
  
  <entry>
    <title>iOS富文本</title>
    <link href="http://yoursite.com/2016/01/23/iOS%E5%AF%8C%E6%96%87%E6%9C%AC/"/>
    <id>http://yoursite.com/2016/01/23/iOS富文本/</id>
    <published>2016-01-23T15:22:12.000Z</published>
    <updated>2016-06-14T15:33:27.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;要实现效果：&quot;&gt;&lt;a href=&quot;#要实现效果：&quot; class=&quot;headerlink&quot; title=&quot;要实现效果：&quot;&gt;&lt;/a&gt;要实现效果：&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;图片和文字混排&lt;/li&gt;
&lt;li&gt;文字样式修改&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;实现方式&quot;&gt;&lt;a href=&quot;#实现方式&quot; class=&quot;headerlink&quot; title=&quot;实现方式&quot;&gt;&lt;/a&gt;实现方式&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;CoreText/TextKit-原生实现&lt;/li&gt;
&lt;li&gt;UIWebView-间接实现&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;具体实现&quot;&gt;&lt;a href=&quot;#具体实现&quot; class=&quot;headerlink&quot; title=&quot;具体实现&quot;&gt;&lt;/a&gt;具体实现&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://7xkwcv.com1.z0.glb.clouddn.com/iOS%E4%B8%8A%E5%AF%8C%E6%96%87%E6%9C%AC%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://7xkwcv.com1.z0.glb.clouddn.com/iOS%E4%B8%8A%E5%AF%8C%E6%96%87%E6%9C%AC%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.png&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;通过CoreText-TextKit来原生实现&quot;&gt;&lt;a href=&quot;#通过CoreText-TextKit来原生实现&quot; class=&quot;headerlink&quot; title=&quot;通过CoreText/TextKit来原生实现&quot;&gt;&lt;/a&gt;通过CoreText/TextKit来原生实现&lt;/h2&gt;&lt;p&gt;iOS 6之前：CoreText,纯C语言,极其蛋疼&lt;br&gt;iOS 6开始：NSAttributedString,简单易用&lt;br&gt;iOS 7开始：TextKit,功能强大,简单易用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对于NSAttributedString（iOS6开始）：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以给指定范围（range）内的string添加属性（见UIKit中的&lt;code&gt;NSAttributedString.h&lt;/code&gt;中的属性列表）；&lt;/li&gt;
&lt;li&gt;可以使用它的类方法&lt;code&gt;attributedStringWithAttachment:&lt;/code&gt;，将图片以附件（&lt;code&gt;NSTextAttachment&lt;/code&gt;）的形式附加在已有NSAttributedString的后面。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;对于TextKit（iOS7开始）：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以通过继承&lt;code&gt;NSTextStorage&lt;/code&gt;或&lt;code&gt;NSLayoutManager&lt;/code&gt;来对不同的样式（如指定文字的高亮、背景颜色、下划线等）进行自定义处理；&lt;/li&gt;
&lt;li&gt;可以设置&lt;code&gt;NSTextContainer&lt;/code&gt;的&lt;code&gt;exclusionPaths&lt;/code&gt;属性来设置镂空区域。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;对于DTCoreText：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对CoreText进行了封装；&lt;/li&gt;
&lt;li&gt;可以将html转换成&lt;code&gt;NSAttributedString&lt;/code&gt;，而依然以&lt;strong&gt;html的样式&lt;/strong&gt;展示出来；&lt;/li&gt;
&lt;li&gt;支持CSS样式的展示；&lt;/li&gt;
&lt;li&gt;支持内嵌html5视频及播放；&lt;/li&gt;
&lt;li&gt;支持对多种附件（图片、视频等）的自定义处理；&lt;/li&gt;
&lt;li&gt;支持远程图片等懒加载。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;补充：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;正如&lt;a href=&quot;http://stackoverflow.com/questions/4217820/convert-html-to-nsattributedstring-in-ios/18886718#18886718&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pix&lt;/a&gt;所说，iOS7起，UIKit中添加了&lt;code&gt;initWithData:options:documentAttributes:error:&lt;/code&gt;方法，可以用HTML来初始化一个NSAttributedString对象。如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[[NSAttributedString alloc] initWithData:[htmlString dataUsingEncoding:NSUTF8StringEncoding] 
                                 options:@{NSDocumentTypeDocumentAttribute: NSHTMLTextDocumentType,
                                           NSCharacterEncodingDocumentAttribute: @(NSUTF8StringEncoding)} 
                      documentAttributes:nil error:nil];
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但从评论中来看，普遍反映执行起来花费时间很长。所以类似情况，还是优先考虑使用DTCoreText。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Ref:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CoreText教程：&lt;a href=&quot;https://www.raywenderlich.com/4147/core-text-tutorial-for-ios-making-a-magazine-app&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.raywenderlich.com/4147/core-text-tutorial-for-ios-making-a-magazine-app&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;DTCoreText: &lt;a href=&quot;https://github.com/Cocoanetics/DTCoreText&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Cocoanetics/DTCoreText&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;DTCoreText-Demo: &lt;a href=&quot;https://github.com/yoon-boom/DTCoreText-DEMO&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/yoon-boom/DTCoreText-DEMO&lt;/a&gt;(Happy to find an executable one!)&lt;/li&gt;
&lt;li&gt;DTCoreText的源码分析：&lt;a href=&quot;http://blog.cnbang.net/tech/2630/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.cnbang.net/tech/2630/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TextKit教程：&lt;a href=&quot;https://www.raywenderlich.com/50151/text-kit-tutorial&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.raywenderlich.com/50151/text-kit-tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;YYText：&lt;a href=&quot;https://github.com/ibireme/YYText&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/ibireme/YYText&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/4217820/convert-html-to-nsattributedstring-in-ios/18886718#18886718&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://stackoverflow.com/questions/4217820/convert-html-to-nsattributedstring-in-ios/18886718#18886718&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;通过UIWebView来间接实现&quot;&gt;&lt;a href=&quot;#通过UIWebView来间接实现&quot; class=&quot;headerlink&quot; title=&quot;通过UIWebView来间接实现&quot;&gt;&lt;/a&gt;通过UIWebView来间接实现&lt;/h2&gt;&lt;p&gt;原理是类似symfony中的twig模板，将设计好的模板存在项目中（.mustache和.html），字体保存为.ttf，然后每次请求数据时，将服务器返回的html用这个模板进行渲染，再用嵌入的webview加载，从而得到整体风格一致的页面。&lt;/p&gt;
&lt;p&gt;具体实现可以参考开源中国iOS版本的源码。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Ref:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GRMustache：&lt;a href=&quot;https://github.com/groue/GRMustache&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/groue/GRMustache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/syntaxhighlighter/syntaxhighlighter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/syntaxhighlighter/syntaxhighlighter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;开源中国iOS版本源码：&lt;a href=&quot;http://git.oschina.net/oschina/iphone-app/tree/master&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://git.oschina.net/oschina/iphone-app/tree/master&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://www.calios.gq/2016/05/17/iOS%E4%B8%8A%E5%AF%8C%E6%96%87%E6%9C%AC%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文地址http://www.calios.gq/2016/05/17/iOS%E4%B8%8A%E5%AF%8C%E6%96%87%E6%9C%AC%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;要实现效果：&quot;&gt;&lt;a href=&quot;#要实现效果：&quot; class=&quot;headerlink&quot; title=&quot;要实现效果：&quot;&gt;&lt;/a&gt;要实现效果：&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;图片和文字混排&lt;/li&gt;
&lt;li&gt;文字样式修改&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="iOS学习" scheme="http://yoursite.com/categories/iOS%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="备忘" scheme="http://yoursite.com/tags/%E5%A4%87%E5%BF%98/"/>
    
      <category term="富文本" scheme="http://yoursite.com/tags/%E5%AF%8C%E6%96%87%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>(常用代码备忘)UIScrollView</title>
    <link href="http://yoursite.com/2016/01/22/(%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E5%A4%87%E5%BF%98)UIScrollView/"/>
    <id>http://yoursite.com/2016/01/22/(常用代码备忘)UIScrollView/</id>
    <published>2016-01-22T10:37:16.000Z</published>
    <updated>2016-06-04T15:45:56.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;UIScrollView&quot;&gt;&lt;a href=&quot;#UIScrollView&quot; class=&quot;headerlink&quot; title=&quot;UIScrollView&quot;&gt;&lt;/a&gt;UIScrollView&lt;/h1&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;属性&quot;&gt;&lt;a href=&quot;#属性&quot; class=&quot;headerlink&quot; title=&quot;属性&quot;&gt;&lt;/a&gt;属性&lt;/h2&gt;&lt;h3 id=&quot;contentOffset&quot;&gt;&lt;a href=&quot;#contentOffset&quot; class=&quot;headerlink&quot; title=&quot;contentOffset&quot;&gt;&lt;/a&gt;contentOffset&lt;/h3&gt;&lt;p&gt;默认CGPointZero，用来设置scrollView的滚动偏移量。&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置scrollView的滚动偏移量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scrollView.contentOffset = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;contentSize&quot;&gt;&lt;a href=&quot;#contentSize&quot; class=&quot;headerlink&quot; title=&quot;contentSize&quot;&gt;&lt;/a&gt;contentSize&lt;/h3&gt;&lt;p&gt;默认CGSizeZero，用来设置scrollView的滚动范围。&lt;br&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置scrollView的滚动范围&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scrollView.contentSize = CGSizeMake( self.view.bounds.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;width&lt;/span&gt;, self.view.bounds.&lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;height&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;contentInset&quot;&gt;&lt;a href=&quot;#contentInset&quot; class=&quot;headerlink&quot; title=&quot;contentInset&quot;&gt;&lt;/a&gt;contentInset&lt;/h3&gt;&lt;p&gt;默认 UIEdgeInsetsZero，用来设置scrollView的额外滚动区域。&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置scrollView的额外顶部滚动区域:(UIEdgeInsetsMake是逆时针设置，上左下右)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scrollView.contentInset = &lt;span class=&quot;built_in&quot;&gt;UIEdgeInsetsMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;bounces&quot;&gt;&lt;a href=&quot;#bounces&quot; class=&quot;headerlink&quot; title=&quot;bounces&quot;&gt;&lt;/a&gt;bounces&lt;/h3&gt;&lt;p&gt;默认为YES，用来设置scrollView的弹簧效果&lt;br&gt;&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 取消scrollView的弹簧效果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scrollView.bounces = &lt;span class=&quot;keyword&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;pagingEnabled&quot;&gt;&lt;a href=&quot;#pagingEnabled&quot; class=&quot;headerlink&quot; title=&quot;pagingEnabled&quot;&gt;&lt;/a&gt;pagingEnabled&lt;/h3&gt;&lt;p&gt;默认为NO，用来设置scrollView是否开启分页.&lt;br&gt;&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 开启分页&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scrollView.pagingEnabled = &lt;span class=&quot;keyword&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;scrollEnabled&quot;&gt;&lt;a href=&quot;#scrollEnabled&quot; class=&quot;headerlink&quot; title=&quot;scrollEnabled&quot;&gt;&lt;/a&gt;scrollEnabled&lt;/h3&gt;&lt;p&gt;默认为YES，用来设置scrollView是否允许滚动.&lt;br&gt;&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// scrollView禁止滚动&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scrollView.scrollEnabled = &lt;span class=&quot;keyword&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;showsHorizontalScrollIndicator&quot;&gt;&lt;a href=&quot;#showsHorizontalScrollIndicator&quot; class=&quot;headerlink&quot; title=&quot;showsHorizontalScrollIndicator&quot;&gt;&lt;/a&gt;showsHorizontalScrollIndicator&lt;/h3&gt;&lt;p&gt;默认为YES，用来设置scrollView是否显示水平滚动条.&lt;br&gt;&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 隐藏水平滚动条&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scrollView.showsHorizontalScrollIndicator = &lt;span class=&quot;keyword&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;showsVerticalScrollIndicator&quot;&gt;&lt;a href=&quot;#showsVerticalScrollIndicator&quot; class=&quot;headerlink&quot; title=&quot;showsVerticalScrollIndicator&quot;&gt;&lt;/a&gt;showsVerticalScrollIndicator&lt;/h3&gt;&lt;p&gt;默认为YES，用来设置scrollView是否显示垂直滚动条.&lt;br&gt;&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 隐藏垂直滚动条&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scrollView.showsVerticalScrollIndicator = &lt;span class=&quot;keyword&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;minimumZoomScale&quot;&gt;&lt;a href=&quot;#minimumZoomScale&quot; class=&quot;headerlink&quot; title=&quot;minimumZoomScale&quot;&gt;&lt;/a&gt;minimumZoomScale&lt;/h3&gt;&lt;p&gt;默认1.0，用来设置scrollView最少缩小比例.&lt;br&gt;&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置scrollView允许子视图的最大放大比例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scrollView.maximumZoomScale = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;maximumZoomScale&quot;&gt;&lt;a href=&quot;#maximumZoomScale&quot; class=&quot;headerlink&quot; title=&quot;maximumZoomScale&quot;&gt;&lt;/a&gt;maximumZoomScale&lt;/h3&gt;&lt;p&gt;默认1.0，用来设置scrollView最大放大比例.&lt;br&gt;&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置scrollView允许子视图的最小缩放比例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;scrollView.minimumZoomScale = &lt;span class=&quot;number&quot;&gt;0.8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;directionalLockEnabled&quot;&gt;&lt;a href=&quot;#directionalLockEnabled&quot; class=&quot;headerlink&quot; title=&quot;directionalLockEnabled&quot;&gt;&lt;/a&gt;directionalLockEnabled&lt;/h3&gt;&lt;p&gt;指定控件是否只能在一个方向上滚动&lt;/p&gt;
&lt;h3 id=&quot;decelerationRate&quot;&gt;&lt;a href=&quot;#decelerationRate&quot; class=&quot;headerlink&quot; title=&quot;decelerationRate&quot;&gt;&lt;/a&gt;decelerationRate&lt;/h3&gt;&lt;p&gt;改变scrollerView的减速点位置&lt;/p&gt;
&lt;h3 id=&quot;tracking&quot;&gt;&lt;a href=&quot;#tracking&quot; class=&quot;headerlink&quot; title=&quot;tracking&quot;&gt;&lt;/a&gt;tracking&lt;/h3&gt;&lt;p&gt;监控当前目标是否正在被跟踪&lt;/p&gt;
&lt;h3 id=&quot;dragging&quot;&gt;&lt;a href=&quot;#dragging&quot; class=&quot;headerlink&quot; title=&quot;dragging&quot;&gt;&lt;/a&gt;dragging&lt;/h3&gt;&lt;p&gt;改变scrollerView的减速点位置&lt;/p&gt;
&lt;h3 id=&quot;delaysContentTouches&quot;&gt;&lt;a href=&quot;#delaysContentTouches&quot; class=&quot;headerlink&quot; title=&quot;delaysContentTouches&quot;&gt;&lt;/a&gt;delaysContentTouches&lt;/h3&gt;&lt;p&gt;控制视图是否延时调用开始滚动的方法&lt;/p&gt;
&lt;h3 id=&quot;canCancelContentTouches&quot;&gt;&lt;a href=&quot;#canCancelContentTouches&quot; class=&quot;headerlink&quot; title=&quot;canCancelContentTouches&quot;&gt;&lt;/a&gt;canCancelContentTouches&lt;/h3&gt;&lt;p&gt;控制控件是否接触取消touch的事件&lt;/p&gt;
&lt;h3 id=&quot;indicatorStyle&quot;&gt;&lt;a href=&quot;#indicatorStyle&quot; class=&quot;headerlink&quot; title=&quot;indicatorStyle&quot;&gt;&lt;/a&gt;indicatorStyle&lt;/h3&gt;&lt;p&gt;设定滚动条的样式&lt;/p&gt;
&lt;h3 id=&quot;decelerating&quot;&gt;&lt;a href=&quot;#decelerating&quot; class=&quot;headerlink&quot; title=&quot;decelerating&quot;&gt;&lt;/a&gt;decelerating&lt;/h3&gt;&lt;p&gt;监控当前目标是否正在减速&lt;/p&gt;
&lt;h2 id=&quot;delegate&quot;&gt;&lt;a href=&quot;#delegate&quot; class=&quot;headerlink&quot; title=&quot;delegate&quot;&gt;&lt;/a&gt;delegate&lt;/h2&gt;&lt;p&gt;类要遵守UIScrollViewDelegate协议&lt;br&gt;scrollView.delegate = self;　声明scrollView的代理是当前控制器， 这个方法在UIScrollViewDelegate里所以我们要遵守UIScrollViewDelegate这个协议&lt;/p&gt;
&lt;h3 id=&quot;没有开启分页的时候，代理方法调用顺序：&quot;&gt;&lt;a href=&quot;#没有开启分页的时候，代理方法调用顺序：&quot; class=&quot;headerlink&quot; title=&quot;没有开启分页的时候，代理方法调用顺序：&quot;&gt;&lt;/a&gt;没有开启分页的时候，代理方法调用顺序：&lt;/h3&gt;&lt;p&gt;scrollViewWillBeginDragging –&amp;gt; scrollViewDidScroll -&amp;gt; scrollViewWillEndDragging -&amp;gt; scrollViewDidEndDragging&lt;/p&gt;
&lt;h3 id=&quot;开启分页的时候，代理方法调用顺序&quot;&gt;&lt;a href=&quot;#开启分页的时候，代理方法调用顺序&quot; class=&quot;headerlink&quot; title=&quot;开启分页的时候，代理方法调用顺序&quot;&gt;&lt;/a&gt;开启分页的时候，代理方法调用顺序&lt;/h3&gt;&lt;p&gt;scrollViewWillBeginDragging -&amp;gt; scrollViewDidScroll -&amp;gt; scrollViewDidEndDragging -&amp;gt;scrollViewWillBeginDecelerating -&amp;gt;scrollViewDidScroll -&amp;gt; scrollViewDidEndDecelerating&lt;/p&gt;
&lt;h3 id=&quot;当scrollView的偏移量一改变就会调用这个方法，即滚动scrollView就会调用。&quot;&gt;&lt;a href=&quot;#当scrollView的偏移量一改变就会调用这个方法，即滚动scrollView就会调用。&quot; class=&quot;headerlink&quot; title=&quot;当scrollView的偏移量一改变就会调用这个方法，即滚动scrollView就会调用。&quot;&gt;&lt;/a&gt;当scrollView的偏移量一改变就会调用这个方法，即滚动scrollView就会调用。&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;(void)scrollViewDidScroll:(UIScrollView *)scrollView;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;当scrollView缩放时，就会调用这个方法&quot;&gt;&lt;a href=&quot;#当scrollView缩放时，就会调用这个方法&quot; class=&quot;headerlink&quot; title=&quot;当scrollView缩放时，就会调用这个方法&quot;&gt;&lt;/a&gt;当scrollView缩放时，就会调用这个方法&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;(void)scrollViewDidZoom:(UIScrollView *)scrollView NS_AVAILABLE_IOS(3_2);&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;即将拖拽的时候调用&quot;&gt;&lt;a href=&quot;#即将拖拽的时候调用&quot; class=&quot;headerlink&quot; title=&quot;即将拖拽的时候调用.&quot;&gt;&lt;/a&gt;即将拖拽的时候调用.&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;(void)scrollViewWillBeginDragging:(UIScrollView *)scrollView;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;即将停止拖拽的时候调用&quot;&gt;&lt;a href=&quot;#即将停止拖拽的时候调用&quot; class=&quot;headerlink&quot; title=&quot;即将停止拖拽的时候调用&quot;&gt;&lt;/a&gt;即将停止拖拽的时候调用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;(void)scrollViewWillEndDragging:(UIScrollView &lt;em&gt;)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(inout CGPoint &lt;/em&gt;)targetContentOffset NS_AVAILABLE_IOS(5_0);&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;停止拖拽的时候调用。&quot;&gt;&lt;a href=&quot;#停止拖拽的时候调用。&quot; class=&quot;headerlink&quot; title=&quot;停止拖拽的时候调用。&quot;&gt;&lt;/a&gt;停止拖拽的时候调用。&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;(void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;即将减速完成的时候调用。&quot;&gt;&lt;a href=&quot;#即将减速完成的时候调用。&quot; class=&quot;headerlink&quot; title=&quot;即将减速完成的时候调用。&quot;&gt;&lt;/a&gt;即将减速完成的时候调用。&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;(void)scrollViewWillBeginDecelerating:(UIScrollView *)scrollView;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;减速完成的时候调用&quot;&gt;&lt;a href=&quot;#减速完成的时候调用&quot; class=&quot;headerlink&quot; title=&quot;减速完成的时候调用&quot;&gt;&lt;/a&gt;减速完成的时候调用&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;(void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;返回需要缩放哪个视图，这个视图必须是scrollView里的子视图。&quot;&gt;&lt;a href=&quot;#返回需要缩放哪个视图，这个视图必须是scrollView里的子视图。&quot; class=&quot;headerlink&quot; title=&quot;返回需要缩放哪个视图，这个视图必须是scrollView里的子视图。&quot;&gt;&lt;/a&gt;返回需要缩放哪个视图，这个视图必须是scrollView里的子视图。&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;(UIView &lt;em&gt;)viewForZoomingInScrollView:(UIScrollView &lt;/em&gt;)scrollView;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 列如：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;-&lt;/span&gt; (UIView *)&lt;span class=&quot;selector-tag&quot;&gt;viewForZoomingInScrollView&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:(UIScrollView&lt;/span&gt; *)&lt;span class=&quot;selector-tag&quot;&gt;scrollView&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  　　  return scrollView&lt;span class=&quot;selector-class&quot;&gt;.subviews&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[0]&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;scrollView即将开始缩放&quot;&gt;&lt;a href=&quot;#scrollView即将开始缩放&quot; class=&quot;headerlink&quot; title=&quot;scrollView即将开始缩放&quot;&gt;&lt;/a&gt;scrollView即将开始缩放&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;(void)scrollViewWillBeginZooming:(UIScrollView &lt;em&gt;)scrollView withView:(UIView &lt;/em&gt;)view NS_AVAILABLE_IOS(3_2);&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;scrollView完成缩放&quot;&gt;&lt;a href=&quot;#scrollView完成缩放&quot; class=&quot;headerlink&quot; title=&quot;scrollView完成缩放&quot;&gt;&lt;/a&gt;scrollView完成缩放&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;(void)scrollViewDidEndZooming:(UIScrollView &lt;em&gt;)scrollView withView:(UIView &lt;/em&gt;)view atScale:(float)scale;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;UIScrollView&quot;&gt;&lt;a href=&quot;#UIScrollView&quot; class=&quot;headerlink&quot; title=&quot;UIScrollView&quot;&gt;&lt;/a&gt;UIScrollView&lt;/h1&gt;
    
    </summary>
    
      <category term="备忘" scheme="http://yoursite.com/categories/%E5%A4%87%E5%BF%98/"/>
    
    
      <category term="备忘" scheme="http://yoursite.com/tags/%E5%A4%87%E5%BF%98/"/>
    
      <category term="UIScrollView" scheme="http://yoursite.com/tags/UIScrollView/"/>
    
      <category term="常用代码" scheme="http://yoursite.com/tags/%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>ViewController瘦身</title>
    <link href="http://yoursite.com/2016/01/18/ViewController%E7%98%A6%E8%BA%AB/"/>
    <id>http://yoursite.com/2016/01/18/ViewController瘦身/</id>
    <published>2016-01-18T11:34:27.000Z</published>
    <updated>2016-06-04T15:44:45.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;该篇主要针对的是UITableViewController，因为UITableViewController是iOS开发中用的最多的组件。&lt;br&gt;本文转自：&lt;a href=&quot;http://objccn.io/issue-1-1/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://objccn.io/issue-1-1/&lt;/a&gt;&lt;br&gt;示例代码地址：&lt;a href=&quot;https://github.com/ZeroDY/DYSource/tree/master/DYDataSourceDelegate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/ZeroDY/DYSource/tree/master/DYDataSourceDelegate&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;将DataSource从ViewController中进行抽离&quot;&gt;&lt;a href=&quot;#将DataSource从ViewController中进行抽离&quot; class=&quot;headerlink&quot; title=&quot;将DataSource从ViewController中进行抽离&quot;&gt;&lt;/a&gt;将DataSource从ViewController中进行抽离&lt;/h1&gt;&lt;p&gt;其实就是把UITableViewDataSource协议用一个单独的类来实现。抽离的目的是什么呢？当然是复用了，我们就不用在每个含有TableView的ViewController里边都实现一遍UITableViewDataSource协议了，省时省力，极大提高代码质量和编程效率。那该怎么抽离呢？&lt;br&gt;首先为实现DataSource协议的类起个名字吧，比如叫：ArrayDataSource。接下来看一下都要实现哪些协议：&lt;/p&gt;
&lt;figure class=&quot;highlight erlang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- &lt;span class=&quot;params&quot;&gt;(NSInteger)&lt;/span&gt;tableView:&lt;span class=&quot;params&quot;&gt;(UITableView*)&lt;/span&gt;tableView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; numberOfRowsInSection:&lt;span class=&quot;params&quot;&gt;(NSInteger)&lt;/span&gt;section;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- &lt;span class=&quot;params&quot;&gt;(UITableViewCell*)&lt;/span&gt;tableView:&lt;span class=&quot;params&quot;&gt;(UITableView*)&lt;/span&gt;tableView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cellForRowAtIndexPath:&lt;span class=&quot;params&quot;&gt;(NSIndexPath*)&lt;/span&gt;indexPath;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一个协议返回数组元素个数。第二个协议返回一个UITableViewCell。&lt;br&gt;数组简单，直接传进去就好了，cell呢？cell的创建方法为：&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;UITableViewCell *cell = [tableView &lt;span class=&quot;string&quot;&gt;dequeueReusableCellWithIdentifier:&lt;/span&gt;cellIdentifier &lt;span class=&quot;string&quot;&gt;forIndexPath:&lt;/span&gt;indexPath];&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这种创建方式要求identifier已经注册到具体的Cell类型&lt;br&gt;其中 tableView和indexPath这两个参数都是通过协议方法返回的，直接用。所以只剩下Identifier这个参数需要我们自己设置。这样我们就确定了两个参数需要传到ArrayDataSource，一个是数组，一个是Identifier。这样是不是就没问题了呢？当然不是，因为每个TableView的Cell都是不一样的，同时每个数组元素的类型也是不确定的。怎么保证Cell的多态性呢？这是问题的关键&lt;br&gt;多态的用法一般就是进行类型转换，比如我们经常在代码里这么写&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CustomCell *cell = [tableView &lt;span class=&quot;string&quot;&gt;dequeueReusableCellWithIdentifier:&lt;/span&gt;cellIdentifier &lt;span class=&quot;string&quot;&gt;forIndexPath:&lt;/span&gt;indexPath];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其实这个可以拆分成两行代码&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;UITableViewCell *cell = [tableView &lt;span class=&quot;string&quot;&gt;dequeueReusableCellWithIdentifier:&lt;/span&gt;cellIdentifier &lt;span class=&quot;string&quot;&gt;forIndexPath:&lt;/span&gt;indexPath];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CustomCell *customCell = cell;&lt;span class=&quot;comment&quot;&gt;//类型转换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;所以关键就是怎么做来实现类型转换，其实cell创建之后类型已经确定了，但是我们需要对其进行显式的转换以便对cell进行设置，两个思路，一个是delegate，一个是block。&lt;br&gt;delegate的话，可以定义一个类似这样的协议：&lt;br&gt;&lt;code&gt;- (void)configCell:(id)cell withItem:(id)item;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后在具体的ViewController实现如下：&lt;br&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)&lt;span class=&quot;string&quot;&gt;configCell:&lt;/span&gt;(id)cell &lt;span class=&quot;string&quot;&gt;withItem:&lt;/span&gt;(id)item&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CustomCell *customCell = cell;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CustomModel *customModel = item;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [customCell &lt;span class=&quot;string&quot;&gt;setContent:&lt;/span&gt;customModel];&lt;span class=&quot;comment&quot;&gt;//setContent方法需要在CustomCell实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;相对于delegate，我还是倾向于block，因为block结构紧凑，易于阅读，那么block该如何写呢？block的功能类似函数指针的功能。我们在具体的ViewController里定义好具体的参数类型以及实现，然后将block传到ArrayDataSource。那么ArrayDataSource的block类型应该怎么写呢？&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; (^TableViewCellConfigureBlock)(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; cell, &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; item);&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因为要复用，所以要写成id类型&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)initWithItems:(&lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *)anItems&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     cellIdentifier:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)aCellIdentifier&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; configureCellBlock:(TableViewCellConfigureBlock)aConfigureCellBlock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; = [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.items = anItems;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.cellIdentifier = aCellIdentifier;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.configureCellBlock = [aConfigureCellBlock &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UITableViewCell&lt;/span&gt;*)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt;*)tableView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cellForRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt;*)indexPath &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; cell = [tableView dequeueReusableCellWithIdentifier:cellIdentifier&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                              forIndexPath:indexPath];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; item = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; itemAtIndexPath:indexPath];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.configureCellBlock(cell,item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; cell;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;而具体的ViewController里应该这么写&lt;br&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void (^configureCell)(CustomCell*, CustomModel*) = ^(CustomCell* cell, CustomModel* model) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [cell setContent:model]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;photosArrayDataSource = [[ArrayDataSource alloc] initWithItems:photos&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                cellIdentifier:PhotoCellIdentifier&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                            configureCellBlock:configureCell]&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;self.tableView.dataSource = photosArrayDataSource&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样就搞定了，是不是很爽呢，ArrayDataSource就可以作为一个数据源类来使用了，省去好多重复代码。&lt;br&gt;同时还有一个小细节：&lt;br&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;-&lt;/span&gt; (id)&lt;span class=&quot;selector-tag&quot;&gt;itemAtIndexPath&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:(NSIndexPath&lt;/span&gt; *)&lt;span class=&quot;selector-tag&quot;&gt;indexPath&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return self&lt;span class=&quot;selector-class&quot;&gt;.items&lt;/span&gt;&lt;span class=&quot;selector-attr&quot;&gt;[(NSUInteger) indexPath.row]&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;也是为了复用，对外只暴露indexPath参数，同时返回id类型。 &lt;/p&gt;
&lt;h1 id=&quot;让-Cells-可复用&quot;&gt;&lt;a href=&quot;#让-Cells-可复用&quot; class=&quot;headerlink&quot; title=&quot;让 Cells 可复用&quot;&gt;&lt;/a&gt;让 Cells 可复用&lt;/h1&gt;&lt;p&gt;有时多种 model 对象需要用同一类型的 cell 来表示，这种情况下，我们怎么让 cell 复用呢？因为 [cell setContent:model];content的参数类型是确定的，那怎么做可以保证同一个cell可以设置不同的model呢？对，协议，只要遵循了该Cell协议的对象都可以作为-setContent:的参数。&lt;br&gt;首先，我们给 cell 定义一个 protocol，需要用这个 cell 对于的model对象必须遵循这个 protocol。类似这样：&lt;br&gt;&lt;figure class=&quot;highlight haml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@protocol CellConfigDelegate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;ruby&quot;&gt; (NSString *)imageName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; (NSString *)mainTitle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; (NSString *)subTitle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;@end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后简单修改 category 中的设置方法，让它可以接受遵循这个 protocol 的对象。&lt;br&gt;&lt;code&gt;- (void)setContent:(id&amp;lt;CellConfigDelegate&amp;gt;)model;&lt;/code&gt;&lt;br&gt;这些简单的步骤让 cell 和任何特殊的 model 对象之间得以解耦，让它可适应不同的数据类型。 &lt;/p&gt;
&lt;h1 id=&quot;在-Cell-内部控制-Cell-的状态&quot;&gt;&lt;a href=&quot;#在-Cell-内部控制-Cell-的状态&quot; class=&quot;headerlink&quot; title=&quot;在 Cell 内部控制 Cell 的状态&quot;&gt;&lt;/a&gt;在 Cell 内部控制 Cell 的状态&lt;/h1&gt;&lt;p&gt;如果你想自定义 table views 默认的高亮或选择行为，你可以实现两个 delegate 方法，把点击的 cell 修改成我们想要的样子。例如：&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        didHighlightRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *)indexPath&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PhotoCell *cell = [tableView cellForRowAtIndexPath:indexPath];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cell.photoTitleLabel.shadowColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; darkGrayColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cell.photoTitleLabel.shadowOffset = &lt;span class=&quot;built_in&quot;&gt;CGSizeMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)tableView:(&lt;span class=&quot;built_in&quot;&gt;UITableView&lt;/span&gt; *)tableView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        didUnhighlightRowAtIndexPath:(&lt;span class=&quot;built_in&quot;&gt;NSIndexPath&lt;/span&gt; *)indexPath&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    PhotoCell *cell = [tableView cellForRowAtIndexPath:indexPath];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cell.photoTitleLabel.shadowColor = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然而，这两个 delegate 方法的实现又基于了 view controller 知晓 cell 实现的具体细节。如果我们想替换或重新设计 cell，我们必须改写 delegate 代码。View 的实现细节和 delegate 的实现交织在一起了。我们应该把这些细节移到 cell 自身中去。&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;PhotoCell&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)setHighlighted:(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)highlighted animated:(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)animated&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; setHighlighted:highlighted animated:animated];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (highlighted) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.photoTitleLabel.shadowColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; darkGrayColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.photoTitleLabel.shadowOffset = &lt;span class=&quot;built_in&quot;&gt;CGSizeMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.photoTitleLabel.shadowColor = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样我们通过&lt;code&gt;- (void)setHighlighted:(BOOL)highlighted animated:(BOOL)animated&lt;/code&gt;中的bool参数就可以设置不同状态了。&lt;br&gt;总的来说，我们在努力把 view 层和 controller 层的实现细节分离开。delegate 肯定得清楚一个 view 该显示什么状态，但是它不应该了解如何修改 view 结构或者给某些 subviews 设置某些属性以获得正确的状态。所有这些逻辑都应该封装到 view 内部，然后给外部提供一个简单地 API。 &lt;/p&gt;
&lt;p&gt;##将业务逻辑移到Model层比如一些格式化字符串，解析数据等都放到Model层去处理&lt;/p&gt;
&lt;p&gt;##将网络请求移到Model层对网络请求进行封装到单独的模块 &lt;/p&gt;
&lt;p&gt;##把 View相关代码移到 View 层对于复杂的视图，我们要进行封装 &lt;/p&gt;
&lt;p&gt;##使用Child View Controllers(这个单独来进行总结) &lt;/p&gt;
&lt;p&gt;##搭建 Model 对象和 Cells 之间的桥梁[cell setContent:model]; &lt;/p&gt;
&lt;h1 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h1&gt;&lt;p&gt;Table view controllers（以及其他的 controller 对象！）应该在 model 和 view 对象之间扮演协调者和调解者的角色。它不应该关心明显属于 view 层或 model 层的任务。你应该始终记住这点，这样 delegate 和 data source 方法会变得更小巧，最多包含一些简单地样板代码。&lt;br&gt;这不仅减少了 table view controllers 那样的大小和复杂性，而且还把业务逻辑和 view 的逻辑放到了更合适的地方。Controller 层的里里外外的实现细节都被封装成了简单地 API，最终，它变得更加容易理解，也更利于团队协作。 &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;该篇主要针对的是UITableViewController，因为UITableViewController是iOS开发中用的最多的组件。&lt;br&gt;本文转自：&lt;a href=&quot;http://objccn.io/issue-1-1/&quot;&gt;http://objccn.io/issue-1-1/&lt;/a&gt;&lt;br&gt;示例代码地址：&lt;a href=&quot;https://github.com/ZeroDY/DYSource/tree/master/DYDataSourceDelegate&quot;&gt;https://github.com/ZeroDY/DYSource/tree/master/DYDataSourceDelegate&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>常用设计模式</title>
    <link href="http://yoursite.com/2016/01/18/%E5%B8%B8%E7%94%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2016/01/18/常用设计模式/</id>
    <published>2016-01-18T04:57:12.000Z</published>
    <updated>2016-06-14T15:36:08.000Z</updated>
    
    <content type="html">&lt;p&gt;常用设计模式随笔&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;单例模式&quot;&gt;&lt;a href=&quot;#单例模式&quot; class=&quot;headerlink&quot; title=&quot;单例模式&quot;&gt;&lt;/a&gt;单例模式&lt;/h1&gt;&lt;p&gt;单例模式作为一种目标明确、结构简单、理解容易的设计模式，在软件开发中使用频率相当高，在很多应用软件和框架中都得以广泛应用。  &lt;/p&gt;
&lt;h2 id=&quot;1-主要优点&quot;&gt;&lt;a href=&quot;#1-主要优点&quot; class=&quot;headerlink&quot; title=&quot;1).主要优点&quot;&gt;&lt;/a&gt;1).主要优点&lt;/h2&gt;&lt;p&gt;单例模式的主要优点如下：&lt;/p&gt;
&lt;p&gt;(1)单例模式提供了对唯一实例的受控访问。因为单例类封装了它的唯一实例，所以它可以严格控制客户怎样以及何时访问它。&lt;/p&gt;
&lt;p&gt;(2)由于在系统内存中只存在一个对象，因此可以节约系统资源，对于一些需要频繁创建和销毁的对象单例模式无疑可以提高系统的性能。&lt;/p&gt;
&lt;p&gt;(3)允许可变数目的实例。基于单例模式我们可以进行扩展，使用与单例控制相似的方法来获得指定个数的对象实例，既节省系统资源，又解决了单例单例对象共享过多有损性能的问题。&lt;/p&gt;
&lt;h2 id=&quot;2-主要缺点&quot;&gt;&lt;a href=&quot;#2-主要缺点&quot; class=&quot;headerlink&quot; title=&quot;2).主要缺点&quot;&gt;&lt;/a&gt;2).主要缺点&lt;/h2&gt;&lt;p&gt;单例模式的主要缺点如下：&lt;/p&gt;
&lt;p&gt;(1)由于单例模式中没有抽象层，因此单例类的扩展有很大的困难。&lt;/p&gt;
&lt;p&gt;(2)单例类的职责过重，在一定程度上违背了“单一职责原则”。因为单例类既充当了工厂角色，提供了工厂方法，同时又充当了产品角色，包含一些业务方法，将产品的创建和产品的本身的功能融合到一起。&lt;/p&gt;
&lt;p&gt;(3)现在很多面向对象语言(如Java、C#)的运行环境都提供了自动垃圾回收的技术，因此，如果实例化的共享对象长时间不被利用，系统会认为它是垃圾，会自动销毁并回收资源，下次利用时又将重新实例化，这将导致共享的单例对象状态的丢失。&lt;/p&gt;
&lt;h2 id=&quot;3-适用场景&quot;&gt;&lt;a href=&quot;#3-适用场景&quot; class=&quot;headerlink&quot; title=&quot;3).适用场景&quot;&gt;&lt;/a&gt;3).适用场景&lt;/h2&gt;&lt;p&gt;在以下情况下可以考虑使用单例模式：&lt;/p&gt;
&lt;p&gt;(1)系统只需要一个实例对象，如系统要求提供一个唯一的序列号生成器或资源管理器，或者需要考虑资源消耗太大而只允许创建一个对象。&lt;/p&gt;
&lt;p&gt;(2)客户调用类的单个实例只允许使用一个公共访问点，除了该公共访问点，不能通过其他途径访问该实例。&lt;/p&gt;
&lt;h1 id=&quot;委托模式（代理模式）&quot;&gt;&lt;a href=&quot;#委托模式（代理模式）&quot; class=&quot;headerlink&quot; title=&quot;委托模式（代理模式）&quot;&gt;&lt;/a&gt;委托模式（代理模式）&lt;/h1&gt;&lt;h2 id=&quot;1-主要优点-1&quot;&gt;&lt;a href=&quot;#1-主要优点-1&quot; class=&quot;headerlink&quot; title=&quot;1).主要优点&quot;&gt;&lt;/a&gt;1).主要优点&lt;/h2&gt;&lt;p&gt;(1).非常严格的语法。所有将听到的事件必须是在delegate协议中有清晰的定义。  &lt;/p&gt;
&lt;p&gt;(2).如果delegate中的一个方法没有实现那么就会出现编译警告/错误&lt;/p&gt;
&lt;p&gt;(3).协议必须在controller的作用域范围内定义&lt;/p&gt;
&lt;p&gt;(4).在一个应用中的控制流程是可跟踪的并且是可识别的；&lt;/p&gt;
&lt;p&gt;(5).在一个控制器中可以定义定义多个不同的协议，每个协议有不同的delegates&lt;/p&gt;
&lt;p&gt;(6).没有第三方对象要求保持/监视通信过程。&lt;/p&gt;
&lt;p&gt;(7).能够接收调用的协议方法的返回值。这意味着delegate能够提供反馈信息给controller&lt;/p&gt;
&lt;h2 id=&quot;2-主要缺点-1&quot;&gt;&lt;a href=&quot;#2-主要缺点-1&quot; class=&quot;headerlink&quot; title=&quot;2).主要缺点&quot;&gt;&lt;/a&gt;2).主要缺点&lt;/h2&gt;&lt;p&gt;(1).需要定义很多代码：1.协议定义；2.controller的delegate属性；3.在delegate本身中实现delegate方法定义  &lt;/p&gt;
&lt;p&gt;(2).在释放代理对象时，需要小心的将delegate改为nil。一旦设定失败，那么调用释放对象的方法将会出现内存crash&lt;/p&gt;
&lt;p&gt;(3).在一个controller中有多个delegate对象，并且delegate是遵守同一个协议，但还是很难告诉多个对象同一个事件，不过有可能。&lt;/p&gt;
&lt;h1 id=&quot;观察者模式&quot;&gt;&lt;a href=&quot;#观察者模式&quot; class=&quot;headerlink&quot; title=&quot;观察者模式&quot;&gt;&lt;/a&gt;观察者模式&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;观察者模式在iOS中有两个用法，NSNotification和KVO
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;NSNotification&quot;&gt;&lt;a href=&quot;#NSNotification&quot; class=&quot;headerlink&quot; title=&quot;NSNotification&quot;&gt;&lt;/a&gt;NSNotification&lt;/h2&gt;&lt;p&gt;涉及到两个对象，观察者和被观察者，观察者注册监听，当被观察者执行某个操作时，会发送一个通知，注册该通知的观察者就会收到这个通知，然后去执行下一步操作，通知是广播模式，支持一对多。&lt;/p&gt;
&lt;h3 id=&quot;优势：&quot;&gt;&lt;a href=&quot;#优势：&quot; class=&quot;headerlink&quot; title=&quot;优势：&quot;&gt;&lt;/a&gt;优势：&lt;/h3&gt;&lt;p&gt;(1).不需要编写多少代码，实现比较简单；&lt;/p&gt;
&lt;p&gt;(2).对于一个发出的通知，多个对象能够做出反应，即1对多的方式实现简单&lt;/p&gt;
&lt;p&gt;(3).controller能够传递context对象（dictionary），context对象携带了关于发送通知的自定义的信息&lt;/p&gt;
&lt;h3 id=&quot;缺点：&quot;&gt;&lt;a href=&quot;#缺点：&quot; class=&quot;headerlink&quot; title=&quot;缺点：&quot;&gt;&lt;/a&gt;缺点：&lt;/h3&gt;&lt;p&gt;(1).在编译期不会检查通知是否能够被观察者正确的处理；&lt;/p&gt;
&lt;p&gt;(2).在释放注册的对象时，需要在通知中心取消注册；&lt;/p&gt;
&lt;p&gt;(3).在调试的时候应用的工作以及控制过程难跟踪；&lt;/p&gt;
&lt;p&gt;(4).需要第三方对喜爱那个来管理controller与观察者对象之间的联系；&lt;/p&gt;
&lt;p&gt;(5).controller和观察者需要提前知道通知名称，如果这些没有在工作区间定义，那么会出现不同步的情况；&lt;/p&gt;
&lt;p&gt;(6).通知发出后，controller不能从观察者获得任何的反馈信息。&lt;/p&gt;
&lt;h2 id=&quot;KVO&quot;&gt;&lt;a href=&quot;#KVO&quot; class=&quot;headerlink&quot; title=&quot;KVO&quot;&gt;&lt;/a&gt;KVO&lt;/h2&gt;&lt;p&gt;是一个对象能够观察另外一个对象的属性的值，并且能够发现值的变化。前面两种模式更加适合一个controller与任何其他的对象进行通信，而KVO更加适合任何类型的对象侦听另外一个任意对象的改变（这里也可以是controller，但一般不是controller）。这是一个对象与另外一个对象保持同步的一种方法，即当另外一种对象的状态发生改变时，观察对象马上作出反应。&lt;strong&gt;它只能用来对属性作出反应，而不会用来对方法或者动作作出反应&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;优点：&quot;&gt;&lt;a href=&quot;#优点：&quot; class=&quot;headerlink&quot; title=&quot;优点：&quot;&gt;&lt;/a&gt;优点：&lt;/h3&gt;&lt;p&gt;(1).能够提供一种简单的方法实现两个对象间的同步。例如：model和view之间同步；&lt;/p&gt;
&lt;p&gt;(2).能够对非我们创建的对象，即内部对象的状态改变作出响应，而且不需要改变内部对象（SKD对象）的实现；&lt;/p&gt;
&lt;p&gt;(3).能够提供观察的属性的最新值以及先前值；&lt;/p&gt;
&lt;p&gt;(4).用key paths来观察属性，因此也可以观察嵌套对象；&lt;/p&gt;
&lt;p&gt;(5).完成了对观察对象的抽象，因为不需要额外的代码来允许观察值能够被观察&lt;/p&gt;
&lt;h3 id=&quot;缺点：-1&quot;&gt;&lt;a href=&quot;#缺点：-1&quot; class=&quot;headerlink&quot; title=&quot;缺点：&quot;&gt;&lt;/a&gt;缺点：&lt;/h3&gt;&lt;p&gt;(1).我们观察的属性必须使用strings来定义。因此在编译器不会出现警告以及检查；&lt;/p&gt;
&lt;p&gt;(2).对属性重构将导致我们的观察代码不再可用；&lt;/p&gt;
&lt;p&gt;(3).复杂的“IF”语句要求对象正在观察多个值 。这是因为所有的观察代码通过一个方法来指向；&lt;/p&gt;
&lt;p&gt;(4).当释放观察者时不需要移除观察者。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;delegate跟NSNotification、KVO有什么区别和联系&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三者都是为了代码解耦，delegate只支持一对一，而另外两个支持一对多；delegate有很明确的控制链，代码逻辑结构更加清晰易懂，而另外两个这方面就偏弱了；delegate跟NSNotification主要针对Controller之间的通信场景，而KVO主要针对Controller与属性之间的通信场景。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;工厂模式&quot;&gt;&lt;a href=&quot;#工厂模式&quot; class=&quot;headerlink&quot; title=&quot;工厂模式&quot;&gt;&lt;/a&gt;工厂模式&lt;/h2&gt;&lt;p&gt;在基类中定义创建对象的一个接口，让子类决定实例化哪个类。工厂方法让一个类的实例化延迟到子类中进行。  &lt;/p&gt;
&lt;p&gt;工厂方法要解决的问题是对象的创建时机，它提供了一种扩展的策略，很好地符合了开放封闭原则。工厂方法也叫做虚构造器（Virtual Constructor).&lt;/p&gt;
&lt;p&gt;应用场景：工厂方式创建类的实例，多与代理模式配合，创建可替换代理类。  &lt;/p&gt;
&lt;h2 id=&quot;1-优点：&quot;&gt;&lt;a href=&quot;#1-优点：&quot; class=&quot;headerlink&quot; title=&quot;1).优点：&quot;&gt;&lt;/a&gt;1).优点：&lt;/h2&gt;&lt;p&gt;(1).易于替换，面向抽象编程，只与抽象工厂和易变类的共性抽象类发生调用关系&lt;/p&gt;
&lt;p&gt;(2).代码结构更加清晰，代码也更简洁&lt;/p&gt;
&lt;p&gt;敏捷原则：DIP依赖倒置原则&lt;/p&gt;
&lt;h2 id=&quot;2-缺点：&quot;&gt;&lt;a href=&quot;#2-缺点：&quot; class=&quot;headerlink&quot; title=&quot;2).缺点：&quot;&gt;&lt;/a&gt;2).缺点：&lt;/h2&gt;&lt;p&gt;(1).增加了代码的复杂度&lt;/p&gt;
&lt;p&gt;(2).增加了调用层次&lt;/p&gt;
&lt;p&gt;(3).增加了内存负担&lt;/p&gt;
&lt;p&gt;实例：项目部署环境中依赖多个不同类型的数据库时，需要使用工厂配合代理完成易用性替换  &lt;/p&gt;
&lt;h1 id=&quot;策略模式&quot;&gt;&lt;a href=&quot;#策略模式&quot; class=&quot;headerlink&quot; title=&quot;策略模式&quot;&gt;&lt;/a&gt;策略模式&lt;/h1&gt;&lt;p&gt;应用场景：定义算法族，封装起来，使他们之间可以相互替换。  &lt;/p&gt;
&lt;p&gt;优势：使算法的变化独立于使用算法的用户&lt;/p&gt;
&lt;p&gt;敏捷原则：接口隔离原则；多用组合，少用继承；针对接口编程，而非实现。&lt;/p&gt;
&lt;p&gt;实例：排序算法，NSArray的sortedArrayUsingSelector；经典的鸭子会叫，会飞案例。&lt;/p&gt;
&lt;p&gt;注意事项：1，剥离类中易于变化的行为，通过组合的方式嵌入抽象基类&lt;/p&gt;
&lt;p&gt;2，变化的行为抽象基类为，所有可变变化的父类&lt;/p&gt;
&lt;p&gt;3，用户类的最终实例，通过注入行为实例的方式，设定易变行为&lt;/p&gt;
&lt;p&gt;防止了继承行为方式，导致无关行为污染子类。完成了策略封装和可替换性。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;常用设计模式随笔&lt;br&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="设计模式" scheme="http://yoursite.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="http://yoursite.com/2015/12/13/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2015/12/13/Git常用命令/</id>
    <published>2015-12-13T14:57:12.000Z</published>
    <updated>2016-06-13T16:02:06.000Z</updated>
    
    <content type="html">&lt;p&gt;每天使用 Git ，但是很多命令记不住。&lt;br&gt;Git常用命令备忘&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.ruanyifeng.com/blogimg/asset/2015/bg2015120901.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Workspace：工作区&lt;/li&gt;
&lt;li&gt;Index / Stage：暂存区&lt;/li&gt;
&lt;li&gt;Repository：仓库区（或本地仓库）&lt;/li&gt;
&lt;li&gt;Remote：远程仓库&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;一、新建代码库&quot;&gt;&lt;a href=&quot;#一、新建代码库&quot; class=&quot;headerlink&quot; title=&quot;一、新建代码库&quot;&gt;&lt;/a&gt;一、新建代码库&lt;/h1&gt;&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;# 在当前目录新建一个Git代码库
$ git init

# 新建一个目录，将其初始化为Git代码库
$ git init [project-name]

# 下载一个项目和它的整个代码历史
$ git clone [url]
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;h1 id=&quot;二、配置&quot;&gt;&lt;a href=&quot;#二、配置&quot; class=&quot;headerlink&quot; title=&quot;二、配置&quot;&gt;&lt;/a&gt;二、配置&lt;/h1&gt;&lt;p&gt;Git的设置文件为&lt;code&gt;.gitconfig&lt;/code&gt;，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;# 显示当前的Git配置
$ git config --list

# 编辑Git配置文件
$ git config -e [--global]

# 设置提交代码时的用户信息
$ git config [--global] user.name &amp;quot;[name]&amp;quot;
$ git config [--global] user.email &amp;quot;[email address]&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;h1 id=&quot;三、增加-删除文件&quot;&gt;&lt;a href=&quot;#三、增加-删除文件&quot; class=&quot;headerlink&quot; title=&quot;三、增加/删除文件&quot;&gt;&lt;/a&gt;三、增加/删除文件&lt;/h1&gt;&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;# 添加指定文件到暂存区
$ git add [file1] [file2] ...

# 添加指定目录到暂存区，包括子目录
$ git add [dir]

# 添加当前目录的所有文件到暂存区
$ git add .

# 添加每个变化前，都会要求确认
# 对于同一个文件的多处变化，可以实现分次提交
$ git add -p

# 删除工作区文件，并且将这次删除放入暂存区
$ git rm [file1] [file2] ...

# 停止追踪指定文件，但该文件会保留在工作区
$ git rm --cached [file]

# 改名文件，并且将这个改名放入暂存区
$ git mv [file-original] [file-renamed]
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;h1 id=&quot;四、代码提交&quot;&gt;&lt;a href=&quot;#四、代码提交&quot; class=&quot;headerlink&quot; title=&quot;四、代码提交&quot;&gt;&lt;/a&gt;四、代码提交&lt;/h1&gt;&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;# 提交暂存区到仓库区
$ git commit -m [message]

# 提交暂存区的指定文件到仓库区
$ git commit [file1] [file2] ... -m [message]

# 提交工作区自上次commit之后的变化，直接到仓库区
$ git commit -a

# 提交时显示所有diff信息
$ git commit -v

# 使用一次新的commit，替代上一次提交
# 如果代码没有任何新变化，则用来改写上一次commit的提交信息
$ git commit --amend -m [message]

# 重做上一次commit，并包括指定文件的新变化
$ git commit --amend [file1] [file2] ...
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;h1 id=&quot;五、分支&quot;&gt;&lt;a href=&quot;#五、分支&quot; class=&quot;headerlink&quot; title=&quot;五、分支&quot;&gt;&lt;/a&gt;五、分支&lt;/h1&gt;&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;# 列出所有本地分支
$ git branch

# 列出所有远程分支
$ git branch -r

# 列出所有本地分支和远程分支
$ git branch -a

# 新建一个分支，但依然停留在当前分支
$ git branch [branch-name]

# 新建一个分支，并切换到该分支
$ git checkout -b [branch]

# 新建一个分支，指向指定commit
$ git branch [branch] [commit]

# 新建一个分支，与指定的远程分支建立追踪关系
$ git branch --track [branch] [remote-branch]

# 切换到指定分支，并更新工作区
$ git checkout [branch-name]

# 切换到上一个分支
$ git checkout -

# 建立追踪关系，在现有分支与指定的远程分支之间
$ git branch --set-upstream [branch] [remote-branch]

# 合并指定分支到当前分支
$ git merge [branch]

# 选择一个commit，合并进当前分支
$ git cherry-pick [commit]

# 删除分支
$ git branch -d [branch-name]

# 删除远程分支
$ git push origin --delete [branch-name]
$ git branch -dr [remote/branch]
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;h1 id=&quot;六、标签&quot;&gt;&lt;a href=&quot;#六、标签&quot; class=&quot;headerlink&quot; title=&quot;六、标签&quot;&gt;&lt;/a&gt;六、标签&lt;/h1&gt;&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;# 列出所有tag
$ git tag

# 新建一个tag在当前commit
$ git tag [tag]

# 新建一个tag在指定commit
$ git tag [tag] [commit]

# 删除本地tag
$ git tag -d [tag]

# 删除远程tag
$ git push origin :refs/tags/[tagName]

# 查看tag信息
$ git show [tag]

# 提交指定tag
$ git push [remote] [tag]

# 提交所有tag
$ git push [remote] --tags

# 新建一个分支，指向某个tag
$ git checkout -b [branch] [tag]
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;h1 id=&quot;七、查看信息&quot;&gt;&lt;a href=&quot;#七、查看信息&quot; class=&quot;headerlink&quot; title=&quot;七、查看信息&quot;&gt;&lt;/a&gt;七、查看信息&lt;/h1&gt;&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;# 显示有变更的文件
$ git status

# 显示当前分支的版本历史
$ git log

# 显示commit历史，以及每次commit发生变更的文件
$ git log --stat

# 搜索提交历史，根据关键词
$ git log -S [keyword]

# 显示某个commit之后的所有变动，每个commit占据一行
$ git log [tag] HEAD --pretty=format:%s

# 显示某个commit之后的所有变动，其&amp;quot;提交说明&amp;quot;必须符合搜索条件
$ git log [tag] HEAD --grep feature

# 显示某个文件的版本历史，包括文件改名
$ git log --follow [file]
$ git whatchanged [file]

# 显示指定文件相关的每一次diff
$ git log -p [file]

# 显示过去5次提交
$ git log -5 --pretty --oneline

# 显示所有提交过的用户，按提交次数排序
$ git shortlog -sn

# 显示指定文件是什么人在什么时间修改过
$ git blame [file]

# 显示暂存区和工作区的差异
$ git diff

# 显示暂存区和上一个commit的差异
$ git diff --cached [file]

# 显示工作区与当前分支最新commit之间的差异
$ git diff HEAD

# 显示两次提交之间的差异
$ git diff [first-branch]...[second-branch]

# 显示今天你写了多少行代码
$ git diff --shortstat &amp;quot;@{0 day ago}&amp;quot;

# 显示某次提交的元数据和内容变化
$ git show [commit]

# 显示某次提交发生变化的文件
$ git show --name-only [commit]

# 显示某次提交时，某个文件的内容
$ git show [commit]:[filename]

# 显示当前分支的最近几次提交
$ git reflog
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;h1 id=&quot;八、远程同步&quot;&gt;&lt;a href=&quot;#八、远程同步&quot; class=&quot;headerlink&quot; title=&quot;八、远程同步&quot;&gt;&lt;/a&gt;八、远程同步&lt;/h1&gt;&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;# 下载远程仓库的所有变动
$ git fetch [remote]

# 显示所有远程仓库
$ git remote -v

# 显示某个远程仓库的信息
$ git remote show [remote]

# 增加一个新的远程仓库，并命名
$ git remote add [shortname] [url]

# 取回远程仓库的变化，并与本地分支合并
$ git pull [remote] [branch]

# 上传本地指定分支到远程仓库
$ git push [remote] [branch]

# 强行推送当前分支到远程仓库，即使有冲突
$ git push [remote] --force

# 推送所有分支到远程仓库
$ git push [remote] --all
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;h1 id=&quot;九、撤销&quot;&gt;&lt;a href=&quot;#九、撤销&quot; class=&quot;headerlink&quot; title=&quot;九、撤销&quot;&gt;&lt;/a&gt;九、撤销&lt;/h1&gt;&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;# 恢复暂存区的指定文件到工作区
$ git checkout [file]

# 恢复某个commit的指定文件到暂存区和工作区
$ git checkout [commit] [file]

# 恢复暂存区的所有文件到工作区
$ git checkout .

# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变
$ git reset [file]

# 重置暂存区与工作区，与上一次commit保持一致
$ git reset --hard

# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变
$ git reset [commit]

# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致
$ git reset --hard [commit]

# 重置当前HEAD为指定commit，但保持暂存区和工作区不变
$ git reset --keep [commit]

# 新建一个commit，用来撤销指定commit
# 后者的所有变化都将被前者抵消，并且应用到当前分支
$ git revert [commit]

# 暂时将未提交的变化移除，稍后再移入
$ git stash
$ git stash pop
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;h1 id=&quot;十、其他&quot;&gt;&lt;a href=&quot;#十、其他&quot; class=&quot;headerlink&quot; title=&quot;十、其他&quot;&gt;&lt;/a&gt;十、其他&lt;/h1&gt;&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;# 生成一个可供发布的压缩包
$ git archive
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;原文地址:http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;创建新仓库&quot;&gt;&lt;a href=&quot;#创建新仓库&quot; class=&quot;headerlink&quot; title=&quot;创建新仓库&quot;&gt;&lt;/a&gt;创建新仓库&lt;/h1&gt;&lt;p&gt;创建新文件夹，打开，然后执行&lt;br&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;git&lt;/span&gt; init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以创建新的 git 仓库。&lt;/p&gt;
&lt;h1 id=&quot;检出仓库&quot;&gt;&lt;a href=&quot;#检出仓库&quot; class=&quot;headerlink&quot; title=&quot;检出仓库&quot;&gt;&lt;/a&gt;检出仓库&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;执行如下命令以创建一个本地仓库的克隆版本：&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;clone&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;/path&lt;/span&gt;/to/repository&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果是远端服务器上的仓库，你的命令会是这个样子：&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git clone username&lt;span class=&quot;variable&quot;&gt;@host&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:/path/to/repository&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;添加与提交&quot;&gt;&lt;a href=&quot;#添加与提交&quot; class=&quot;headerlink&quot; title=&quot;添加与提交&quot;&gt;&lt;/a&gt;添加与提交&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;你可以计划改动（把它们添加到缓存区），使用如下命令：&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&amp;lt;filename&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;这是 git 基本工作流程的第一步；使用如下命令以实际提交改动：&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;git&lt;/span&gt; commit -m &lt;span class=&quot;string&quot;&gt;&quot;代码提交信息&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在，你的改动已经提交到了 HEAD，但是还没到你的远端仓库。&lt;/p&gt;
&lt;h1 id=&quot;推送改动&quot;&gt;&lt;a href=&quot;#推送改动&quot; class=&quot;headerlink&quot; title=&quot;推送改动&quot;&gt;&lt;/a&gt;推送改动&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;你的改动现在已经在本地仓库的 HEAD 中了。执行如下命令以将这些改动提交到远端仓库：&lt;figure class=&quot;highlight maxima&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;origin&lt;/span&gt; master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以把 master 换成你想要推送的任何分支。 &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果你还没有克隆现有仓库，并欲将你的仓库连接到某个远程服务器，你可以使用如下命令添加：&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git remote &lt;span class=&quot;keyword&quot;&gt;add &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;origin &lt;/span&gt;&amp;lt;server&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如此你就能够将你的改动推送到所添加的服务器上去了。&lt;/p&gt;
&lt;h1 id=&quot;分支&quot;&gt;&lt;a href=&quot;#分支&quot; class=&quot;headerlink&quot; title=&quot;分支&quot;&gt;&lt;/a&gt;分支&lt;/h1&gt;&lt;p&gt;分支是用来将特性开发绝缘开来的。在你创建仓库的时候，master 是“默认的”。在其他分支上进行开发，完成后再将它们合并到主分支上。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建一个叫做“feature_x”的分支，并切换过去：&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout -&lt;span class=&quot;selector-tag&quot;&gt;b&lt;/span&gt; feature_x&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;切换回主分支：&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout &lt;span class=&quot;literal&quot;&gt;master&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;再把新建的分支删掉：&lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;branch &lt;/span&gt;-d feature_x&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;除非你将分支推送到远端仓库，不然该分支就是 不为他人所见的：&lt;/p&gt;
&lt;figure class=&quot;highlight maxima&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;origin&lt;/span&gt; &amp;lt;branch&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;更新与合并&quot;&gt;&lt;a href=&quot;#更新与合并&quot; class=&quot;headerlink&quot; title=&quot;更新与合并&quot;&gt;&lt;/a&gt;更新与合并&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;要更新你的本地仓库至最新改动，执行：&lt;/p&gt;
&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;git&lt;/span&gt; pull&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以在你的工作目录中 获取（fetch） 并 合并（merge） 远端的改动。&lt;br&gt;要合并其他分支到你的当前分支（例如 master），执行：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git merge &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;branch&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;两种情况下，git 都会尝试去自动合并改动。不幸的是，自动合并并非次次都能成功，并可能导致 冲突（conflicts）。 这时候就需要你修改这些文件来人肉合并这些 冲突（conflicts） 了。改完之后，你需要执行如下命令以将它们标记为合并成功：&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&amp;lt;filename&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在合并改动之前，也可以使用如下命令查看：&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git diff &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;source_branch&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;target_branch&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;标签&quot;&gt;&lt;a href=&quot;#标签&quot; class=&quot;headerlink&quot; title=&quot;标签&quot;&gt;&lt;/a&gt;标签&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在软件发布时创建标签，是被推荐的。这是个旧有概念，在 SVN 中也有。可以执行如下命令以创建一个叫做 1.0.0 的标签：&lt;/p&gt;
&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;keyword&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;b2e1d63ff&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;1b2e1d63ff 是你想要标记的提交 ID 的前 10 位字符。使用如下命令获取提交 ID：&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;log&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你也可以用该提交 ID 的少一些的前几位，只要它是唯一的。&lt;/p&gt;
&lt;h1 id=&quot;替换本地改动&quot;&gt;&lt;a href=&quot;#替换本地改动&quot; class=&quot;headerlink&quot; title=&quot;替换本地改动&quot;&gt;&lt;/a&gt;替换本地改动&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;假如你做错事（自然，这是不可能的），你可以使用如下命令替换掉本地改动：&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git checkout &lt;span class=&quot;comment&quot;&gt;-- &amp;lt;filename&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此命令会使用 HEAD 中的最新内容替换掉你的工作目录中的文件。已添加到缓存区的改动，以及新文件，都不受影响。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;假如你想要丢弃你所有的本地改动与提交，可以到服务器上获取最新的版本并将你本地主分支指向到它：&lt;figure class=&quot;highlight maxima&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git fetch &lt;span class=&quot;built_in&quot;&gt;origin&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;reset&lt;/span&gt; --hard &lt;span class=&quot;built_in&quot;&gt;origin&lt;/span&gt;/master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;有用的贴士&quot;&gt;&lt;a href=&quot;#有用的贴士&quot; class=&quot;headerlink&quot; title=&quot;有用的贴士&quot;&gt;&lt;/a&gt;有用的贴士&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;内建的图形化 git：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gitk&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;彩色的 git 输出：&lt;/p&gt;
&lt;figure class=&quot;highlight maxima&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config &lt;span class=&quot;built_in&quot;&gt;color&lt;/span&gt;.ui &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;显示历史记录时，只显示一行注释信息：&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config format&lt;span class=&quot;selector-class&quot;&gt;.pretty&lt;/span&gt; oneline&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交互地添加文件至缓存区：&lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;add &lt;/span&gt;-i&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;每天使用 Git ，但是很多命令记不住。&lt;br&gt;Git常用命令备忘&lt;/p&gt;
    
    </summary>
    
      <category term="备忘" scheme="http://yoursite.com/categories/%E5%A4%87%E5%BF%98/"/>
    
    
      <category term="备忘" scheme="http://yoursite.com/tags/%E5%A4%87%E5%BF%98/"/>
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>常用代码备忘散碎、技巧</title>
    <link href="http://yoursite.com/2015/11/12/(%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E5%A4%87%E5%BF%98)%E6%95%A3%E7%A2%8E%E3%80%81%E6%8A%80%E5%B7%A7/"/>
    <id>http://yoursite.com/2015/11/12/(常用代码备忘)散碎、技巧/</id>
    <published>2015-11-12T11:28:02.000Z</published>
    <updated>2016-06-04T16:56:40.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;持续更新&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;一种下滑隐藏的实现&quot;&gt;&lt;a href=&quot;#一种下滑隐藏的实现&quot; class=&quot;headerlink&quot; title=&quot;一种下滑隐藏的实现&quot;&gt;&lt;/a&gt;一种下滑隐藏的实现&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;pragma mark – scroll delegate&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)scrollViewDidScroll:(&lt;span class=&quot;built_in&quot;&gt;UIScrollView&lt;/span&gt; *)scrollView&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; offsetY = scrollView.contentOffset.y + _tableView.contentInset.top;&lt;span class=&quot;comment&quot;&gt;//注意&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; panTranslationY = [scrollView.panGestureRecognizer translationInView:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.tableView].y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (offsetY &amp;gt; &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (panTranslationY &amp;gt; &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//下滑趋势，显示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.navigationController setNavigationBarHidden:&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt; animated:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(panTranslationY &amp;lt; &lt;span class=&quot;number&quot;&gt;-50&lt;/span&gt;) &amp;#123;  &lt;span class=&quot;comment&quot;&gt;//上滑趋势，隐藏&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.navigationController setNavigationBarHidden:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt; animated:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(offsetY &amp;lt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.navigationController setNavigationBarHidden:&lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt; animated:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;状态栏颜色&quot;&gt;&lt;a href=&quot;#状态栏颜色&quot; class=&quot;headerlink&quot; title=&quot;状态栏颜色&quot;&gt;&lt;/a&gt;状态栏颜色&lt;/h1&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)&lt;span class=&quot;string&quot;&gt;setStatusBarBackgroundColor:&lt;/span&gt;(UIColor *)color &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIView *statusBar = [[[UIApplication sharedApplication] &lt;span class=&quot;string&quot;&gt;valueForKey:&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&quot;statusBarWindow&quot;&lt;/span&gt;] &lt;span class=&quot;string&quot;&gt;valueForKey:&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&quot;statusBar&quot;&lt;/span&gt;]; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([statusBar &lt;span class=&quot;string&quot;&gt;respondsToSelector:&lt;/span&gt;&lt;span class=&quot;meta&quot;&gt;@selector&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;setBackgroundColor:&lt;/span&gt;)]) &amp;#123;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            statusBar.backgroundColor = color; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;respondsToSelector的相关使用&quot;&gt;&lt;a href=&quot;#respondsToSelector的相关使用&quot; class=&quot;headerlink&quot; title=&quot;respondsToSelector的相关使用&quot;&gt;&lt;/a&gt;respondsToSelector的相关使用&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-(BOOL) isKindOfClass: classObj&lt;/code&gt; 用来判断是否是某个类或其子类的实例&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-(BOOL) isMemberOfClass: classObj&lt;/code&gt;用来判断是否是某个类的实例&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-(BOOL) respondsToSelector: selector&lt;/code&gt; 用来判断是否有以某个名字命名的方法(被封装在一个selector的对象里传递)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+(BOOL) instancesRespondToSelector: selector&lt;/code&gt; 用来判断实例是否有以某个名字命名的方法. 和上面一个不同之处在于, 前面这个方法可以用在实例和类上，而此方法只能用在类上.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-(id) performSelector: selector&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SEL sel = &lt;span class=&quot;meta&quot;&gt;@selector&lt;/span&gt; (&lt;span class=&quot;string&quot;&gt;start:&lt;/span&gt;) ; &lt;span class=&quot;comment&quot;&gt;// 指定action  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([obj &lt;span class=&quot;string&quot;&gt;respondsToSelector:&lt;/span&gt;sel]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;//判断该对象是否有相应的方法  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   [obj &lt;span class=&quot;string&quot;&gt;performSelector:&lt;/span&gt;sel &lt;span class=&quot;string&quot;&gt;withObject:&lt;/span&gt;self]; &lt;span class=&quot;comment&quot;&gt;//调用选择器方法  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用[[UIApplication sharedApplication] keyWindow]查找应用程序的主窗口对象&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Tester.h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import FoundationFoundation.h&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Tester&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;NSObject&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;) test:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt;*) msg;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;) notImp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Tester.m&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;Tester.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Tester&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-(&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;) test:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt;*) msg&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSLog&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;@&quot;%@&quot;&lt;/span&gt;, msg);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意：没有实现notImp方法&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;Tester.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; main (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; argc, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * argv[])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSAutoreleasePool&lt;/span&gt; * pool = [[&lt;span class=&quot;built_in&quot;&gt;NSAutoreleasePool&lt;/span&gt; alloc] init];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt; tester = [[Tester alloc] init];&lt;span class=&quot;comment&quot;&gt;//注意，这里使用id&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    SEL testSelector = &lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(test:);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    SEL notImpSelector = &lt;span class=&quot;keyword&quot;&gt;@selector&lt;/span&gt;(notImp:);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;([tester respondsToSelector:testSelector])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//tester.m中实现了test方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [tester test:&lt;span class=&quot;string&quot;&gt;@&quot;invoke test method&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;([tester respondsToSelector:notImpSelector])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//test.m中没有实现此主就去&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [tester notImp];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [pool drain];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;持续更新&lt;br&gt;
    
    </summary>
    
      <category term="备忘" scheme="http://yoursite.com/categories/%E5%A4%87%E5%BF%98/"/>
    
    
      <category term="备忘" scheme="http://yoursite.com/tags/%E5%A4%87%E5%BF%98/"/>
    
      <category term="常用代码" scheme="http://yoursite.com/tags/%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81/"/>
    
      <category term="技巧" scheme="http://yoursite.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法和MWeb写作使用说明</title>
    <link href="http://yoursite.com/2015/11/11/Markdown%E8%AF%AD%E6%B3%95%E5%92%8CMWeb%E5%86%99%E4%BD%9C%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
    <id>http://yoursite.com/2015/11/11/Markdown语法和MWeb写作使用说明/</id>
    <published>2015-11-10T18:56:05.000Z</published>
    <updated>2016-06-04T15:27:57.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://o7279yd4s.bkt.clouddn.com/12944427,2560,1600.jpg&quot; alt=&quot;Image Test&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Markdown-的设计哲学&quot;&gt;&lt;a href=&quot;#Markdown-的设计哲学&quot; class=&quot;headerlink&quot; title=&quot;Markdown 的设计哲学&quot;&gt;&lt;/a&gt;Markdown 的设计哲学&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Markdown 的目標是實現「易讀易寫」。&lt;br&gt;不過最需要強調的便是它的可讀性。一份使用 Markdown 格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。&lt;br&gt;Markdown 的語法有個主要的目的：用來作為一種網路內容的&lt;em&gt;寫作&lt;/em&gt;用語言。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;本文约定&quot;&gt;&lt;a href=&quot;#本文约定&quot; class=&quot;headerlink&quot; title=&quot;本文约定&quot;&gt;&lt;/a&gt;本文约定&lt;/h2&gt;&lt;p&gt;如果有写 &lt;code&gt;效果如下：&lt;/code&gt;， 在 MWeb 编辑状态下只有用 &lt;code&gt;CMD + R&lt;/code&gt; 预览才可以看效果。&lt;/p&gt;
&lt;h2 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h2&gt;&lt;p&gt;Markdown 语法：&lt;/p&gt;
&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;# 第一级标题 `&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;` &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;## 第二级标题 `&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;` &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;###### 第六级标题 `&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;h6&amp;gt;&lt;/span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;h1 id=&quot;第一级标题-lt-h1-gt&quot;&gt;&lt;a href=&quot;#第一级标题-lt-h1-gt&quot; class=&quot;headerlink&quot; title=&quot;第一级标题 &amp;lt;h1&amp;gt;&quot;&gt;&lt;/a&gt;第一级标题 &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;&lt;/h1&gt;&lt;h2 id=&quot;第二级标题-lt-h2-gt&quot;&gt;&lt;a href=&quot;#第二级标题-lt-h2-gt&quot; class=&quot;headerlink&quot; title=&quot;第二级标题 &amp;lt;h2&amp;gt;&quot;&gt;&lt;/a&gt;第二级标题 &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;&lt;/h2&gt;&lt;h6 id=&quot;第六级标题-lt-h6-gt&quot;&gt;&lt;a href=&quot;#第六级标题-lt-h6-gt&quot; class=&quot;headerlink&quot; title=&quot;第六级标题 &amp;lt;h6&amp;gt;&quot;&gt;&lt;/a&gt;第六级标题 &lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt;&lt;/h6&gt;&lt;h2 id=&quot;强调&quot;&gt;&lt;a href=&quot;#强调&quot; class=&quot;headerlink&quot; title=&quot;强调&quot;&gt;&lt;/a&gt;强调&lt;/h2&gt;&lt;p&gt;Markdown 语法：&lt;/p&gt;
&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;*这些文字会生成`&amp;lt;em&amp;gt;`*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_这些文字会生成`&amp;lt;u&amp;gt;`_&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**这些文字会生成`&amp;lt;strong&amp;gt;`**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;__这些文字会生成`&amp;lt;strong&amp;gt;`__&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 MWeb 中的快捷键为： &lt;code&gt;CMD + U&lt;/code&gt;、&lt;code&gt;CMD + I&lt;/code&gt;、&lt;code&gt;CMD + B&lt;/code&gt;&lt;br&gt;效果如下：&lt;/p&gt;
&lt;p&gt;&lt;em&gt;这些文字会生成&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;&lt;/em&gt;&lt;br&gt;&lt;em&gt;这些文字会生成&lt;code&gt;&amp;lt;u&amp;gt;&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这些文字会生成&lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;这些文字会生成&lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;换行&quot;&gt;&lt;a href=&quot;#换行&quot; class=&quot;headerlink&quot; title=&quot;换行&quot;&gt;&lt;/a&gt;换行&lt;/h2&gt;&lt;p&gt;四个及以上空格加回车。&lt;br&gt;如果不想打这么多空格，只要回车就为换行，请勾选：&lt;code&gt;Preferences&lt;/code&gt; - &lt;code&gt;Themes&lt;/code&gt; - &lt;code&gt;Translate newlines to &amp;lt;br&amp;gt; tags&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h2&gt;&lt;h3 id=&quot;无序列表&quot;&gt;&lt;a href=&quot;#无序列表&quot; class=&quot;headerlink&quot; title=&quot;无序列表&quot;&gt;&lt;/a&gt;无序列表&lt;/h3&gt;&lt;p&gt;Markdown 语法：&lt;/p&gt;
&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;* 项目一 无序列表 `* + 空格键`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 项目二&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * 项目二的子项目一 无序列表 `TAB + * + 空格键`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * 项目二的子项目二&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 MWeb 中的快捷键为： &lt;code&gt;Option + U&lt;/code&gt;&lt;br&gt;效果如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目一 无序列表 &lt;code&gt;* + 空格键&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;项目二&lt;ul&gt;
&lt;li&gt;项目二的子项目一 无序列表 &lt;code&gt;TAB + * + 空格键&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;项目二的子项目二&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;有序列表&quot;&gt;&lt;a href=&quot;#有序列表&quot; class=&quot;headerlink&quot; title=&quot;有序列表&quot;&gt;&lt;/a&gt;有序列表&lt;/h3&gt;&lt;p&gt;Markdown 语法：&lt;/p&gt;
&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;. 项目一 有序列表 `数字 + . + 空格键`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;. 项目二 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;. 项目三&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;. 项目三的子项目一 有序列表 `TAB + 数字 + . + 空格键`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;. 项目三的子项目二&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;项目一 有序列表 &lt;code&gt;数字 + . + 空格键&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;项目二 &lt;/li&gt;
&lt;li&gt;项目三&lt;ol&gt;
&lt;li&gt;项目三的子项目一 有序列表 &lt;code&gt;TAB + 数字 + . + 空格键&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;项目三的子项目二&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;任务列表（Task-lists）&quot;&gt;&lt;a href=&quot;#任务列表（Task-lists）&quot; class=&quot;headerlink&quot; title=&quot;任务列表（Task lists）&quot;&gt;&lt;/a&gt;任务列表（Task lists）&lt;/h3&gt;&lt;p&gt;Markdown 语法：&lt;/p&gt;
&lt;figure class=&quot;highlight haml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;ruby&quot;&gt; [ ] 任务一 未做任务 &lt;span class=&quot;string&quot;&gt;`- + 空格 + [ ]`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; [x] 任务二 已做任务 &lt;span class=&quot;string&quot;&gt;`- + 空格 + [x]`&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[ ] 任务一 未做任务 &lt;code&gt;- + 空格 + [ ]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;[x] 任务二 已做任务 &lt;code&gt;- + 空格 + [x]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;图片&quot;&gt;&lt;a href=&quot;#图片&quot; class=&quot;headerlink&quot; title=&quot;图片&quot;&gt;&lt;/a&gt;图片&lt;/h2&gt;&lt;p&gt;Markdown 语法：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;![&lt;span class=&quot;string&quot;&gt;GitHub set up&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;http://zh.mweb.im/asset/img/set-up-git.gif&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;格式: ![&lt;span class=&quot;string&quot;&gt;Alt Text&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;url&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;Control + Shift + I&lt;/code&gt; 可插入Markdown语法。&lt;br&gt;如果是 MWeb 的文档库中的文档，还可以用拖放图片、&lt;code&gt;CMD + V&lt;/code&gt; 粘贴、&lt;code&gt;CMD + Option + I&lt;/code&gt; 导入这三种方式来增加图片。&lt;br&gt;效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://zh.mweb.im/asset/img/set-up-git.gif&quot; alt=&quot;GitHub set up&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;链接&lt;/h2&gt;&lt;p&gt;Markdown 语法：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;email &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;example@example.com&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;string&quot;&gt;GitHub&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;http://github.com&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;自动生成连接  &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;http:&lt;/span&gt;//&lt;span class=&quot;attr&quot;&gt;www.github.com&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;Control + Shift + L&lt;/code&gt; 可插入Markdown语法。&lt;br&gt;如果是 MWeb 的文档库中的文档，拖放或&lt;code&gt;CMD + Option + I&lt;/code&gt; 导入非图片时，会生成连接。&lt;br&gt;效果如下：&lt;/p&gt;
&lt;p&gt;Email 连接： &lt;a href=&quot;&amp;#x6d;&amp;#97;&amp;#x69;&amp;#108;&amp;#116;&amp;#x6f;&amp;#58;&amp;#x65;&amp;#120;&amp;#97;&amp;#109;&amp;#112;&amp;#108;&amp;#x65;&amp;#x40;&amp;#x65;&amp;#x78;&amp;#x61;&amp;#x6d;&amp;#112;&amp;#108;&amp;#x65;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&quot;&gt;&amp;#x65;&amp;#120;&amp;#97;&amp;#109;&amp;#112;&amp;#108;&amp;#x65;&amp;#x40;&amp;#x65;&amp;#x78;&amp;#x61;&amp;#x6d;&amp;#112;&amp;#108;&amp;#x65;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://github.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;连接标题Github网站&lt;/a&gt;&lt;br&gt;自动生成连接像： &lt;a href=&quot;http://www.github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.github.com/&lt;/a&gt; 这样&lt;/p&gt;
&lt;h2 id=&quot;区块引用&quot;&gt;&lt;a href=&quot;#区块引用&quot; class=&quot;headerlink&quot; title=&quot;区块引用&quot;&gt;&lt;/a&gt;区块引用&lt;/h2&gt;&lt;p&gt;Markdown 语法：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;某某说:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;quote&quot;&gt;&amp;gt; 第一行引用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;quote&quot;&gt;&amp;gt; 第二行费用文字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;CMD + Shift + B&lt;/code&gt; 可插入Markdown语法。&lt;br&gt;效果如下：&lt;/p&gt;
&lt;p&gt;某某说:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;第一行引用&lt;br&gt;第二行费用文字&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;行内代码&quot;&gt;&lt;a href=&quot;#行内代码&quot; class=&quot;headerlink&quot; title=&quot;行内代码&quot;&gt;&lt;/a&gt;行内代码&lt;/h2&gt;&lt;p&gt;Markdown 语法：&lt;/p&gt;
&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;像这样即可：`&amp;lt;addr&amp;gt;` `code`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;CMD + K&lt;/code&gt; 可插入Markdown语法。&lt;br&gt;效果如下：&lt;/p&gt;
&lt;p&gt;像这样即可：&lt;code&gt;&amp;lt;addr&amp;gt;&lt;/code&gt; &lt;code&gt;code&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;多行或者一段代码&quot;&gt;&lt;a href=&quot;#多行或者一段代码&quot; class=&quot;headerlink&quot; title=&quot;多行或者一段代码&quot;&gt;&lt;/a&gt;多行或者一段代码&lt;/h2&gt;&lt;p&gt;Markdown 语法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fancyAlert&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;arg&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(arg) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $.facebox(&amp;#123;div:&lt;span class=&quot;string&quot;&gt;&#39;#foo&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;CMD + Shift + K&lt;/code&gt; 可插入Markdown语法。&lt;br&gt;效果如下：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fancyAlert&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;arg&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(arg) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $.facebox(&amp;#123;div:&lt;span class=&quot;string&quot;&gt;&#39;#foo&#39;&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;顺序图或流程图&quot;&gt;&lt;a href=&quot;#顺序图或流程图&quot; class=&quot;headerlink&quot; title=&quot;顺序图或流程图&quot;&gt;&lt;/a&gt;顺序图或流程图&lt;/h2&gt;&lt;p&gt;Markdown 语法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;张三-&amp;gt;李四: 嘿，小四儿, 写博客了没?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Note right of 李四: 李四愣了一下，说：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;李四--&amp;gt;张三: 忙得吐血，哪有时间写。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;st=&amp;gt;start: 开始&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e=&amp;gt;end: 结束&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;op=&amp;gt;operation: 我的操作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cond=&amp;gt;condition: 确认？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;st-&amp;gt;op-&amp;gt;cond&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cond(yes)-&amp;gt;e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cond(no)-&amp;gt;op&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果如下（ &lt;code&gt;Preferences&lt;/code&gt; - &lt;code&gt;Themes&lt;/code&gt; - &lt;code&gt;Enable sequence &amp;amp; flow chart&lt;/code&gt; 才会看到效果 ）：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;张三-&amp;gt;李四: 嘿，小四儿, 写博客了没?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Note right of 李四: 李四愣了一下，说：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;李四--&amp;gt;张三: 忙得吐血，哪有时间写。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;st=&amp;gt;start: 开始&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e=&amp;gt;end: 结束&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;op=&amp;gt;operation: 我的操作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cond=&amp;gt;condition: 确认？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;st-&amp;gt;op-&amp;gt;cond&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cond(yes)-&amp;gt;e&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cond(no)-&amp;gt;op&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;更多请参考：&lt;a href=&quot;http://bramp.github.io/js-sequence-diagrams/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://bramp.github.io/js-sequence-diagrams/&lt;/a&gt;, &lt;a href=&quot;http://adrai.github.io/flowchart.js/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://adrai.github.io/flowchart.js/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;表格&quot;&gt;&lt;a href=&quot;#表格&quot; class=&quot;headerlink&quot; title=&quot;表格&quot;&gt;&lt;/a&gt;表格&lt;/h2&gt;&lt;p&gt;Markdown 语法：&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;第一格表头 &lt;span class=&quot;string&quot;&gt;| 第二格表头&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;--------- &lt;span class=&quot;string&quot;&gt;| -------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;内容单元格 第一列第一格 &lt;span class=&quot;string&quot;&gt;| 内容单元格第二列第一格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;内容单元格 第一列第二格 多加文字 &lt;span class=&quot;string&quot;&gt;| 内容单元格第二列第二格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;第一格表头&lt;/th&gt;
&lt;th&gt;第二格表头&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;内容单元格 第一列第一格&lt;/td&gt;
&lt;td&gt;内容单元格第二列第一格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;内容单元格 第一列第二格 多加文字&lt;/td&gt;
&lt;td&gt;内容单元格第二列第二格&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;删除线&quot;&gt;&lt;a href=&quot;#删除线&quot; class=&quot;headerlink&quot; title=&quot;删除线&quot;&gt;&lt;/a&gt;删除线&lt;/h2&gt;&lt;p&gt;Markdown 语法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;加删除线像这样用： ~~删除这些~~
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果如下：&lt;/p&gt;
&lt;p&gt;加删除线像这样用： &lt;del&gt;删除这些&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&quot;分隔线&quot;&gt;&lt;a href=&quot;#分隔线&quot; class=&quot;headerlink&quot; title=&quot;分隔线&quot;&gt;&lt;/a&gt;分隔线&lt;/h2&gt;&lt;p&gt;以下三种方式都可以生成分隔线：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;***

*****

- - -
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;效果如下：&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h2 id=&quot;MathJax&quot;&gt;&lt;a href=&quot;#MathJax&quot; class=&quot;headerlink&quot; title=&quot;MathJax&quot;&gt;&lt;/a&gt;MathJax&lt;/h2&gt;&lt;p&gt;Markdown 语法：&lt;/p&gt;
&lt;figure class=&quot;highlight taggerscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;块级公式：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$$  x = &lt;span class=&quot;symbol&quot;&gt;\d&lt;/span&gt;frac&amp;#123;-b &lt;span class=&quot;symbol&quot;&gt;\p&lt;/span&gt;m &lt;span class=&quot;symbol&quot;&gt;\s&lt;/span&gt;qrt&amp;#123;b^2 - 4ac&amp;#125;&amp;#125;&amp;#123;2a&amp;#125; $$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;\\&lt;/span&gt;[ &lt;span class=&quot;symbol&quot;&gt;\f&lt;/span&gt;rac&amp;#123;1&amp;#125;&amp;#123;&lt;span class=&quot;symbol&quot;&gt;\B&lt;/span&gt;igl(&lt;span class=&quot;symbol&quot;&gt;\s&lt;/span&gt;qrt&amp;#123;&lt;span class=&quot;symbol&quot;&gt;\p&lt;/span&gt;hi &lt;span class=&quot;symbol&quot;&gt;\s&lt;/span&gt;qrt&amp;#123;5&amp;#125;&amp;#125;-&lt;span class=&quot;symbol&quot;&gt;\p&lt;/span&gt;hi&lt;span class=&quot;symbol&quot;&gt;\B&lt;/span&gt;igr) e^&amp;#123;&lt;span class=&quot;symbol&quot;&gt;\f&lt;/span&gt;rac25 &lt;span class=&quot;symbol&quot;&gt;\p&lt;/span&gt;i&amp;#125;&amp;#125; =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1+&lt;span class=&quot;symbol&quot;&gt;\f&lt;/span&gt;rac&amp;#123;e^&amp;#123;-2&lt;span class=&quot;symbol&quot;&gt;\p&lt;/span&gt;i&amp;#125;&amp;#125; &amp;#123;1+&lt;span class=&quot;symbol&quot;&gt;\f&lt;/span&gt;rac&amp;#123;e^&amp;#123;-4&lt;span class=&quot;symbol&quot;&gt;\p&lt;/span&gt;i&amp;#125;&amp;#125; &amp;#123;1+&lt;span class=&quot;symbol&quot;&gt;\f&lt;/span&gt;rac&amp;#123;e^&amp;#123;-6&lt;span class=&quot;symbol&quot;&gt;\p&lt;/span&gt;i&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;1+&lt;span class=&quot;symbol&quot;&gt;\f&lt;/span&gt;rac&amp;#123;e^&amp;#123;-8&lt;span class=&quot;symbol&quot;&gt;\p&lt;/span&gt;i&amp;#125;&amp;#125; &amp;#123;1+&lt;span class=&quot;symbol&quot;&gt;\l&lt;/span&gt;dots&amp;#125; &amp;#125; &amp;#125; &amp;#125; &lt;span class=&quot;symbol&quot;&gt;\\&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;行内公式： $&lt;span class=&quot;symbol&quot;&gt;\G&lt;/span&gt;amma(n) = (n-1)!&lt;span class=&quot;symbol&quot;&gt;\q&lt;/span&gt;uad&lt;span class=&quot;symbol&quot;&gt;\f&lt;/span&gt;orall n&lt;span class=&quot;symbol&quot;&gt;\i&lt;/span&gt;n&lt;span class=&quot;symbol&quot;&gt;\m&lt;/span&gt;athbb N$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;效果如下（&lt;code&gt;Preferences&lt;/code&gt; - &lt;code&gt;Themes&lt;/code&gt; - &lt;code&gt;Enable MathJax&lt;/code&gt; 才会看到效果）：&lt;/p&gt;
&lt;p&gt;块级公式：&lt;br&gt;$$  x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$&lt;/p&gt;
&lt;p&gt;\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =&lt;br&gt;1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}&lt;br&gt;{1+\frac{e^{-8\pi}} {1+\ldots} } } } \]&lt;/p&gt;
&lt;p&gt;行内公式： $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$&lt;/p&gt;
&lt;h2 id=&quot;脚注（Footnote）&quot;&gt;&lt;a href=&quot;#脚注（Footnote）&quot; class=&quot;headerlink&quot; title=&quot;脚注（Footnote）&quot;&gt;&lt;/a&gt;脚注（Footnote）&lt;/h2&gt;&lt;p&gt;Markdown 语法：&lt;/p&gt;
&lt;figure class=&quot;highlight accesslog&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;这是一个脚注：&lt;span class=&quot;string&quot;&gt;[^sample_footnote]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;p&gt;这是一个脚注：&lt;a href=&quot;这里是脚注信息&quot;&gt;^sample_footnote&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;注释和阅读更多&quot;&gt;&lt;a href=&quot;#注释和阅读更多&quot; class=&quot;headerlink&quot; title=&quot;注释和阅读更多&quot;&gt;&lt;/a&gt;注释和阅读更多&lt;/h2&gt;&lt;!-- comment --&gt;
&lt;!-- more --&gt;
&lt;p&gt;Actions-&amp;gt;Insert Read More Comment &lt;em&gt;或者&lt;/em&gt; &lt;code&gt;Command + .&lt;/code&gt;&lt;br&gt;&lt;strong&gt;注&lt;/strong&gt; 阅读更多的功能只用在生成网站或博客时。&lt;/p&gt;
&lt;h2 id=&quot;TOC&quot;&gt;&lt;a href=&quot;#TOC&quot; class=&quot;headerlink&quot; title=&quot;TOC&quot;&gt;&lt;/a&gt;TOC&lt;/h2&gt;&lt;p&gt;Markdown 语法：&lt;/p&gt;
&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[TOC]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;代码高亮&quot;&gt;&lt;a href=&quot;#代码高亮&quot; class=&quot;headerlink&quot; title=&quot;代码高亮&quot;&gt;&lt;/a&gt;代码高亮&lt;/h2&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;figcaption&gt;&lt;span&gt;代码高亮测试&lt;/span&gt;&lt;a href=&quot;http://octopress.org/docs/plugins/codeblock/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;link&lt;/a&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; + (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)addSpriteImage:(&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *)image withContentRect:(&lt;span class=&quot;built_in&quot;&gt;CGRect&lt;/span&gt;)rect toLayer:(&lt;span class=&quot;built_in&quot;&gt;CALayer&lt;/span&gt; *)layer &lt;span class=&quot;comment&quot;&gt;//set image&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     layer.contents = (__bridge &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)image.CGImage;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;//scale contents to fit&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    layer.contentsGravity = k&lt;span class=&quot;built_in&quot;&gt;CAGravityResizeAspect&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//set contentsRect&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    layer.contentsRect = rect;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; + (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad]; &lt;span class=&quot;comment&quot;&gt;//load sprite sheet&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; *image = [&lt;span class=&quot;built_in&quot;&gt;UIImage&lt;/span&gt; imageNamed:&lt;span class=&quot;string&quot;&gt;@&quot;image&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//set igloo sprite&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; addSpriteImage:image withContentRect:&lt;span class=&quot;built_in&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;) toLayer:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.iglooView.layer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//set cone sprite&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; addSpriteImage:image withContentRect:&lt;span class=&quot;built_in&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;) toLayer:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.coneView.layer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//set anchor sprite&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; addSpriteImage:image withContentRect:&lt;span class=&quot;built_in&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;) toLayer:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.anchorView.layer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//set spaceship sprite&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; addSpriteImage:image withContentRect:&lt;span class=&quot;built_in&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;) toLayer:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.shipView.layer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight pf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ (void)addSpriteImage:(UIImage *)image withContentRect:(CGRect)rect &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt;Layer:(CALayer *)layer //&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    layer.contents = (__bridge id)image.CGImage;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //scale contents &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; fit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    layer.contentsGravity = kCAGravityResizeAspect;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; contentsRect&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    layer.contentsRect = rect;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (void)viewDidLoad&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [super viewDidLoad]; //&lt;span class=&quot;built_in&quot;&gt;load&lt;/span&gt; sprite sheet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    UIImage *image = [UIImage imageNamed:@&lt;span class=&quot;string&quot;&gt;&quot;image&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; igloo sprite&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;literal&quot;&gt;self&lt;/span&gt; addSpriteImage:image withContentRect:CGRectMake(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt;Layer:&lt;span class=&quot;literal&quot;&gt;self&lt;/span&gt;.iglooView.layer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; cone sprite&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;literal&quot;&gt;self&lt;/span&gt; addSpriteImage:image withContentRect:CGRectMake(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt;Layer:&lt;span class=&quot;literal&quot;&gt;self&lt;/span&gt;.coneView.layer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;anchor&lt;/span&gt; sprite&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;literal&quot;&gt;self&lt;/span&gt; addSpriteImage:image withContentRect:CGRectMake(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt;Layer:&lt;span class=&quot;literal&quot;&gt;self&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;anchor&lt;/span&gt;View.layer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //&lt;span class=&quot;built_in&quot;&gt;set&lt;/span&gt; spaceship sprite&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;literal&quot;&gt;self&lt;/span&gt; addSpriteImage:image withContentRect:CGRectMake(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt;Layer:&lt;span class=&quot;literal&quot;&gt;self&lt;/span&gt;.shipView.layer];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o7279yd4s.bkt.clouddn.com/12944427,2560,1600.jpg&quot; alt=&quot;Image Test&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Markdown-的设计哲学&quot;&gt;&lt;a href=&quot;#Markdown-的设计哲学&quot; class=&quot;headerlink&quot; title=&quot;Markdown 的设计哲学&quot;&gt;&lt;/a&gt;Markdown 的设计哲学&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Markdown 的目標是實現「易讀易寫」。&lt;br&gt;不過最需要強調的便是它的可讀性。一份使用 Markdown 格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。&lt;br&gt;Markdown 的語法有個主要的目的：用來作為一種網路內容的&lt;em&gt;寫作&lt;/em&gt;用語言。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="测试" scheme="http://yoursite.com/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>GithubPages与Hexo搭建个人博客</title>
    <link href="http://yoursite.com/2015/11/10/GithubPages%E4%B8%8EHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2015/11/10/GithubPages与Hexo搭建个人博客/</id>
    <published>2015-11-10T09:24:03.000Z</published>
    <updated>2016-06-11T09:27:04.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;1-准备工作&quot;&gt;&lt;a href=&quot;#1-准备工作&quot; class=&quot;headerlink&quot; title=&quot;1.准备工作&quot;&gt;&lt;/a&gt;1.准备工作&lt;/h1&gt;&lt;p&gt;先安装好相关的工具，这里提供了brewhome安装和已经安装了Xcode的两种方式，下面两个二选一，这里墙裂推荐brewhome。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;1-1方式一-安装第三方包管理brewhome&quot;&gt;&lt;a href=&quot;#1-1方式一-安装第三方包管理brewhome&quot; class=&quot;headerlink&quot; title=&quot;1.1方式一:安装第三方包管理brewhome&quot;&gt;&lt;/a&gt;1.1方式一:安装第三方包管理brewhome&lt;/h2&gt;&lt;p&gt;首先安装好第三方包管理工具brewhome，方便后续软件的管理和安装。&lt;br&gt;直接一句命令搞定&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;     
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;1-2方式二-安装Xcode的命令行工具&quot;&gt;&lt;a href=&quot;#1-2方式二-安装Xcode的命令行工具&quot; class=&quot;headerlink&quot; title=&quot;1.2方式二:安装Xcode的命令行工具&quot;&gt;&lt;/a&gt;1.2方式二:安装Xcode的命令行工具&lt;/h2&gt;&lt;p&gt;提前安装好Xcode的 command line tools,同样一句话搞定&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;xcode-select --install
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;2-安装Git&quot;&gt;&lt;a href=&quot;#2-安装Git&quot; class=&quot;headerlink&quot; title=&quot;2.安装Git&quot;&gt;&lt;/a&gt;2.安装Git&lt;/h1&gt;&lt;p&gt;安装git的方式比较多，这里只提供两种，二选一即可，如果已经安装可以跳过。账号注册比较简单，就直接略过。&lt;/p&gt;
&lt;h2 id=&quot;2-1方式一-直接brewhome安装&quot;&gt;&lt;a href=&quot;#2-1方式一-直接brewhome安装&quot; class=&quot;headerlink&quot; title=&quot;2.1方式一:直接brewhome安装&quot;&gt;&lt;/a&gt;2.1方式一:直接brewhome安装&lt;/h2&gt;&lt;p&gt;依旧一句命令搞定&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo brew install git
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;2-2方式二-直接命令行安装&quot;&gt;&lt;a href=&quot;#2-2方式二-直接命令行安装&quot; class=&quot;headerlink&quot; title=&quot;2.2方式二:直接命令行安装&quot;&gt;&lt;/a&gt;2.2方式二:直接命令行安装&lt;/h2&gt;&lt;p&gt;前提已经安装好Xcode的Command Line Tools&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -O http://kernel.org/pub/software/scm/git/git-1.7.5.tar.bz2
tar xjvf git-1.7.4.1.tar.bz2
cd git-1.7.4.1
./configure --prefix=/usr/local
make
sudo make install
which git
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;3-Github的ssh设置&quot;&gt;&lt;a href=&quot;#3-Github的ssh设置&quot; class=&quot;headerlink&quot; title=&quot;3.Github的ssh设置&quot;&gt;&lt;/a&gt;3.Github的ssh设置&lt;/h1&gt;&lt;h2 id=&quot;3-1生成ssh的key&quot;&gt;&lt;a href=&quot;#3-1生成ssh的key&quot; class=&quot;headerlink&quot; title=&quot;3.1生成ssh的key&quot;&gt;&lt;/a&gt;3.1生成ssh的key&lt;/h2&gt;&lt;p&gt;输入以下命令生成ssh的key，引号内是你的github邮箱，如果已经配置完成，同样跳过。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh-keygen -t rsa -C &amp;quot;xxx@xxx.com”
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果出现以下提示，直接回车就好&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Generating public/private rsa key pair.
Enter file in which to save the key (/        your_home_path/.ssh/id_rsa):
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接着会显示一下信息，提示你输入两次密码，这个是在提交项目时输入的密码，不想设置的话可以直接回车跳过&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Enter passphrase (empty for no passphrase): [Type a passphrase]
Enter same passphrase again: [Type passphrase again]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后如果出现一下信息就表示设置成功&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Your identification has been saved in /your_home_path/.ssh/id_rsa.
Your public key has been saved in /your_home_path/.ssh/id_rsa.pub.
The key fingerprint is: 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;3-2添加SSH-key到自己的Github上&quot;&gt;&lt;a href=&quot;#3-2添加SSH-key到自己的Github上&quot; class=&quot;headerlink&quot; title=&quot;3.2添加SSH key到自己的Github上&quot;&gt;&lt;/a&gt;3.2添加SSH key到自己的Github上&lt;/h2&gt;&lt;p&gt;1,在完成上一步后，会生成一个.ssh的隐藏文件，这里直接输入以下命令打开后全选复制里面的内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~/.ssh
open -e id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2,接着登陆github，按照以下步骤&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1,点击右上角的头像图标 Settings—-&amp;gt;SSH keys —-&amp;gt; add SSH keys&lt;/p&gt;
&lt;p&gt;2,把刚刚复制的内容粘贴到key里，title随便填&lt;/p&gt;
&lt;p&gt;3,点击add SSH，这就完成了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3,本地测试，直接复制以下命令到命令行回车，不用修改下面的邮箱&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh -T git@github.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果看到下面的提示，则是提醒你网站证书未验证而已，直接输入yes后回车就行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;The authenticity of host &amp;apos;github.com (207.97.227.239)&amp;apos; can&amp;apos;t be established.
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)?
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后看到以下提示，标明ssh的key设置成功&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Hi username! You&amp;apos;ve successfully authenticated, but GitHub does not provide shell access.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后设置一下自己的个人信息，用于push提交内容时记录提交者信息，就完成了，引号内的内容自行修改&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git config --global user.name &amp;quot;your user_name&amp;quot;
git config --global user.email &amp;quot;your_email@example.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;4-安装Node-js&quot;&gt;&lt;a href=&quot;#4-安装Node-js&quot; class=&quot;headerlink&quot; title=&quot;4.安装Node.js&quot;&gt;&lt;/a&gt;4.安装Node.js&lt;/h1&gt;&lt;p&gt;同样提供两种方式，二选一即可&lt;/p&gt;
&lt;h2 id=&quot;4-1方式一-直接brewhome安装&quot;&gt;&lt;a href=&quot;#4-1方式一-直接brewhome安装&quot; class=&quot;headerlink&quot; title=&quot;4.1方式一:直接brewhome安装&quot;&gt;&lt;/a&gt;4.1方式一:直接brewhome安装&lt;/h2&gt;&lt;p&gt;一句命令搞定&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;brew install node
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;4-2方式二-直接命令行安装&quot;&gt;&lt;a href=&quot;#4-2方式二-直接命令行安装&quot; class=&quot;headerlink&quot; title=&quot;4.2方式二:直接命令行安装&quot;&gt;&lt;/a&gt;4.2方式二:直接命令行安装&lt;/h2&gt;&lt;p&gt;这里要求已经安装Xcode命令行工具和git,即已经完成以上步骤&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone git://github.com/joyent/node.git
cd node
./configure
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;5-安装hexo&quot;&gt;&lt;a href=&quot;#5-安装hexo&quot; class=&quot;headerlink&quot; title=&quot;5.安装hexo&quot;&gt;&lt;/a&gt;5.安装hexo&lt;/h1&gt;&lt;p&gt;这里也提供两种方式，直接用node的npm安装和源码下载编译，以下同样二选一&lt;/p&gt;
&lt;h2 id=&quot;5-1方式一-直接npm安装&quot;&gt;&lt;a href=&quot;#5-1方式一-直接npm安装&quot; class=&quot;headerlink&quot; title=&quot;5.1方式一:直接npm安装&quot;&gt;&lt;/a&gt;5.1方式一:直接npm安装&lt;/h2&gt;&lt;p&gt;完成以上步骤安装了node的情况下，同样一句话搞定&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install -g hexo 
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;5-2方式二-源码下载编译&quot;&gt;&lt;a href=&quot;#5-2方式二-源码下载编译&quot; class=&quot;headerlink&quot; title=&quot;5.2方式二:源码下载编译&quot;&gt;&lt;/a&gt;5.2方式二:源码下载编译&lt;/h2&gt;&lt;p&gt;直接使用以下命令下载编译源码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --prefix=~/nodejs &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install
cp ~/nodejs/bin/node /usr/sbin/node
~/nodejs/bin/npm install -g hexo
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&quot;6-生成hexo博客文件&quot;&gt;&lt;a href=&quot;#6-生成hexo博客文件&quot; class=&quot;headerlink&quot; title=&quot;6.生成hexo博客文件&quot;&gt;&lt;/a&gt;6.生成hexo博客文件&lt;/h1&gt;&lt;p&gt;完成以上步骤后，cd命令进入到要存放博客的目录,用以下命令生成hexo博客相关文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo init
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接着安装下依赖&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install
npm install hexo-renderer-ejs --save
npm install hexo-renderer-stylus --save
npm install hexo-renderer-marked --save
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接着修改hexo根目录下_config.yml文件（xxx为你的github账户名称）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deploy:
       type: git
       repo: git@github.com:xxx/xxx.github.io.git
      branch: master
      message: 博客迁移测试        #提交的注释内容
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后直接输入以下命令，在本地预览博文&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo g
hexo s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果查看没问题，直接输入以下命令提交&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo d -g
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注：因为目前用npm下载的hexo是最新的3.x版本，所以在配置完yml文件，执行 hexo deploy后,可能出现 error deployer not found:github 的错误，这时候直接 cd进入生成hexo的博文目录，输入以下命令即可&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install hexo-deployer-git --save
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-准备工作&quot;&gt;&lt;a href=&quot;#1-准备工作&quot; class=&quot;headerlink&quot; title=&quot;1.准备工作&quot;&gt;&lt;/a&gt;1.准备工作&lt;/h1&gt;&lt;p&gt;先安装好相关的工具，这里提供了brewhome安装和已经安装了Xcode的两种方式，下面两个二选一，这里墙裂推荐brewhome。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
